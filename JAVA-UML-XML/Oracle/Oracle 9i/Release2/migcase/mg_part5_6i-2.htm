<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<HTML>

<HEAD>
	<META HTTP-EQUIV="Content-Type" CONTENT="text/html;CHARSET=iso-8859-1">
<META NAME="VPSiteProject" CONTENT="file:///D|/6i-2_migration-guide/migration_guide_vpp/6i-2_migration_guide.vpp">

	<META NAME="GENERATOR" Content="Visual Page 2.0 for Windows">
	<TITLE>Oracle Designer 6i Migration Guide Part 5</TITLE>
	<LINK REL="stylesheet" TYPE="text/css" HREF="feb2002.css">
</HEAD>

<BODY>

<P>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" WIDTH="96%" summary>
	<TR>
		<TD ALIGN="LEFT" VALIGN="TOP">
			<P><B><SPAN CLASS="header">Oracle Designer 6<I>i </I>Migration Guide<BR>
			Part 5. Migrating generated Web/PLSQL applications to Oracle Designer 6<I>i</I></SPAN></B>
		</TD>
		<TD ALIGN="RIGHT" VALIGN="BOTTOM">
			<DIV ALIGN="RIGHT">
				<DIV ALIGN="RIGHT">
					<DIV ALIGN="RIGHT">
						<DIV ALIGN="RIGHT">
							<DIV ALIGN="RIGHT">
								<DIV ALIGN="RIGHT">
									<DIV ALIGN="RIGHT">
										<DIV ALIGN="RIGHT">
											<DIV ALIGN="RIGHT">
												<DIV ALIGN="RIGHT">
													<DIV ALIGN="RIGHT">
														<DIV ALIGN="RIGHT">
															<DIV ALIGN="RIGHT">
																<DIV ALIGN="RIGHT">
																	<DIV ALIGN="RIGHT">
																		<DIV ALIGN="RIGHT">
																			<DIV ALIGN="RIGHT">
																				<DIV ALIGN="RIGHT">
																					<DIV ALIGN="RIGHT">
																						<DIV ALIGN="RIGHT">
																							<DIV ALIGN="RIGHT">
																								<DIV ALIGN="RIGHT">
																									<DIV ALIGN="RIGHT">
																										<DIV ALIGN="RIGHT">
																											<DIV ALIGN="RIGHT">
																												<DIV ALIGN="RIGHT">
																													<DIV ALIGN="RIGHT">
																														<DIV ALIGN="RIGHT">
																															<DIV ALIGN="RIGHT">
																																<DIV ALIGN="RIGHT">
																																	<DIV ALIGN="RIGHT">
																																		<DIV ALIGN="RIGHT">
																																			<DIV ALIGN="RIGHT">
																																				<DIV ALIGN="RIGHT">
																																					<DIV ALIGN="RIGHT">
																																						<DIV ALIGN="RIGHT">
																																							<DIV ALIGN="RIGHT">
																																								<DIV ALIGN="RIGHT">
																																									<DIV ALIGN="RIGHT">
																																										<DIV ALIGN="RIGHT">
																																											<DIV ALIGN="RIGHT">
																																												<DIV ALIGN="RIGHT">
																																													<DIV ALIGN="RIGHT">
																																														<DIV ALIGN="RIGHT">
																																															<DIV ALIGN="RIGHT">
																																																<DIV ALIGN="RIGHT">
																																																	<DIV ALIGN="RIGHT">
																																																		<DIV ALIGN="RIGHT">
																																																			<DIV ALIGN="RIGHT">
																																																				<DIV ALIGN="RIGHT">
																																																					<DIV ALIGN="RIGHT">
																																																						<DIV ALIGN="RIGHT">
																																																						<P>
																																																						<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" summary>
																																																							<TR>
																																																								<TD ALIGN="CENTER" VALIGN="TOP">
																																																									<P ALIGN="CENTER"><A HREF="mg_toc_6i-2.htm"><IMG SRC="images/conticon.gif" WIDTH="30" HEIGHT="30" ALIGN="BOTTOM"
																																																									ALT="Contents icon" BORDER="0"></A>
																																																								</TD>
																																																							</TR>
																																																							<TR>
																																																								<TD>
																																																									<P ALIGN="CENTER"><A HREF="mg_toc_6i-2.htm"><SPAN CLASS="copyright">Contents</SPAN></A>
																																																								</TD>
																																																							</TR>
																																																						</TABLE>

</DIV>
																																																					</DIV>
																																																				</DIV>
																																																			</DIV>
																																																		</DIV>
																																																	</DIV>
																																																</DIV>
																																															</DIV>
																																														</DIV>
																																													</DIV>
																																												</DIV>
																																											</DIV>
																																										</DIV>
																																									</DIV>
																																								</DIV>
																																							</DIV>
																																						</DIV>
																																					</DIV>
																																				</DIV>
																																			</DIV>
																																		</DIV>
																																	</DIV>
																																</DIV>
																															</DIV>
																														</DIV>
																													</DIV>
																												</DIV>
																											</DIV>
																										</DIV>
																									</DIV>
																								</DIV>
																							</DIV>
																						</DIV>
																					</DIV>
																				</DIV>
																			</DIV>
																		</DIV>
																	</DIV>
																</DIV>
															</DIV>
														</DIV>
													</DIV>
												</DIV>
											</DIV>
										</DIV>
									</DIV>
								</DIV>
							</DIV>
						</DIV>
					</DIV>
				</DIV>
			</DIV>
		</TD>
	</TR>
</TABLE>

<HR ALIGN="CENTER">
</P>
<P><A HREF="mg_part4_6i-2.htm"><IMG SRC="images/larrow.gif" WIDTH="30" HEIGHT="30" ALIGN="BOTTOM" ALT="Prev" BORDER="0"></A><A
HREF="mg_appendix-a_6i-2.htm"><IMG SRC="images/rarrow.gif" WIDTH="30" HEIGHT="30" ALIGN="BOTTOM" ALT="Next" BORDER="0"></A></P>
<H1><A NAME="Chapter%201.%20Introduction"></A>Chapter 1 Introduction</H1>
<P>This migration guide provides the information necessary for upgrading Web/PLSQL Applications that were designed
and generated using earlier releases of Designer to Oracle Designer 6i.</P>
<P>The document discusses migration from the following earlier releases:</P>

<UL>
	<LI>1.3.2
	<LI>2.1.2
	<LI>6.0
</UL>

<P>This document assumes that you have already installed Oracle Designer 6i and migrated your repository.&nbsp;
(See instructions in <A HREF="mg_part2_6i-2.htm">Part 2</A> of this Migration Guide.)&nbsp; The document then explains
steps you have to take so that you can:</P>

<UL STYLE="&quot                ; %1\:1\:4\:\)&quot                ; &quot                ; Martin Wykes&quot                ; 20020222T1510">
	<LI>generate your application from Oracle Designer 6i and achieve the same generated results you had from earlier
	releases, and
</UL>


<UL STYLE="&quot                ; %1\:2\:4\:\)&quot                ; &quot                ; Martin Wykes&quot                ; 20020222T1510">
	<LI>take advantage of new features that have been added to Designer since your previous release.
</UL>

<P>Throughout the document, special mention is made of any migration issues known at the time of publication of
this document.</P>
<P>There are a number of migration scenarios that are possible in bringing your Designer generated Web PL/SQL application
forward into 6i.&nbsp;</P>
<H2><A NAME="Scenario%201. %20Migrate,%20Regenerate"></A>Scenario 1.&nbsp; Migrate, Regenerate All, No Redesign</H2>
<P>In this scenario, you will regenerate all of your Web/PLSQL application from Designer 6i.</P>
<P>The goal of this scenario is to be able to generate your Web/PLSQL application out of Designer 6i and achieve
the same results you got when generating out of your previous Designer release.&nbsp; No attempt is made to redesign
your existing Web/PLSQL application to make use of new features available in Designer 6i.</P>
<P>This scenario has the following characteristics:</P>

<UL>
	<LI>If you have minimal post-generation changes, scenario 1 is fast and requires minimal changes in the Web/PLSQL
	application definition in the Oracle Designer repository.
	<LI>Scenario 1 uses your existing module definitions and any custom framesets or templates without changes.
	<LI>Scenario 1 does not take advantage of many new Web/PLSQL features in Designer 6<I>i</I>. It is merely a 'technical'
	upgrade.&nbsp; Some new features will be implemented as part of this upgrade.
</UL>

<P>This scenario is appropriate when:</P>

<UL>
	<LI>Your application is already in production.
	<LI>Your application is stable, no major functional modifications are expected.
	<LI>Maintenance is limited to simple bug fixing.
	<LI>Your application is 100% generated, or post-generation modifications are minor.
</UL>

<H2><A NAME="Scenario%202. %20Migrate,%20Regenerate"></A>Scenario 2.&nbsp; Migrate, Regenerate All, With Redesign</H2>
<P>In this scenario, you will regenerate your entire Web/PLSQL application from Designer 6i.&nbsp; As you regenerate
each Web/PLSQL module, you will make use of new features as appropriate.</P>
<P>The goal of this scenario is to take advantage of the new Web/PLSQL features available in Designer 6i.&nbsp;
As with Scenario 1, you want to be able to generate your Web/PLSQL application and get the same user interface
you got from your previous release of Designer.&nbsp; However, many new Web/PLSQL features have been added to Designer
to make achieving the desired result easier.&nbsp; Many features that were difficult or impossible to generate
with earlier releases of Designer are now supported.&nbsp; Thus, in one pass, you can eliminate post generation
modifications and difficult constructs that were used only to work around limitations of earlier releases of Designer.</P>
<P>This scenario has the following characteristics:</P>

<UL>
	<LI>Scenario 2 requires a review of security implementation.
	<LI>Scenario 2 requires modifications in many module definitions, and is therefore more time-consuming.
	<LI>Scenario 2 fully leverages the new Web/PLSQL features in Oracle Designer 6<I>i</I>.
</UL>

<P>This scenario is appropriate when:</P>

<UL>
	<LI>Your application is still in development.
	<LI>Your application is in production, but major functional modifications are to be made, or expected.
	<LI>Your application requires modifications (e.g. security) which can only be implemented using new functionality
	in Designer.
	<LI>Your application has been heavily modified post-generation, but the majority of the modifications are no longer
	needed due to the new Web/PLSQL functionality in Designer.
</UL>

<H2><A NAME="Scenario%203. %20Migrate,%20Regenerate"></A>Scenario 3.&nbsp; Migrate, Regenerate Incrementally</H2>
<P>This is the most complex scenario.&nbsp; In this scenario, you will migrate your application a little at a time,
rather than all at once.&nbsp;<A NAME="5-1"></A> You will begin by migrating your application to a 8i Database
in a schema specific way, or create a database link and appropriate synonyms to your new database schema.&nbsp;
You will then make the changes required to run the application generated from your previous release of Designer
alongside Web/PLSQL applications generated from Designer 6i.&nbsp; Finally, over some arbitrarily long period of
time, you will regenerate all of your modules out of Designer 6i.</P>
<P>The goal of this scenario is to allow you to regenerate your whole application, taking into account new features,
but in such a way that you do not have to migrate your entire application in one go.&nbsp; This means you will
be able to move the deployed application to the new tool stack before you have completely migrated every module.&nbsp;
Thus, you can continue with bug fixes and new development in parallel with the continuing migration effort.</P>
<P>This scenario has the following characteristics:</P>

<UL>
	<LI>Scenario 3 allows you to perform a phased migration.&nbsp; You can take advantage of the new Designer features
	right away, without the need to regenerate all your modules at once.
</UL>

<P>This scenario is appropriate when:</P>

<UL>
	<LI>Your application is in production, but major functional modifications are to be made, or expected.
	<LI>Your application requires modifications (e.g. security) which can only be implemented using new functionality
	in Designer.
	<LI>Your application is too large to migrate in one big-bang.
</UL>

<H2><A NAME="Scenario%204. %20Database%20Migration%20"></A>Scenario 4.&nbsp; Database Migration Only</H2>
<P>The first 3 scenarios all eventually require you to regenerate your application. &nbsp;Any post-generation modifications
will be lost. If you heavily modified your application post-generation, and the characteristics of Scenario 1 apply
to your situation, you might consider only upgrading the database environment to 6<I>i</I>, and not upgrading to
Oracle Designer 6i. &nbsp;This implies that all future maintenance has to be done manually in PL/SQL.</P>
<P>This migration guide does not cover 6<I>i</I> database migration.&nbsp; It will, however, discuss modifications
that will allow you to continue to run your generated Web/PLSQL modules alongside other applications. For information
on migrating to a 6i database, see <A HREF="mg_part3_6i-2.htm">Part 3</A> of this migration guide.</P>
<P>Note that, even though you may choose not to use Oracle Designer 6i for continued module generation, you may
still use Oracle Designer 6i to maintain your database definitions.&nbsp; You may also choose to use the Software
Configuration Management features of Oracle Designer 6i to manage your application source code. In that case you
could bring in the previously generated and adapted packages as files in the repository and maintain these files
for future enhancements and/or fixes. Note that in addition you can parse these packages - stored as files - for
dependencies with the Dependency Manager for impact analysis.</P>
<P>For information on Software Configuration Management with Oracle Designer 6i, see the Oracle Technology Network
at <A HREF="http://otn.oracle.com/products/repository" target="_blank">http://otn.oracle.com/products/repository</A>.</P>
<P><A NAME="5-2"></A>Note that all scenarios result in an actual usage of Oracle 9i and Oracle Designer 6i and
therefore you will be optimally serviced by Oracle Support on your Oracle tool stack, i.e., you do not need to
implement costly workarounds, you can simply profit from regularly released patches.&nbsp;</P>
<H1><A NAME="Chapter%202.%20Designer%209i%20New%20Featu"></A>Chapter 2 Oracle Designer 6i New Features</H1>
<P>Depending on which Designer release you are coming from, many Web/PLSQL features of Oracle Designer 6i may be
new to you.&nbsp;</P>
<P>This chapter presents a brief overview of new features that are of particular interest when migrating a generated
Web/PLSQL application.&nbsp; It is by no means an exhaustive list of all new features, and it does not try to explain
each new feature in detail.&nbsp; Rather, it introduces the relevant features, and points you to where you can
find more information in the Oracle Designer 6i online help.&nbsp; These new features may be referenced in the
appropriate migration steps of the following chapters.</P>
<P>This chapter is organized by Designer release.&nbsp; You should begin reading at the section for your &quot;from&quot;
Designer release, and then continue reading the sections for any later releases.&nbsp; For example, if you are
migrating from Designer 1.3.2,&nbsp; you need to read all four sections below.&nbsp; If you are migrating from
Designer 2.1.2, you may skip the section on Designer 1.3.2 and read the sections for Designer 2.1.2 and 6.0.</P>
<H2><A NAME="5-Migrating%20from%20Designer%201.3.2"></A>Migrating from Designer 1.3.2</H2>
<H3><A NAME="5-Design%20Editor"></A>Design Editor</H3>
<P>See <A HREF="#Chapter%203.%20General%20Migration%20Iss">Part 4, Chapter 3</A> of this migration guide for a
general overview of these new features.</P>
<H3><A NAME="5-Module%20Components"></A>Module Components</H3>
<P>See <A HREF="#Chapter%203.%20General%20Migration%20Iss">Part 4, Chapter 3</A> of this migration guide for a
general overview of these new features.</P>
<H3><A NAME="5-Preferences"></A>Preferences</H3>
<P>Oracle Designer 6i has added many new preferences.&nbsp; These preferences allow for greater flexibility in
layout and provide for new methods of security.</P>
<H3><A NAME="5-TAPI/Triggers"></A>TAPI/Triggers</H3>
<P>Designer 1.3.2 introduced the concept of a Table API (TAPI) specifically for the WebServer Generator.&nbsp;
The WebSever Generator utilized the TAPI to do any inserts, updates or deletes (and some selects) against a table.&nbsp;
The TAPI auto-generated primary keys associated with sequences and audit columns, and allowed you to place your
own specific code within the TAPI.&nbsp; The TAPI was not utilized with any other Designer generator.&nbsp; Beginning
with Designer 2.1.2, the TAPIs became an integral part with other generators and were associated with table triggers,
causing the TAPI code to be run during any insert, update or delete.&nbsp; Oracle Designer 6i has additional custom
code placement options within the TAPI and auto-generates more functionality, including enforcing arcs, etc.</P>
<H2><A NAME="5-Migrating%20from%20Designer%202.1.2/6."></A>Migrating from Designer 2.1.2/6.0</H2>
<P>This section describes migrating from Designer 2.1.2 or 6.0.&nbsp; If you are already at 6i please skip this
section.</P>
<H3><A NAME="from21260LOV%20components"></A>LOV components</H3>
<P>Oracle Designer 6i departs from the use of lookup table usages to drive LOVs.&nbsp; LOVs can now be created
as specific, reusable components and attached to an element.&nbsp; This provides for more flexibility and the ability
to drive the LOV from a custom query.&nbsp; This is particularly helpful in the WebServer Generator in that it
allows you to better define the look of Poplist type LOVs.</P>
<H3><A NAME="from21260All_domains%20Table"></A>All_domains Table</H3>
<P>Prior to Designer 6i, the CG_REF_CODES table provided the only structured reusable table for multiple lookup
types.&nbsp; This limited its usefulness to only lookups that fit within the column structure of CG_REF_CODES.
&nbsp;The All Domains table feature extends this type of functionality to a table that can be custom designed to
meet the needs of your application.&nbsp; Coupled with Reusable LOV components this becomes a very powerful new
feature.</P>
<H3><A NAME="from21260Reusable%20Modules"></A>Reusable Modules</H3>
<P>Reusable Modules allow you to define a module with base table usages, associated lookups, etc., and the re-use
this definition in multiple generated modules.&nbsp; This provides enhanced standardization.</P>
<H3><A NAME="from21260Preferences"></A>Preferences</H3>
<P>Oracle Designer 6i adds substantially to the preferences available for WebServer Generator modules.&nbsp; These
preferences provide better control over layout and provide the ability to maintain context between modules.&nbsp;
Because the web is stateless, information that may have been available in a previous module in the hierarchy may
not be available in the current module.&nbsp; The Master Context section of the generator preferences provides
a way to ensure context is available to subsequent modules.&nbsp; Please see the Oracle Designer 6i online help
for more information on new preferences.</P>
<H3><A NAME="from21260Multi-Row%20Screens"></A>Multi-Row Screens</H3>
<P>Oracle Designer 6i will generate multi-row screens to provide inserts, updates and deletes across multiple rows.&nbsp;
This is determined at the module level.</P>
<H2><A NAME="5-Migrating%20from%20Designer%206i"></A>Oracle Portal portlets generation</H2>
<P><A NAME="5-3"></A>Since Designer 6i release 4 you are able to generate more functional Oracle Portal portlets.
Please see the Oracle Designer 6i documentation for more information on this feature.</P>
<H1><A NAME="Chapter%203.%20General%20Migration%20Iss"></A>Chapter 3 General Migration Issues</H1>
<P>This section will review issues that may arise with migrating from any previous release of Designer to Oracle
Designer 6i.&nbsp; The following sections will deal with specifics of each release.&nbsp; For completeness, you
may wish to read the sections regarding earlier releases than your own.</P>
<P>There are a number of actions you must take regardless of which migration scenario you choose.</P>
<P>This chapter is organized by Designer release.&nbsp; You should begin reading at the section for your &quot;from&quot;
Designer release, and then continue reading the sections for any later releases.&nbsp; For example, if you are
migrating from Designer 1.3.2, you need to read all sections below.&nbsp; If you are migrating from Designer 2.1.2,
you may skip the section on Designer 1.3.2 and read the sections for Designer 2.1.2 and 6.0.</P>
<H2><A NAME="ch3Migrating%20from%201.3.2,%202.1.x,%206.0"></A>Migrating from 1.3.2, 2.1.x, 6.0</H2>
<P>This section covers general migration issues when migrating from Designer Release 1.3.2, 2.1.x and 6.0.&nbsp;</P>
<H3><A NAME="ch3Perform%20a%20backup%20of%20your%20databas"></A>Perform a backup of your database schema that captures
the Web-PL/SQL components</H3>
<P>In all cases perform a complete backup of your database and export of any affected schemas.</P>
<H3><A NAME="ch3Web%20PL/SQL%20Generator%20Libraries"></A>Web PL/SQL Generator Libraries</H3>
<P>You will need to upgrade the associated libraries for the Web PL/SQL generator (wsgl, wsglm, cg$errors, etc.).
Because you will be regenerating all components, there is no need to run the existing version of these packages
alongside the new versions.&nbsp; In other scenarios you will be required to maintain both sets of packages.</P>
<P>WSGLM is often modified to provide messages tuned to your applications.&nbsp; Any changes to your existing WSGLM
will need to be re-applied to the Oracle Designer 6i WSGLM package.</P>
<P>Occasionally changes might have been made to other library packages.&nbsp; Some of these changes may need to
be reapplied, where others may not be needed due to new functionality within the product. For example, Designer
1.3.2 matched case on queries.&nbsp; The dynamic build_where_clause could be modified to overcome this.&nbsp; In
Oracle Designer 6i there is an option to perform case insensitive queries (the default is case insensitive).</P>
<P>Depending upon the number of existing applications, you might have multiple copies of the WSGL libraries.&nbsp;
By default, Oracle Designer 6i will install these libraries in one location (schema).&nbsp; If the schema has sufficient
privileges, the installation will grant execute on these libraries to public and create public synonyms.&nbsp;
In some cases you may prefer to have multiple copies of the libraries for use by different application systems.&nbsp;
This can be done by installing the copies in separate schemas and pointing the application schemas to the appropriate
library schema by use of private synonyms.</P>
<H3><A NAME="ch3Security"></A>Security</H3>
<P>Designer 1.3.2 and 2.1.2/6.0 were typically run using either the Oracle Application Server PL/SQL cartridge
or the WebDB listener.&nbsp; In both cases you had two methods of configuring the database login to run the generated
PL/SQL components:</P>

<OL>
	<LI>single user login, and
	<LI>database authentication (provide a basic authentication login screen and login to the database with the supplied
	username and password).&nbsp;
</OL>

<P>In Oracle Designer 6i, there are new security features that should be considered.&nbsp; In Scenario 1 we assume
that you will utilize your existing access and security methods.&nbsp; The new features are discussed in <A HREF="#Chapter%205.%20Scenario%202%7C %20Migrate,">Chapter
5</A> &quot;Migrate, Regenerate All with Redesign&quot;.</P>

<P>Regardless of which scenario you approach, you will need a good understanding of your existing access and security
mechanism.&nbsp; At a minimum you should determine your DAD settings and note any schemas and roles that are associated
with securing your existing PL/SQL packages that comprise Web PL/SQL modules.</P>
<P>Designer 2.1.2/6.0 and 6i Web PL/SQL Generator utilizes a checksum routine to secure access to specific records.&nbsp;
Regardless or the version of Designer, it is a good idea to change the function WSGL.CHECKSUM slightly so that
your checksum is different than the default shipped.&nbsp; The easiest method is to change the mod number in the
function, WSGL.CHECKSUM, from 4294967296 to some other large number.&nbsp; As you will be installing a new version
of the libraries, specifically WSGL, previous changes to WSGL.CHECKSUM must be re-applied.</P>
<H3><A NAME="ch3Application%20Server%20Choice"></A>Application Server Choice</H3>
<P><A NAME="5-4"></A>Designer 1.3.2, and 2.1.2/6.0 WebServer Generator applications were typically run with the
OAS PL/SQL Cartridge or the WebDB Listener.</P>
<P>Although you can continue to use your existing Application Server, Oracle Designer 6i applications are likely
to be run with Oracle 9i Application Server utilizing MODPLSQL.&nbsp; In general, the configuration of web pl/sql
modules is very similar.</P>
<P>The DAD configuration information can be found in the file $ORACLE_HOME/Apache/modplsql/cfg/wdbsvr.app.&nbsp;
Beginning with Oracle 9iAS <BR>
1.0.2.2 the DAD password is encrypted within this file.&nbsp; The browser interface to configure this file is found
at <BR>
http://yourmachine:port/pls/admin_/gateway.htm where your machine is the machine name where Oracle 9iAS is installed.</P>
<P>After installing Oracle 9iAS, make a copy of the file $ORACLE_HOME/Apache/Apache/conf/httpd.conf</P>
<P>Modify this file and change the line</P>
<P>defaultType&nbsp; text/ascii</P>
<P>to</P>
<P>defaultType text/html&quot;</P>
<P>The application server will then treat unknown content type as html.&nbsp; On rare occasions, with defaultType
set to text/ascii, the html code generated by Designer WebServer Generator will be displayed as ascii text rather
than an html page.</P>
<H1><A NAME="Chapter%204.%20Scenario%201| %20Migrate,"></A>Chapter 4 Scenario 1:&nbsp; Migrate, Regenerate All,
No Redesign</H1>
<P>In this scenario, you will regenerate your entire application from Oracle Designer 6i, including all Web/PLSQL,
libraries, menus and reports.</P>
<P>The goal of this scenario is to be able to generate your application out of Oracle Designer 6i and achieve the
same results you got when generating out of your previous Designer release.&nbsp; No attempt is made to redesign
your existing application to make use of new features available in Oracle Designer 6i.</P>
<P>This chapter is organized by Designer release.&nbsp; You should begin reading at the section for your &quot;from&quot;
Designer release, and then continue reading the sections for any later releases.&nbsp; For example, if you are
migrating from Designer 1.3.2, you need to read all sections below.&nbsp; If you are migrating from Designer 2.1.2,
you may skip the section on Designer 1.3.2 and read the sections for Designer 2.1.2 and 6.0.</P>
<P>This chapter assumes that you have performed all the actions described in Chapter 3, General Migration Scenarios.</P>
<H2><A NAME="ch4Migrating%20from%201.3.2"></A>Migrating from 1.3.2</H2>
<P>In most cases, migrating your 1.3.2 application to 6i will go smoothly.&nbsp; There are four specific areas
that may cause difficulty: module level security (z_chk), utilizing calls to underlying values, return links and
Table APIs.</P>
<H3><A NAME="ch4Module%20Level%20Security"></A>Module Level Security</H3>
<P>Designer WebServer Generator modules utilize Query, List, Detail.&nbsp; A user is first presented with a Query
Screen, then a list of items that match the criteria, and ultimately a detail screen that typically allows update.&nbsp;
In many cases, the list screen will always be limited by a fixed where clause in the module.&nbsp; Releases of
Designer 2.1.2 onwards implement a security check to ensure that users do not access the detail screen directly
by changing the url.&nbsp; Designer utilizes a checksum value (Z_CHK) to enforce this.&nbsp; Every link on the
list screen has Z_CHK=#####.&nbsp; The detail page checks to see that this checksum value is correct.</P>
<P>If you have defined your own method of calling a component based upon the URL, you will need to modify these
calls to implement Z_CHK or turn off Z_CHK.&nbsp; You can turn off Z_CHK by setting the preference SECECS (Enforce
URL Checksums) to No.&nbsp; Please see the Oracle Designer 6i online help for specifics on how to call wsgl.checksum
to implement Z_CHK from your own code.</P>
<P>Note: It is a good idea to change the function WSGL.CHECKSUM slightly so that your checksum is different than
the default shipped.&nbsp; The easiest method is to change the mod number in the package (4294967296) to some other
large number.</P>
<H3><A NAME="ch4Utilizing%20Calls%20to%20Underlying%20Va"></A>Utilizing Calls to Underlying Values</H3>
<P>In all releases of Designer you could reference values from routines placed in the user text area.&nbsp; This
was not explicitly stated in release 1.3.2 and there were no APIs or standards set forth for doing so.&nbsp; Hence,
calls made to these underlying values, by use of form_val.field_name, etc., will likely fail in the migrated application.
Oracle Designer 6i specifies the use of these values.&nbsp; Please see the Oracle Designer 6i online help for more
information on accessing these values.</P>
<H3><A NAME="ch4Return%20Links"></A>Return Links</H3>
<P>Designer 2.1.2 and onward provide return links to allow the user to select a link to return to previous modules
in the hierarchy.&nbsp; Because this was not available in earlier releases, the existing application may have coded
return links in the user text area.&nbsp; You can turn off return links with the preference MODBRL (Build Return
Hyperlinks).</P>
<H3><A NAME="ch4Table%20APIs"></A>Table APIs</H3>
<P>Designer 1.3.2 required Table APIs (TAPIs) only for WebServer Generator applications.&nbsp; With Oracle Designer
6i the default is to have all transactions run the logic present within a TAPI.&nbsp; Hence, any code that is currently
in the TAPIs will be run for all transactions regardless of the application.&nbsp; This is implemented through
the use of table level triggers.&nbsp; You can disable this feature by deselecting the Generate Table API Triggers
checkbox in the Generate Table API Definitions dialog box during generation.&nbsp; Other types of applications,
however, may wish to make use of the TAPIs, hence, it is a better practice to move any code specific to Web PL/SQL
modules out of the TAPIs and into the modules itself.&nbsp; Oracle Designer 6i has many new trigger points within
the module to accept this code.</P>
<H2><A NAME="ch4Migrating%20from%202.1.2/6.0"></A>Migrating from 2.1.2/6.0</H2>
<P>In most cases, migrating your 2.1.2/6.0 application to 6i will go smoothly.&nbsp; There are two specific areas
that may cause difficulty: utilizing calls to underlying values, and Table APIs.</P>
<H3><A NAME="ch4from21260Utilizing%20Calls%20to%20Underlying%20Va"></A>Utilizing Calls to Underlying Values</H3>
<P>In all releases of Designer you could reference values from routines placed in the user text area.&nbsp; In
many cases the format of calls or local access to these underlying values may have changed; calls made to these
underlying values, by use of form_val.field_name, etc., will likely fail in the migrated application. Oracle Designer
6i specifies the use of these values.&nbsp; Please see the Oracle Designer 6i online help for more information
about accessing these values.</P>
<P>Additionally, Oracle Designer 6i provides a preference for bringing master level information into detail blocks
of a module.&nbsp; These preferences can be found in the Master Context area of the Web PL/SQL Generator preferences.</P>
<H3><A NAME="ch4from21260Table%20APIs"></A>Table APIs</H3>
<P>Designer 2.1.2/6.0 virtually insisted that you install triggers that implemented the TAPIs for all transactions.&nbsp;
Oracle Designer 6i allows you to bypass generation of these triggers.&nbsp; In general it will not affect your
Web PL/SQL applications if you do not generate these triggers.&nbsp; It may, however, allow the data to become
inconsistent to what is expected from your application.&nbsp; Be sure to consider carefully the affect of not having
the TAPIs fire for all transactions before deselecting the Table API Triggers checkbox in the Generate Table API
Definitions dialog box during generation.</P>
<H1><A NAME="Chapter%205.%20Scenario%202| %20Migrate,"></A>Chapter 5 Scenario 2:&nbsp; Migrate, Regenerate All,
with Redesign</H1>
<P>In this scenario, you will regenerate your entire application from Oracle Designer 6i, including all Web/PLSQL,
libraries, menus and reports.&nbsp; As you regenerate each module, you will make use of new features as appropriate.</P>
<P>The goal of this scenario is to take advantage of the new features available in Oracle Designer 6i.&nbsp; As
with Scenario 1, you want to be able to generate your application and get the same user interface you got from
your previous release of Designer.&nbsp; However, many new features have been added to Designer to make achieving
the desired result easier.&nbsp; Many features that were difficult or impossible to generate with earlier releases
of Designer are now supported.&nbsp; Thus, in one pass, you can eliminate post generation modifications and difficult
constructs that were used only to work around limitations of earlier releases of Designer.</P>
<P>This chapter assumes that you have already performed all the actions described in <A HREF="#Chapter%203.%20General%20Migration%20Iss">Chapter
3</A> &quot;General Migration Issues&quot; and that you have evaluated the steps in&nbsp; the previous chapter,
&quot;Scenario 1 Migrate, Regenerate All, No Redesign&quot;.</P>
<P>This chapter is organized by Designer release.&nbsp; You should begin reading at the section for your &quot;from&quot;
Designer release, and then continue reading the sections for any later releases.&nbsp; For example, if you are
migrating from Designer 1.3.2, you need to read all the sections below.&nbsp; If you are migrating from Designer
2.1.2, you may skip the section on Designer 1.3.2 and read the sections for Designer 2.1.2 and 6.0.</P>
<H2><A NAME="5from132Migrating%20from%201.3.2"></A>Migrating from 1.3.2</H2>
<P>Please review <A HREF="#Chapter%204.%20Scenario%201%7C %20Migrate,">Chapter 4</A> &quot;Scenario 1:&nbsp; Migrate,
Regenerate All, No Redesign&quot;, because this also applies to this section.</P>
<H3><A NAME="5from132Security"></A>Security</H3>
<P>This section is an extension of the security section in Chapter 3 &quot;General migration issues&quot;.</P>
<P>Designer 1.3.2 and 2.1.2/6.0 were typically run using either the Oracle Application Server PL/SQL cartridge
or the WebDB listener.&nbsp; In both cases you had two methods of configuring the database login to run the generated
PL/SQL components:</P>

<OL>
	<LI>single user login, and
	<LI>database authentication (provide a basic authentication login screen and login in to the database with the
	supplied username and password).
</OL>

<P>The first scenario, single user login, may have been extended to have multiple Database Access Descriptors (DADs)
that pointed to specific database schemas.</P>
<P><IMG SRC="images/5image002.gif" WIDTH="568" HEIGHT="407" ALIGN="BOTTOM" BORDER="0" v:shapes="_x0000_s1036">
<BR clear = "all">
 <BR clear = "all">
 The second scenario, database authentication, allowed the user to log in to the database as a specific database
user.&nbsp;Grants to specific PL/SQL components could then be made to a role, which would in turn be granted to
the database users.</P>
<P><IMG SRC="images/5image005.gif" WIDTH="587" HEIGHT="296" ALIGN="BOTTOM" BORDER="0" v:shapes="_x0000_s1037 _x0000_s1038">
<BR clear = "all">
 In Oracle Designer 6i, there is a new security feature that should be considered.&nbsp;The preference SECPKG (Security
Package Name) allows you to specify a PL/SQL package that will determine the users' ability to utilize a component.&nbsp;
(Please see the Oracle Designer 6i online help for detail of SECPKG.)&nbsp; By utilizing SECPKG you can simplify
your deployment architecture to that shown below.</P>
<P>You can now grant execute on all PL/SQL components to PUBLIC.&nbsp; Your custom developed SECPKG package will
return a true if the user is allowed to run the component, based upon your own criteria.</P>
<P>Note: You can continue to run the generated application exactly as you did before, making use of the default
SECPKG which always returns true.</P>
<P>Extra: If you are utilizing WebServer Generator in the same database instance as Oracle Portal, you can utilize
all of the Portal user and group features.&nbsp; You must run the Portal script PROVSYNS.SQL for the schema that
contains your SECPKG package.&nbsp; You can then reference the Portal lightweight user name with a call to the
Portal API wwctx_api.get_user.&nbsp; Additional Group and User API information is available within the Portal PDK
(<A HREF="http://portalstudio.oracle.com" target="_blank">http://portalstudio.oracle.com</A>).</P>
<P>In Scenario 1 we discussed four areas of concern: module level security (z_chk), utilizing calls to underlying
values, return links and Table APIs.&nbsp; While these areas of concern remain, they also provide enhancements
that may allow you to reduce the need for post-generation changes or custom code within the user text areas.</P>
<H3><A NAME="5from132Module%20Level%20Security"></A>Module Level Security</H3>
<P>Oracle Designer Web PL/SQL Generator modules utilize Query, List, Detail.&nbsp; A user is first presented
with a Query Screen, then a list of items that match the criteria, and ultimately a detail screen that typically
allows update.&nbsp; In many cases, the list screen will always be limited by a fixed where clause in the module.&nbsp;
Designer 2.1.2 and forward implement a security check to ensure that users do not access the detail screen directly
by changing the URL.&nbsp; Designer utilizes a checksum value (Z_CHK) to enforce this.&nbsp; Every link on the
list screen has Z_CHK=#####.&nbsp; The detail page checks to see that this checksum value is correct.</P>
<P>In the previous scenario we discussed how to turn off this feature to provide the same functionality as your
existing application.&nbsp; In this scenario we will discuss how to make use of this feature.</P>
<P>In Designer 1.3.2 you may have tricked the generator into using a view instead of base table, thereby not
allowing the user access to the underlying data in the table.&nbsp; With Z_CHK this trick is no longer necessary.&nbsp;
By setting the generator preference SECECS (Enforce URL Checksums) to Yes the generated module will ensure that
users only have access to the detail screen via the record list.&nbsp; (Please see Scenario 1 for more details.)&nbsp;
Additionally, if you wish to access any detail records from other modules you will need to make use of the wsglm.checksum
routine.&nbsp; Please see the Designer online help for more information regarding wsglm.checksum.</P>
<H3><A NAME="5from132Return%20Links"></A>Return Links</H3>
<P>In Designer 1.3.2 navigation links were largely the responsibility of the developer.&nbsp; Designer 2.1.2 and
forward provide links to components higher in the module hierarchy.</P>
<H3><A NAME="5from132Table%20APIs"></A>Table APIs</H3>
<P>Table APIs were introduced in Designer 1.3.2 specifically for the Web PL/SQL generator.&nbsp; From 2.1.2 forward
TAPIs are an integral part of the overall system.&nbsp; TAPIs have been extended to allow additional points of
access to add custom code.&nbsp; TAPIs automatically generate code to provide denormalization and enforcement of
constraints such as arcs, domain based keys (CG_REF_CODES and ALL_DOMAINS), etc.</P>
<H2><A NAME="5-Migrating%20from%202.1.2/6.0"></A>Migrating from 2.1.2/6.0</H2>
<P>Please review <A HREF="#Chapter%204.%20Scenario%201%7C %20Migrate,">Scenario 1:&nbsp; Migrate, Regenerate All,
No Redesign</A>, because this also applies to this section.</P>
<H3><A NAME="5from21260Module%20Level%20Security"></A>Module Level Security</H3>
<P>Designer 2.1.2 left security largely up to the developer.&nbsp; Security was generally implemented by creating
a schema that either owned the pl/sql packages that make up the Web generator module or had specific grants to
those packages.&nbsp; Another option was to create roles with grants to pl/sql packages and ultimately grant those
roles to users.&nbsp; In either case, the security was left to the DBA to developed and was limited to granting
access to pl/sql via database grants. &nbsp;</P>
<P>Oracle Designer 6i provides a mechanism to define your own security policy.&nbsp; This policy is still implemented
across the whole module, but it allows you to code the decision of access in any way you choose.&nbsp; Every procedure
that is callable from a web browser first calls the package defined in the preference SECPKG, passing in the package
name.&nbsp; The default SECPKG always returns true.&nbsp; By coding your own SECPKG routine you can base access
on anything you like - it is not limited to database grants.&nbsp; Perhaps some modules should only be run after
normal business hours, simply return false when called between 8 and 5.&nbsp; Additionally, when SECPKG returns
false, nothing is returned to the browser.&nbsp; This allows you to code your own access error screen.&nbsp; You
also have the ability to log invalid (or valid) attempts to run a module.&nbsp; Each call to a module component
initiates a call to your security routine, giving an access point to log information regarding the module.</P>
<P>When the generator installs the module component, it will call a procedure, add_package_resp, in the package
defined in the preference SECPKG, passing in the value of SECRES (Default Responsibilities) and all PLSQL Packages
that make up the module.&nbsp; Your procedure, add_package_resp, can then insert these values into a table that
will later be used to determine whether a user can run the package.</P>
<H3><A NAME="5from21260Multi-Row%20Components"></A>Multi-Row Components</H3>
<P>Designer Web PL/SQL components in version 1.3.2 were limited to insert, update and delete a single row at a
time.&nbsp; Oracle Designer 6i now provides the ability to insert, update and delete multiple rows in a single
html screen.&nbsp; Forms that were of type List/Form should be reviewed to determine if the new multi-row format
will improve the user interface.</P>
<H2><A NAME="5-Migrating%20from%206i"></A>Oracle Portal portlets generation</H2>
<P><A NAME="5-6"></A>Oracle Designer 6i release 4 provides new functionality to integrate with Oracle Portal.&nbsp;
Oracle Designer 6i will generate the wrappers required to present the screens as portlets within Oracle Portal.&nbsp;
Because Oracle Portal and Designer Web PL/SQL generator modules both utilize Oracle 9i Application Servers modplsql,
great synergy can exist between these technologies.</P>
<P>If you are utilizing WebServer Generator in the same database instance as Oracle Portal, you can utilize all
of the Portal user and group features.&nbsp; You must run the Portal script PROVSYNS.SQL for the schema that contains
your SECPKG package.&nbsp; You can then reference the Portal lightweight user name with a call to the Portal API
wwctx_api.get_user.&nbsp; Additional Group and User API information is available within the <BR>
Portal PDK (<A HREF="http://portalstudio.oracle.com" target="_blank">http://portalstudio.oracle.com</A>).&nbsp;
By utilizing the PDK you can determine what groups a user belongs to and map these groups to Designer Modules.</P>
<P>Oracle Portal provides great flexibility in navigation and presentation.&nbsp; By generating Portlet wrappers,
you can place Designer modules on tabbed portal pages.&nbsp; Portal modules can be integrated on the same pages
as Oracle Portal components such as menus, reports and charts.</P>
<H1><A NAME="Chapter%206.%20Scenario%203| %20Migrate,"></A>Chapter 6 Scenario 3:&nbsp; Migrate, Regenerate INCREMENTALLY</H1>
<P>This is the most complex scenario.&nbsp; In this scenario, you will migrate your application a little at a time,
rather than all at once.&nbsp; You will begin by upgrading all of your Designer repository to an Oracle Designer
6i repository.&nbsp; You will then make the changes required to run Web/PLSQL generated from your previous release
of Designer alongside Web/PLSQL generated from Oracle Designer 6i.&nbsp; Finally, over some arbitrarily long period
of time, you will regenerate all of your modules out of Oracle Designer 6i.</P>
<P>The goal of this scenario is to allow you to regenerate your whole application, taking into account new features,
but in such a way that you do not have to migrate your entire application in one go.&nbsp; This means you will
be able to move the deployed application to the new tool stack before you have completely migrated every form.&nbsp;
Thus, you can continue with bug fixes and new development in parallel with the continuing migration effort.</P>
<P>The basic method that allows you to run multiple versions at the same time is the same regardless of the versions.&nbsp;
You should read all of chapters 3 and 4 prior to attempting this solution.&nbsp; You should back up any schemas
that hold database objects, wsgl libraries and application components prior to attempting to reconfigure the system
to allow multiple versions to run side by side.</P>
<P>The key to this method is segregating the different versions into their own schemas.&nbsp; Typically all of
the database objects and the Web PL/SQL components might have resided in a single database schema.</P>
<P>In order to run your existing application alongside the new Oracle Designer 6i application components you will
need to first migrate your existing application and associated Web PL/SQL generator libraries to a separate schema.&nbsp;
In all cases you will need to grant select, insert, update, and delete on all database tables (including CG_REF_CODES)
and sequences that are utilized by your modules.&nbsp; These grants must be granted directly, not via a role. &nbsp;Depending
upon the version that you are migrating from, you may need to create synonyms to point to the database objects
(Designer 6i introduced the ability to define the database object schema within the generator preferences. Earlier
releases require synonyms.)</P>
<P>After moving all existing application components to a new schema as described above, the system should work
precisely as it had previously.</P>
<P>Next, you can install the Oracle Designer 6i Web PL/SQL generator libraries.&nbsp; This can be done in the object
owner schema or in a separate schema.&nbsp; For the purposes of this document we will assume that these libraries
are in a separate schema.</P>
<P>Again, the original application should be tested at this point to ensure that it continues to run properly.&nbsp;
The Table APIs should be installed next.&nbsp; In Oracle Designer 6i, TAPIs are intended to be usable by transactions
other than Web PL/SQL modules.&nbsp; If you only intend to use TAPIs for Web modules, the TAPIs can be placed in
the Schema <A NAME="5-7"></A> in the diagram above.&nbsp; We will assume that you will utilize TAPIs throughout
and hence will place the TAPIs in the object owner schema.&nbsp; In so doing, you must grant execute on the TAPIs
to Schema.</P>
<P>You can now migrate individual components to Oracle Designer 6i and install them into Schema.&nbsp; Any logic
placed in the TAPIs will be run for all transactions, including transactions from earlier Web PL/SQL modules.</P>
<P>Designer Web PL/SQL modules do not preface calls to the components with the schema name.&nbsp; Hence, depending
upon your application server configuration, you will likely need to create public synonyms for all of the packages
associated with your applications.&nbsp; This requires that your module names be unique across schemas.</P>

<P>While this configuration is the most complicated, it is based upon sound database techniques and can be accomplished.&nbsp;
Many specific scenarios will require a more complex scheme than that described above.<BR>

<HR ALIGN="CENTER">

<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" WIDTH="96%" summary>
	<TR>
		<TD VALIGN="TOP">
			<P>
			<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" summary>
				<TR>
					<TD ALIGN="CENTER">
						<P ALIGN="CENTER"><A HREF="mg_part4_6i-2.htm"><IMG SRC="images/larrow.gif" WIDTH="30" HEIGHT="30" ALIGN="BOTTOM"
						ALT="Previous" BORDER="0"></A>
					</TD>
					<TD>
						<P ALIGN="CENTER"><A HREF="mg_appendix-a_6i-2.htm"><IMG SRC="images/rarrow.gif" WIDTH="30" HEIGHT="30" ALIGN="BOTTOM"
						ALT="Next" BORDER="0"></A>
					</TD>
				</TR>
				<TR>
					<TD VALIGN="TOP">
						<P ALIGN="CENTER"><A HREF="mg_part4_6i-2.htm"><SPAN CLASS="copyright">Prev</SPAN></A>
					</TD>
					<TD>
						<P ALIGN="CENTER"><A HREF="mg_appendix-a_6i-2.htm"><SPAN CLASS="copyright">Next</SPAN></A>
					</TD>
				</TR>
			</TABLE>

		</TD>
		<TD ALIGN="CENTER">
			<P ALIGN="CENTER"><IMG SRC="images/oracle.gif" WIDTH="105" HEIGHT="20" ALIGN="BOTTOM" ALT="Oracle logo" BORDER="0">&nbsp;
			<BR>
			<A HREF="mg_ttl_6i-2.htm"><SPAN CLASS="copyright">Copyright &copy; 2002, Oracle Corporation.</SPAN></A>&nbsp; <BR>
			<SPAN CLASS="copyright">All Rights Reserved.&nbsp;</SPAN>
		</TD>
		<TD ALIGN="RIGHT" VALIGN="TOP">
			<DIV ALIGN="RIGHT">
				<DIV ALIGN="RIGHT">
					<DIV ALIGN="RIGHT">
						<DIV ALIGN="RIGHT">
							<DIV ALIGN="RIGHT">
								<DIV ALIGN="RIGHT">
									<DIV ALIGN="RIGHT">
										<DIV ALIGN="RIGHT">
											<DIV ALIGN="RIGHT">
												<DIV ALIGN="RIGHT">
													<DIV ALIGN="RIGHT">
														<DIV ALIGN="RIGHT">
															<DIV ALIGN="RIGHT">
																<DIV ALIGN="RIGHT">
																	<DIV ALIGN="RIGHT">
																		<DIV ALIGN="RIGHT">
																			<DIV ALIGN="RIGHT">
																				<DIV ALIGN="RIGHT">
																					<DIV ALIGN="RIGHT">
																						<DIV ALIGN="RIGHT">
																							<DIV ALIGN="RIGHT">
																								<DIV ALIGN="RIGHT">
																									<DIV ALIGN="RIGHT">
																										<DIV ALIGN="RIGHT">
																											<DIV ALIGN="RIGHT">
																												<DIV ALIGN="RIGHT">
																													<DIV ALIGN="RIGHT">
																														<DIV ALIGN="RIGHT">
																															<DIV ALIGN="RIGHT">
																																<DIV ALIGN="RIGHT">
																																	<DIV ALIGN="RIGHT">
																																		<DIV ALIGN="RIGHT">
																																			<DIV ALIGN="RIGHT">
																																				<DIV ALIGN="RIGHT">
																																					<DIV ALIGN="RIGHT">
																																						<DIV ALIGN="RIGHT">
																																							<DIV ALIGN="RIGHT">
																																								<DIV ALIGN="RIGHT">
																																									<DIV ALIGN="RIGHT">
																																										<DIV ALIGN="RIGHT">
																																											<DIV ALIGN="RIGHT">
																																												<DIV ALIGN="RIGHT">
																																													<DIV ALIGN="RIGHT">
																																														<DIV ALIGN="RIGHT">
																																															<DIV ALIGN="RIGHT">
																																																<DIV ALIGN="RIGHT">
																																																	<DIV ALIGN="RIGHT">
																																																		<DIV ALIGN="RIGHT">
																																																			<DIV ALIGN="RIGHT">
																																																				<DIV ALIGN="RIGHT">
																																																					<DIV ALIGN="RIGHT">
																																																						<DIV ALIGN="RIGHT">
																																																							<DIV ALIGN="RIGHT">
																																																								<DIV ALIGN="RIGHT">
																																																								<P>
																																																								<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" summary>
																																																									<TR>
																																																										<TD ALIGN="CENTER">
																																																											<P ALIGN="CENTER"><A HREF="mg_toc_6i-2.htm"><IMG SRC="images/conticon.gif" WIDTH="30" HEIGHT="30" ALIGN="BOTTOM"
																																																											ALT="Contents icon" BORDER="0"></A>
																																																										</TD>
																																																									</TR>
																																																									<TR>
																																																										<TD VALIGN="TOP">
																																																											<P ALIGN="CENTER"><A HREF="mg_toc_6i-2.htm"><SPAN CLASS="copyright">Contents</SPAN></A>
																																																										</TD>
																																																									</TR>
																																																								</TABLE>

</DIV>
																																																							</DIV>
																																																						</DIV>
																																																					</DIV>
																																																				</DIV>
																																																			</DIV>
																																																		</DIV>
																																																	</DIV>
																																																</DIV>
																																															</DIV>
																																														</DIV>
																																													</DIV>
																																												</DIV>
																																											</DIV>
																																										</DIV>
																																									</DIV>
																																								</DIV>
																																							</DIV>
																																						</DIV>
																																					</DIV>
																																				</DIV>
																																			</DIV>
																																		</DIV>
																																	</DIV>
																																</DIV>
																															</DIV>
																														</DIV>
																													</DIV>
																												</DIV>
																											</DIV>
																										</DIV>
																									</DIV>
																								</DIV>
																							</DIV>
																						</DIV>
																					</DIV>
																				</DIV>
																			</DIV>
																		</DIV>
																	</DIV>
																</DIV>
															</DIV>
														</DIV>
													</DIV>
												</DIV>
											</DIV>
										</DIV>
									</DIV>
								</DIV>
							</DIV>
						</DIV>
					</DIV>
				</DIV>
			</DIV>
		</TD>
	</TR>
</TABLE>


</BODY>

</HTML>