<HTML>
<HEAD>
<TITLE>developer.com - Reference</TITLE>

<META NAME="Author" CONTENT="developer.com">
<META NAME="Keywords" CONTENT="javascript, ActiveX, VRML, Push, channel,
push channel, applet, directory, news, community, developer, internet,
intranet, java, java applet, J++, javabeans, java products, tools, java
tools, JDK, java development kit, java development environment, JIT,
JavaPlan, enterprise tools, JVM, Java Virtual Machine, Java resources, API,
browser, java documentation, CDF, Common Desktop Format, RDF, Resource
Description Framework, Netcaster, Netcast, Castanet, meta-language, metadata,
solaris, Solaris, SUN, CGI, Perl, Oracle, database, network, Netscape API,
Apache, apache, SSL, mSQL, Netscape, Fasttrack, FastTrack,
industry standard, ActiveX bridge, web, internet, site, site
design, microsoft, active server pages, asp, iis, nt, win95, 95, html, cgi,
frontpage, business, corporate, vbscript, javascript, activex, isapi,
database, access, sql, server, www, 3.0, 3.01, 3.02, 3.03, 3.04, 4.0,
4.0b2, 4.01, 4.03, 4.04, connection, online, commerce, publisher,
publishing, publish, webmaster, dynamic html, dhtml, windows 98, netscape,
netscape software, shareware, magazines, jobs, japan, free, freeware, free
stuff">
<META NAME="description" CONTENT="Developer.com is the leading online
service for developers. It includes Gamelan, the official 
directory for Java, as well
as news, information, tutorials, and directories for other Internet technologies
including ActiveX, JavaScript, perl, VRML, Java Beans, push technologies, and
other Internet and intranet technologies. Developer.com is also the home of
Developer Direct, the Professional Developer's Store, where developers can
purchase and download thousands of Web, authoring and other development
products at some of today's lowest prices.">
<META NAME="distribution" CONTENT="global">
<META NAME="resource-type" CONTENT="document">
<META NAME="language" CONTENT="en">

</HEAD>
<BODY BACKGROUND="/images/curve_r-wide.gif" BGCOLOR="#FFFFFF" TEXT="#000000" 
LINK="#DD0000" VLINK="#999999" ALINK="#FF0000">

<TABLE>
<TR><TD VALIGN=TOP WIDTH=120>
<A HREF="/" >
<IMG SRC="/images/masthead_r.gif" WIDTH="100" HEIGHT="78" BORDER="0"
ALT="Developer.com Logo"></a>
</TD><TD>
<a target="resource window" href="http://adserver.developer.com/cgi-bin/accipiter/adclick.exe/AREA=DCBAN.REF/DT=null">
<img src="http://adserver.developer.com/cgi-bin/accipiter/adserver.exe/AREA=DCBAN.REF/DT=null" HEIGHT="60" WIDTH="468" ALT="Click here to support our advertisers"><BR><CENTER>Click here to support our advertisers</CENTER></a>
</TD></TR>
</TABLE>
<!--outer table--><TABLE>
<!--outer table--><TR>
<!--outer table--><TD VALIGN="TOP">

<!--navbar info -->

<table><tr><td>

<A HREF="http://www.developerdirect.com/" >
<IMG SRC="/images/button_s.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><b>SHOPPING</b></font></a>

</td></tr><tr><td>

<A HREF="/community/jobs/c_jobs.html">
<IMG SRC="/images/button_d.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><B>JOB BANK</B></font></a>

</td></tr><tr><td>

<A HREF="http://www.classifieds2000.com/cgi-cls/display.exe?Developer+computer+searchcomputercategories">
<IMG SRC="/images/button_d.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><B>CLASSIFIEDS</B></font></a>

</td></tr><tr><td>

<A HREF="/directories/directories.html">
<IMG SRC="/images/button_d.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><B>DIRECTORIES</B></font></a>

</td></tr><tr><td>

<A HREF="/reference/">
<IMG SRC="/images/button_r.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><B>REFERENCE</B></font></a>

<br>

<a href="/reference/r_library.html">
<FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000">
Online Library</a></font>

</td></tr><tr><td>

<A HREF="/classroom/">
<IMG SRC="/images/button_r.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><B>LEARNING CENTER</B></font></a>

</td></tr><tr><td>

<A HREF="/journal/">
<IMG SRC="/images/button_n.gif" width="15" height="11" BORDER="0"><B><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000">JOURNAL</font></B></a>

</td></tr><tr><td>

<A HREF="/news/">
<IMG SRC="/images/button_d.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><b>NEWS CENTRAL</b></font></a>

</td></tr><tr><td>

<A HREF="/downloads/">
<IMG SRC="/images/button_d.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><b>DOWNLOADS</b></font></a>

</td></tr><tr><td>

<A HREF="/community/" >
<IMG SRC="/images/button_c.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><B>COMMUNITY</B></font></a>

</td></tr><tr><td>

<A HREF="/calendar/">
<IMG SRC="/images/button_d.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><b>CALENDAR</b></font></a>

</td></tr><tr><td>

<A HREF="/about/">
<IMG SRC="/images/button_a.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><b>ABOUT US</b></a></font>

</td></tr></table>
<table>
<tr>
<td>
<form action="/subscribe/list.cgi" method=post >
<img src="/images/rule.gif" width="100" height="2"><br>
<B><FONT FACE="Arial, Helvetica" SIZE="-1">Journal:</b></font><br>
<input name='email' value='your e-mail' size="11">
<input type='hidden'  name='state' value='Subscribe'>
</td>
</tr>
<tr>
<td>
<input type='submit' value='Subscribe'>
<br>
<font size="-1">Get the weekly email highlights from the most popular journal for developers!
<br>
<a href="http://www.developer.com/subscribe.html">Current issue</a>
<img src="/images/rule.gif" width="100" height="2">
<input type='hidden' name='name' value='New Subscriber'>
</FORM>
</td>
</tr>
</table>
<!--/navbar-->
<font size="-1">
<A HREF="http://www.developer.com">developer.com</a><BR>
<A HREF="http://www.developerdirect.com">developerdirect.com</a><BR>
<A HREF="http://www.htmlgoodies.com">htmlgoodies.com</a><BR>
<A HREF="http://www.javagoodies.com">javagoodies.com</a><br>
<A HREF="http://www.jars.com">jars.com</a><BR>
<a href="http://www.intranetjournal.com">intranetjournal.com</a><br>
<a href="http://www.javascripts.com">javascripts.com</a><br>
</font>
<!--outer table--></TD>

<!--outer table--><TD VALIGN="TOP">
<BLOCKQUOTE>
<P>

<img src="/images/header_r.gif" width="440" height="50">
<P>
<MAP NAME ="header_r2.gif.map">

<AREA SHAPE ="RECT"
      HREF ="/reference/author.html"
      COORDS ="361,0,440,29">
<AREA SHAPE ="RECT"
      HREF ="/reference/basic.html"
      COORDS ="254,0,360,29">
<AREA SHAPE ="RECT"
      HREF ="/reference/help.html"
      COORDS ="183,0,251,29">
<AREA SHAPE ="RECT"
      HREF ="/reference/cool.html"
      COORDS ="100,0,181,29">
<AREA SHAPE ="RECT"
      HREF ="/reference/mybook.html"
      COORDS ="0,0,100,29">
</MAP>

<MAP NAME ="header_r1.gif.map">

<AREA SHAPE ="RECT"
      HREF ="/reference/personalize.html"
      COORDS ="339,0,439,29">
</MAP>

<p>


<font face="Arial,Helvetica" size="-1" color="#006666"><A HREF="/reference/r_library.html"><B>All Categories</A> :</B>
<b><A HREF="/reference/r_java.html">Java</A></b></font><p>
   <META NAME="GENERATOR" CONTENT="Mozilla/3.0b5aGold (WinNT; I) [Netscape]">
<H1><FONT COLOR=#FF0000>Chapter 27</FONT></H1>
<H1><B><FONT SIZE=5 COLOR=#FF0000>Package </FONT><TT><FONT SIZE=6 COLOR=#FF0000 FACE="Courier">java.applet</FONT></TT></FONT></B>
</H1>
<P>
<HR WIDTH="100%"></P>
<P>
<H3 ALIGN=CENTER><FONT COLOR="#000000"><FONT SIZE=+2>CONTENTS<A NAME="CONTENTS"></A>
</FONT></FONT></H3>

<UL>
<LI><A HREF="#Applet" >Applet</A>
<LI><A HREF="#AppletContext" >AppletContext</A>
<LI><A HREF="#AppletStub" >AppletStub</A>
<LI><A HREF="#AudioClip" >AudioClip</A>
</UL>
<HR>
<P>
The <TT><FONT FACE="Courier">java.applet</FONT></TT> package contains
the <TT><FONT FACE="Courier">Applet</FONT></TT> class as well
as three interfaces: <TT><FONT FACE="Courier">AppletContext</FONT></TT>,
<TT><FONT FACE="Courier">AppletStub</FONT></TT>, and <TT><FONT FACE="Courier">AudioClip</FONT></TT>.
The <TT><FONT FACE="Courier">java.applet</FONT></TT> package's
class and interfaces are described in detail throughout this chapter.<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=38><A NAME="Applet"><IMG SRC="Class.gif"></A></TD><TD WIDTH=499>
<H2><FONT SIZE=5 COLOR=#FF0000>Applet</FONT></H2>

</TD><TD WIDTH=38><IMG SRC="applet.gif"></TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="Extends.gif"></FONT></TT></TD>
<TD ><TT><FONT FACE="Courier">Panel</FONT></TT></TD>
</TR>
</TABLE></CENTER>
<P>
<P>
The class hierarchy for the <TT><FONT FACE="Courier">Applet</FONT></TT>
class derives from class <TT><FONT FACE="Courier">java.awt.Panel</FONT></TT>.
This implies that every applet has some visual component. The
basic visual component is a panel in an HTML page. <TT><FONT FACE="Courier">Applet</FONT></TT>'s
overall derivation looks like Figure 27.1.
<P>
<A HREF="f27-1.gif" ><B>Figure 27.1:</B> <I>Derivation of</I> java.applet.Applet</A>
<P>
Listing 27.1 shows the declarations for all of the public methods
included in the <TT><FONT FACE="Courier">java.applet.Applet</FONT></TT>
class.
<HR>
<BLOCKQUOTE>
<B>Listing 27.1. Public members of </B><TT><B><FONT FACE="Courier">java.applet.Applet</FONT></B></TT><B>.
<BR>
</B>
</BLOCKQUOTE>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public class Applet extends Panel {<BR>
&nbsp;&nbsp;&nbsp;&nbsp;public final void setStub(AppletStub stub)
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;public boolean isActive()<BR>
&nbsp;&nbsp;&nbsp;&nbsp;public URL getDocumentBase()<BR>
&nbsp;&nbsp;&nbsp;&nbsp;public URL getCodeBase()<BR>
&nbsp;&nbsp;&nbsp;&nbsp;public String getParameter(String name)
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;public AppletContext getAppletContext()
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;public void resize(int width, int height)
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;public void resize(Dimension d)<BR>
&nbsp;&nbsp;&nbsp;&nbsp;public void showStatus(String msg)<BR>
&nbsp;&nbsp;&nbsp;&nbsp;public Image getImage(URL url)<BR>
&nbsp;&nbsp;&nbsp;&nbsp;public Image getImage(URL url, String
name)<BR>
&nbsp;&nbsp;&nbsp;&nbsp;public AudioClip getAudioClip(URL url)
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;public AudioClip getAudioClip(URL url,
String name)<BR>
&nbsp;&nbsp;&nbsp;&nbsp;public String getAppletInfo()<BR>
&nbsp;&nbsp;&nbsp;&nbsp;public String[][] getParameterInfo()<BR>
&nbsp;&nbsp;&nbsp;&nbsp;public void play(URL url)<BR>
&nbsp;&nbsp;&nbsp;&nbsp;public void play(URL url, String name)
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;public void init()<BR>
&nbsp;&nbsp;&nbsp;&nbsp;public void start()<BR>
&nbsp;&nbsp;&nbsp;&nbsp;public void stop()<BR>
&nbsp;&nbsp;&nbsp;&nbsp;public void destroy()<BR>
}</FONT></TT>
</BLOCKQUOTE>
<HR>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="Const.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">Applet</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Applet</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="applet.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public Applet()</FONT></TT>
</BLOCKQUOTE>
<P>
This is the default constructor for the <TT><FONT FACE="Courier">Applet</FONT></TT>
class. This function creates a new <TT><FONT FACE="Courier">Applet</FONT></TT>.
Each applet should implement at a minimum the <TT><FONT FACE="Courier">init()</FONT></TT>
or <TT><FONT FACE="Courier">start()</FONT></TT> method to display
itself on the screen and for initial setup.<P><CENTER><TABLE BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%>
<H4><TT><FONT FACE="Courier"><IMG SRC="Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">SetStub</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Applet</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="applet.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public final void setStub(AppletStub
stub)</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">setStub</FONT></TT> sets the <TT><FONT FACE="Courier">AppletStub</FONT></TT>
to the stub passed in. This function is called automatically by
the underlying system and usually is not called directly. The
only time you need to implement <TT><FONT FACE="Courier">AppletStub</FONT></TT>
methods is if you are writing your own applet viewer or browser.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="Parame.gif"></FONT></TT></TD>
<TD ><TT><FONT FACE="Courier">stub</FONT></TT> is the underlying stub used to implement an applet viewer.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">IsActive</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Applet</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="applet.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public boolean isActive()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">isActive</FONT></TT> is used to determine
whether this applet is currently active. An applet is set <TT><FONT FACE="Courier">Active</FONT></TT>
just before the <TT><FONT FACE="Courier">Start</FONT></TT> method
is called (see <TT><FONT FACE="Courier">start()</FONT></TT> later
in this chapter).<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%>
<H4><IMG SRC="Method.gif"></H4>
</TD><TD ><H4><TT><FONT FACE="Courier">getDocumentBase</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Applet</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="applet.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public URL getDocumentBase()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">getDocumentBase</FONT></TT> returns the
URL of the current page that this applet is embedded in.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><IMG SRC="Returns.gif"></TD><TD >A <TT><FONT FACE="Courier">URL</FONT></TT> object containing information about the current URL. (See the <TT><FONT FACE="Courier">java.net.URL</FONT></TT> class documentation in <A HREF="ch33.htm" >Chapter 33</A>, &quot;Package <TT><FONT FACE="Courier">java.net</FONT></TT>.&quot;)
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><IMG SRC="Method.gif"></H4>
</TD><TD ><H4><TT><FONT FACE="Courier">getCodeBase</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Applet</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="applet.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public URL getCodeBase()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">getCodeBase</FONT></TT> returns the URL
of the applet itself.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><IMG SRC="Returns.gif"></TD><TD >A <TT><FONT FACE="Courier">URL</FONT></TT> object (see the <TT><FONT FACE="Courier">java.net.URL</FONT></TT> class documentation in <A HREF="ch33.htm" >Chapter 33</A>) containing information about the applet's URL.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getParameter</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Applet</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="applet.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public String getParameter(String name)</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">getParameter</FONT></TT> returns the
<TT><FONT FACE="Courier">String</FONT></TT> value of the parameter
passed in using the HTML <TT><FONT FACE="Courier">&lt;PARAM&gt;</FONT></TT>
tag (for more information on parameters, <A HREF="ch12.htm" >see Chapter 12</A>,
&quot;HTML for Java Programmers&quot;).
<P>
Here's an HTML example:
<BLOCKQUOTE>
<TT><FONT FACE="Courier">&lt;APPLET CODE=&quot;CoolApplet.class&quot;
WIDTH=150 HEIGHT=30&gt;<BR>
&lt;PARAM NAME=COLOR VALUE=&quot;WHITE&quot;&gt;<BR>
&lt;/APPLET&gt;</FONT></TT>
</BLOCKQUOTE>
<P>
Here's a Java example:
<BLOCKQUOTE>
<TT><FONT FACE="Courier">tempString = getParameter(&quot;COLOR&quot;);
<BR>
if (tempString.equals(&quot;WHITE&quot;))<BR>
&nbsp;&nbsp;tempColor = new Color(255, 255, 255);</FONT></TT>
</BLOCKQUOTE>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="Parame.gif"></FONT></TT></TD>
<TD ><TT><FONT FACE="Courier">name</FONT></TT> is a case-sensitive string that matches (exactly!) the parameter name passed in using the HTML <TT><FONT FACE="Courier">PARAM</FONT></TT> tag.
</TD></TR>
<TR VALIGN=TOP><TD WIDTH=4%>
<IMG SRC="Returns.gif"></TD><TD >A <TT><FONT FACE="Courier">String</FONT></TT> value representing the <TT><FONT FACE="Courier">PARAM</FONT></TT> tag's <TT><FONT FACE="Courier">VALUE</FONT></TT> attribute.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getAppletContext</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Applet</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="applet.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public AppletContext getAppletContext()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">getAppletContext</FONT></TT> returns
an <TT><FONT FACE="Courier">AppletContext</FONT></TT> object.
This object can be used to determine information about the applet's
runtime environment.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><IMG SRC="Returns.gif"></TD><TD >An <TT><FONT FACE="Courier">AppletContext</FONT></TT> object (see documentation on the <TT><FONT FACE="Courier">AppletContext</FONT></TT> interface later in this chapter).
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">resize</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Applet</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="applet.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void resize(int width, int height)</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">resize</FONT></TT> makes use of the <TT><FONT FACE="Courier">Applet</FONT></TT>
class's inheritance from the <TT><FONT FACE="Courier">Panel</FONT></TT>
class to resize the applet based on the input values.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="Parame.gif"></FONT></TT></TD>
<TD ><TT><FONT FACE="Courier">width</FONT></TT> is an integer value specifying the applet's new width.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="Parame.gif"></FONT></TT>
</TD><TD ><TT><FONT FACE="Courier">height</FONT></TT> is an integer value specifying the applet's new height.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">resize</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Applet</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="applet.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void resize(Dimension d)</FONT></TT>
</BLOCKQUOTE>
<P>
This <TT><FONT FACE="Courier">resize</FONT></TT> function accepts
a <TT><FONT FACE="Courier">Dimension</FONT></TT> object as its
argument. (For more information on the <TT><FONT FACE="Courier">Dimension</FONT></TT>
class, see the documentation on the <TT><FONT FACE="Courier">java.awt.Dimension</FONT></TT>
class in <A HREF="ch28.htm" >Chapter 28</A>, &quot;Package <TT><FONT FACE="Courier">java.awt</FONT></TT>.&quot;)
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="Parame.gif"></FONT></TT></TD>
<TD ><TT><FONT FACE="Courier">d</FONT></TT> is a <TT><FONT FACE="Courier">Dimension</FONT></TT> object that specifies the new size of the applet.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">showStatus</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Applet</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="applet.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void showStatus(String msg)</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">showStatus</FONT></TT> shows a status
message using the applet's context.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="Parame.gif"></FONT></TT></TD>
<TD ><TT><FONT FACE="Courier">msg</FONT></TT> is a string containing the message to be displayed.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getImage</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Applet</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="applet.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public Image getImage(URL url)</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">getImage</FONT></TT> retrieves image
information based on the <TT><FONT FACE="Courier">URL</FONT></TT>
input parameter. Note that this function returns immediately and
does not retrieve the entire image. This image will not be retrieved
until the <TT><FONT FACE="Courier">Image</FONT></TT> object is
actually needed.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="Parame.gif"></FONT></TT></TD>
<TD ><TT><FONT FACE="Courier">url</FONT></TT> is a <TT><FONT FACE="Courier">URL</FONT></TT> object containing location information for the image to be retrieved. For more information on the <TT><FONT FACE="Courier">URL</FONT></TT> object, see the <TT><FONT FACE="Courier">java.net.URL</FONT></TT> class documentation in <A HREF="ch33.htm" >Chapter 33</A>.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="Returns.gif"></FONT></TT>
</TD><TD >An <TT><FONT FACE="Courier">Image</FONT></TT> object containing information about the URL passed in. For more information on the <TT><FONT FACE="Courier">Image</FONT></TT> class, see the <TT><FONT FACE="Courier">java.awt.Image</FONT></TT> documentation in <A HREF="ch28.htm" >Chapter 28</A>.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getImage</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Applet</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="applet.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public Image getImage(URL url, String
name)</FONT></TT>
</BLOCKQUOTE>
<P>
This <TT><FONT FACE="Courier">getImage</FONT></TT> function accepts
both the <TT><FONT FACE="Courier">URL</FONT></TT> input parameter
containing base location information as well as a <TT><FONT FACE="Courier">String</FONT></TT>
input parameter containing the filename. This function is useful
if, for instance, the base URL of the applet is unknown. The applet
could then call:
<BLOCKQUOTE>
<TT><FONT FACE="Courier">theImage = getImage(getDocumentBase(),
&quot;file.jpg&quot;);</FONT></TT>
</BLOCKQUOTE>
<P>
Note that this function returns immediately and does not retrieve
the entire image. This image will not be retrieved until the <TT><FONT FACE="Courier">Image</FONT></TT>
object is actually needed.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="Parame.gif"></FONT></TT></TD>
<TD ><TT><FONT FACE="Courier">url</FONT></TT> is a <TT><FONT FACE="Courier">URL</FONT></TT> object containing base location information for the image to be retrieved (such as <TT><A TARGET="resource window" HREF="http://www.javasoft.com">http://www.javasoft.com</A></TT>). For more information on the <TT><FONT FACE="Courier">URL</FONT></TT> object, see the <TT><FONT FACE="Courier">java.net.URL</FONT></TT> class documentation in <A HREF="ch33.htm" >Chapter 33</A>.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="Parame.gif"></FONT></TT>
</TD><TD ><TT><FONT FACE="Courier">name</FONT></TT> is a <TT><FONT FACE="Courier">String</FONT></TT> object containing a filename relative to the base URL passed using the <TT><FONT FACE="Courier">URL</FONT></TT> argument.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="Returns.gif"></FONT></TT>
</TD><TD >An <TT><FONT FACE="Courier">Image</FONT></TT> object containing information about the URL passed in. For more information on the <TT><FONT FACE="Courier">Image</FONT></TT> class, see the <TT><FONT FACE="Courier">java.awt.Image</FONT></TT> documentation in <A HREF="ch28.htm" >Chapter 28</A>.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getAudioClip</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Applet</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="applet.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public AudioClip getAudioClip(URL url)</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">getAudioClip</FONT></TT> retrieves an
<TT><FONT FACE="Courier">AudioClip</FONT></TT> based on the <TT><FONT FACE="Courier">URL</FONT></TT>
input parameter.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="Parame.gif"></FONT></TT></TD>
<TD ><TT><FONT FACE="Courier">url</FONT></TT> is a <TT><FONT FACE="Courier">URL</FONT></TT> object containing location information for the clip to be retrieved. For more information on the <TT><FONT FACE="Courier">URL</FONT></TT> object, see the <TT><FONT FACE="Courier">java.net.URL</FONT></TT> class documentation in <A HREF="ch33.htm" >Chapter 33</A>.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="Returns.gif"></FONT></TT>
</TD><TD >An <TT><FONT FACE="Courier">AudioClip</FONT></TT> object that can be played at a later time. For more information on the <TT><FONT FACE="Courier">AudioClip</FONT></TT> interface, see the <TT><FONT FACE="Courier">java.applet.AudioClip</FONT></TT> documentation later in this chapter.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getAudioClip</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Applet</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="applet.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public AudioClip getAudioClip(URL url,
String name)</FONT></TT>
</BLOCKQUOTE>
<P>
This <TT><FONT FACE="Courier">getAudioClip</FONT></TT> function
accepts both the <TT><FONT FACE="Courier">URL</FONT></TT> input
parameter containing base location information as well as a <TT><FONT FACE="Courier">String</FONT></TT>
input parameter containing the filename. This function is useful
if, for instance, the base URL of the applet is unknown. The applet
could then call:
<BLOCKQUOTE>
<TT><FONT FACE="Courier">RocknRoll = getAudioClip(getDocumentBase(),
&quot;paul_westerberg.au&quot;);</FONT></TT>
</BLOCKQUOTE>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="Parame.gif"></FONT></TT></TD>
<TD><TT><FONT FACE="Courier">url</FONT></TT> is a <TT><FONT FACE="Courier">URL</FONT></TT> object containing base location information for the <TT><FONT FACE="Courier">AudioClip</FONT></TT> to be retrieved (such as <TT><A TARGET="resource window" HREF="http://www.sony.com">http://www.sony.com</A></TT>). For more information on the URL object, see the <TT><FONT FACE="Courier">java.net.URL</FONT></TT> class documentation in <A HREF="ch33.htm" >Chapter 33</A>.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="Parame.gif"></FONT></TT>
</TD><TD ><TT><FONT FACE="Courier">name</FONT></TT> is a <TT><FONT FACE="Courier">String</FONT></TT> object containing a filename relative to the base URL passed using the <TT><FONT FACE="Courier">url</FONT></TT> argument.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="Returns.gif"></FONT></TT>
</TD><TD >An <TT><FONT FACE="Courier">AudioClip</FONT></TT> object that can be played at a later time. For more information on the <TT><FONT FACE="Courier">AudioClip</FONT></TT> interface, see the <TT><FONT FACE="Courier">java.applet.AudioClip</FONT></TT> documentation later in this chapter.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getAppletInfo</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Applet</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="applet.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public String getAppletInfo()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">getAppletInfo</FONT></TT> is provided
for applet authors to return name, copyright, and version information
for their applets. The default implementation returns null.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="Returns.gif"></FONT></TT></TD>
<TD >A <TT><FONT FACE="Courier">String</FONT></TT> containing author, version, and copyright information (or anything else) for the applet.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getParameterInfo</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Applet</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="applet.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public String[][] getParameterInfo()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">getParameterInfo</FONT></TT> is provided
for applet authors to provide information on any parameters that
the applet may take as input. Conventional return values have
the following information: <TT><I><FONT FACE="Courier">name</FONT></I></TT>,
<TT><I><FONT FACE="Courier">type</FONT></I></TT>, and <TT><I><FONT FACE="Courier">comments</FONT></I></TT>.
The default implementation returns a null <TT><FONT FACE="Courier">String</FONT></TT>
array.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="Returns.gif"></FONT></TT></TD>
<TD >A <TT><FONT FACE="Courier">String</FONT></TT> array where each element contains, by Java conventions, three values: <TT><I><FONT FACE="Courier">name</FONT></I></TT>, <TT><I><FONT FACE="Courier">type</FONT></I></TT>, and <TT><I><FONT FACE="Courier">comments</FONT></I></TT>. Each of these elements represents a parameter that the applet takes as input.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">play</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Applet</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="applet.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void play(URL url)</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">play</FONT></TT> is used to play an <TT><FONT FACE="Courier">AudioClip</FONT></TT>
at the location given by the <TT><FONT FACE="Courier">URL</FONT></TT>
input parameter. For more information on the <TT><FONT FACE="Courier">AudioClip</FONT></TT>
interface, see the documentation on the <TT><FONT FACE="Courier">java.applet.AudioClip</FONT></TT>
interface later in this chapter.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="Parame.gif"></FONT></TT></TD>
<TD ><TT><FONT FACE="Courier">url</FONT></TT> is a <TT><FONT FACE="Courier">URL</FONT></TT> object containing location information for the clip to be retrieved. For more information on the <TT><FONT FACE="Courier">URL</FONT></TT> object, see the <TT><FONT FACE="Courier">java.net.URL</FONT></TT> class documentation in <A HREF="ch33.htm" >Chapter 33</A>.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">play</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Applet</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="applet.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void play(URL url, String name)</FONT></TT>
</BLOCKQUOTE>
<P>
This <TT><FONT FACE="Courier">play</FONT></TT> method is used
to play an <TT><FONT FACE="Courier">AudioClip</FONT></TT> given
a base URL and a filename for input parameters. For more information
on the <TT><FONT FACE="Courier">AudioClip</FONT></TT> interface,
see the documentation on the <TT><FONT FACE="Courier">java.applet.AudioClip</FONT></TT>
interface later in this chapter.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="Parame.gif"></FONT></TT></TD>
<TD><FONT FACE="Courier">url</FONT> is a <TT><FONT FACE="Courier">URL</FONT></TT> object containing base location information for the <TT><FONT FACE="Courier">AudioClip</FONT></TT> to be retrieved (such as <TT><A TARGET="resource window" HREF="http://www.sony.com">http://www.sony.com</A></TT>). For more information on the <TT><FONT FACE="Courier">URL</FONT></TT> object, see the <TT><FONT FACE="Courier">java.net.URL</FONT></TT> class documentation in <A HREF="ch33.htm" >Chapter 33</A>.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="Parame.gif"></FONT></TT>
</TD><TD ><FONT FACE="Courier">name</FONT> is a <TT><FONT FACE="Courier">String</FONT></TT> object containing a filename relative to the base URL passed using the <TT><FONT FACE="Courier">URL</FONT></TT> argument.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">init</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Applet</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="applet.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void init()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">init</FONT></TT> method is called
automatically after the applet is created. This function never
needs to be called directly.<P><CENTER><TABLE BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%>
<H4><TT><FONT FACE="Courier"><IMG SRC="Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">start</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Applet</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="applet.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void start()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">start</FONT></TT> method is called
automatically to start the applet after it has been initialized.
This function never needs to be called directly. <TT><FONT FACE="Courier">Start</FONT></TT>
is called when an applet is first displayed on a screen, or when
a page is revisited within a Web browser.<P><CENTER><TABLE BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%>
<H4><TT><FONT FACE="Courier"><IMG SRC="Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">stop</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Applet</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="applet.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void stop()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">stop</FONT></TT> method is called
automatically to stop an applet from running. This function never
needs to be called directly unless the applet knows that it needs
to stop executing. <TT><FONT FACE="Courier">Stop</FONT></TT> is
called when the Web page containing the applet is replaced by
another Web page.<P><CENTER><TABLE BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%>
<H4><TT><FONT FACE="Courier"><IMG SRC="Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">destroy</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Applet</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="applet.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void destroy()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">destroy</FONT></TT> method is called
automatically when the applet's system resources are being reclaimed.
This function never needs to be called directly. <TT><FONT FACE="Courier">Destroy</FONT></TT>
is called after the <TT><FONT FACE="Courier">Stop</FONT></TT>
method has finished.<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=8%><A NAME="AppletContext"><IMG SRC="Inter.gif"></A></TD><TD WIDTH=499>
<H2><TT><FONT SIZE=5 COLOR=#FF0000 FACE="Courier">AppletContext</FONT></TT>
</H2>

</TD><TD WIDTH=8%><IMG SRC="applet.gif"></TD></TR>
</TABLE></CENTER>
<P>
<P>
The <TT><FONT FACE="Courier">AppletContext</FONT></TT> interface
is provided to give information on an applet's environment. An
<TT><FONT FACE="Courier">AppletContext</FONT></TT> interface can
be obtained by calling the <TT><FONT FACE="Courier">Applet</FONT></TT>
class's <TT><FONT FACE="Courier">getAppletContext()</FONT></TT>
method.
<P>
Listing 27.2 shows the declarations for all of the public methods
included in the <TT><FONT FACE="Courier">java.applet.AppletContext</FONT></TT>
class.
<HR>
<BLOCKQUOTE>
<B>Listing 27.2. Public members of </B><TT><B><FONT FACE="Courier">java.applet.AppletContext</FONT></B></TT><B>.
<BR>
</B>
</BLOCKQUOTE>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public interface AppletContext {<BR>
&nbsp;&nbsp;public abstract AudioClip getAudioClip(URL url)<BR>
&nbsp;&nbsp;public abstract Image getImage(URL url)<BR>
&nbsp;&nbsp;public abstract Applet getApplet(String name)<BR>
&nbsp;&nbsp;public abstract Enumeration getApplets()<BR>
&nbsp;&nbsp;public abstract void showDocument(URL url)<BR>
&nbsp;&nbsp;public abstract void showDocument(URL url, String
target)<BR>
&nbsp;&nbsp;public abstract void showStatus(String status)<BR>
}</FONT></TT>
</BLOCKQUOTE>
<HR>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getAudioClip</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">AppletContext</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="applet.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public abstract AudioClip getAudioClip(URL
url)</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">getAudioClip</FONT></TT> retrieves an
<TT><FONT FACE="Courier">AudioClip</FONT></TT> based on the <TT><FONT FACE="Courier">URL</FONT></TT>
input parameter.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="Parame.gif"></FONT></TT></TD>
<TD ><FONT FACE="Courier">url</FONT> is a <TT><FONT FACE="Courier">URL</FONT></TT> object containing location information for the clip to be retrieved. For more information on the <TT><FONT FACE="Courier">URL</FONT></TT> object, see the <TT><FONT FACE="Courier">java.net.URL</FONT></TT> class documentation in <A HREF="ch33.htm" >Chapter 33</A>.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="Returns.gif"></FONT></TT>
</TD><TD >An <TT><FONT FACE="Courier">AudioClip</FONT></TT> object that can be played at a later time. For more information on the <TT><FONT FACE="Courier">AudioClip</FONT></TT> interface, see the <TT><FONT FACE="Courier">java.applet.AudioClip</FONT></TT> documentation later in this chapter.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getImage</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">AppletContext</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="applet.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public abstract Image getImage(URL url)</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">getImage</FONT></TT> retrieves image
information based on the <TT><FONT FACE="Courier">URL</FONT></TT>
input parameter. Note that this function returns immediately and
does not retrieve the entire image. This image will not be retrieved
until the <TT><FONT FACE="Courier">Image</FONT></TT> object is
actually needed.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="Parame.gif"></FONT></TT></TD>
<TD ><FONT FACE="Courier">url</FONT> is a <TT><FONT FACE="Courier">URL</FONT></TT> object containing location information for the image to be retrieved. For more information on the <TT><FONT FACE="Courier">URL</FONT></TT> object, see the <TT><FONT FACE="Courier">java.net.URL</FONT></TT> class documentation in <A HREF="ch33.htm" >Chapter 33</A>.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="Returns.gif"></FONT></TT>
</TD><TD >An <TT><FONT FACE="Courier">Image</FONT></TT> object containing information about the URL passed in. For more information on the <TT><FONT FACE="Courier">Image</FONT></TT> class, see the <TT><FONT FACE="Courier">java.awt.Image</FONT></TT> documentation in <A HREF="ch28.htm" >Chapter 28</A>.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getApplet</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">AppletContext</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="applet.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public abstract Applet getApplet(String
name)</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">getApplet</FONT></TT> returns an applet
from the current <TT><FONT FACE="Courier">AppletContext</FONT></TT>
based on the input name argument.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="Parame.gif"></FONT></TT></TD>
<TD ><FONT FACE="Courier">name</FONT> is a <TT><FONT FACE="Courier">String</FONT></TT> object representing an applet's name. This name should correspond to the applet's HTML <TT><FONT FACE="Courier">name</FONT></TT> attribute.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="Returns.gif"></FONT></TT>
</TD><TD >An <TT><FONT FACE="Courier">Applet</FONT></TT> object or null if no applet exists with the designated name.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getApplets</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">AppletContext</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="applet.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public abstract Enumeration getApplets()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">getApplets</FONT></TT> returns an <TT><FONT FACE="Courier">Enumeration</FONT></TT>
interface for all of the applets on the current <TT><FONT FACE="Courier">AppletContext</FONT></TT>.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="Returns.gif"></FONT></TT></TD>
<TD >An <TT><FONT FACE="Courier">Enumeration</FONT></TT> interface that can be used to retrieve all of the applets on the current applet context. For more information on the <TT><FONT FACE="Courier">Enumeration</FONT></TT> interface, see the documentation for <TT><FONT FACE="Courier">java.util.Enumeration</FONT></TT> in <A HREF="ch34.htm" >Chapter 34</A>, &quot;Package<TT><FONT FACE="Courier"> java.util</FONT></TT>.&quot;
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">showDocument</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">AppletContext</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="applet.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public abstract void showDocument(URL
url)</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">showDocument</FONT></TT> loads the <TT><FONT FACE="Courier">URL</FONT></TT>
argument into the current <TT><FONT FACE="Courier">AppletContext</FONT></TT>
if it is a valid URL. This method may be ignored, depending on
the applet context.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="Parame.gif"></FONT></TT></TD>
<TD ><FONT FACE="Courier">url</FONT> is a <TT><FONT FACE="Courier">URL</FONT></TT> object containing location information for the image to be retrieved. For more information on the <TT><FONT FACE="Courier">URL</FONT></TT> object, see the <TT><FONT FACE="Courier">java.net.URL class</FONT></TT> documentation in <A HREF="ch33.htm" >Chapter 33</A>.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">showDocument</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">AppletContext</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="applet.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public abstract void showDocument(URL
url, String target)</FONT></TT>
</BLOCKQUOTE>
<P>
This <TT><FONT FACE="Courier">showDocument</FONT></TT> method
loads the <TT><FONT FACE="Courier">URL</FONT></TT> argument into
a target window or frame depending on the target string. This
method may be ignored, depending on the applet context.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="Parame.gif"></FONT></TT></TD>
<TD ><FONT FACE="Courier">url</FONT> is a <TT><FONT FACE="Courier">URL</FONT></TT> object containing location information for the image to be retrieved. For more information on the <TT><FONT FACE="Courier">URL</FONT></TT> object, see the <TT><FONT FACE="Courier">java.net.URL</FONT></TT> class documentation in <A HREF="ch33.htm" >Chapter 33</A>.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="Parame.gif"></FONT></TT>
</TD><TD ><FONT FACE="Courier">target</FONT>-The target string can be one of the following values:
</TD></TR>
</TABLE></CENTER>
<P>
<UL>
<LI><TT><FONT FACE="Courier">_self</FONT></TT>-show in current
frame
<LI><TT><FONT FACE="Courier">_parent</FONT></TT>-show in parent
frame
<LI><TT><FONT FACE="Courier">_top</FONT></TT>-show in top-most
frame
<LI><TT><FONT FACE="Courier">_blank</FONT></TT>-show in new unnamed
top-level window
<LI><TT><FONT FACE="Courier">&lt;other&gt;</FONT></TT>-show in
new top-level window named <TT><FONT FACE="Courier">&lt;other&gt;</FONT></TT>
</UL>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">showStatus</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">AppletContext</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="applet.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public abstract void showStatus(String
status)</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">showStatus</FONT></TT> shows a status
message using the applet's context.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="Parame.gif"></FONT></TT></TD>
<TD ><FONT FACE="Courier">msg</FONT> is a string containing the message to be displayed.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=8%><A NAME="AppletStub"><IMG SRC="Inter.gif"></A></TD><TD WIDTH=499>
<H2><TT><FONT SIZE=5 COLOR=#FF0000 FACE="Courier">AppletStub</FONT></TT>
</H2>

</TD><TD WIDTH=8%><IMG SRC="applet.gif"></TD></TR>
</TABLE></CENTER>
<P>
<P>
The <TT><FONT FACE="Courier">java.applet.AppletStub</FONT></TT>
interface is most often used to build applet viewers, browsers,
or other tools that want to display applets within them. This
interface is not normally implemented by Java applet developers.
<P>
Listing 27.3 shows the declarations for all of the public methods
included in the <TT><FONT FACE="Courier">java.applet.AppletStub</FONT></TT>
class.
<HR>
<BLOCKQUOTE>
<B>Listing 27.3. Public members of </B><TT><B><FONT FACE="Courier">java.applet.AppletStub</FONT></B></TT><B>.
<BR>
</B>
</BLOCKQUOTE>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public interface AppletStub {<BR>
&nbsp;&nbsp;public abstract boolean isActive()<BR>
&nbsp;&nbsp;public abstract URL getDocumentBase()<BR>
&nbsp;&nbsp;public abstract URL getCodeBase()<BR>
&nbsp;&nbsp;public abstract String getParameter(String name)<BR>
&nbsp;&nbsp;public abstract AppletContext getAppletContext()<BR>
&nbsp;&nbsp;public abstract void appletResize(int width, int height)
<BR>
}</FONT></TT>
</BLOCKQUOTE>
<HR>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">isActive</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">AppletStub</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="applet.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public abstract boolean isActive()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">isActive</FONT></TT> is used to determine
whether this applet is currently active.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="Returns.gif"></FONT></TT></TD>
<TD ><FONT FACE="Courier">isActive</FONT> returns <TT><FONT FACE="Courier">true</FONT></TT> if the applet is active; <TT><FONT FACE="Courier">false</FONT></TT> if not.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getDocumentBase</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">AppletStub</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="applet.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public abstract URL getDocumentBase()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">getDocumentBase</FONT></TT> returns the
URL of the current page that this applet is embedded in.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="Returns.gif"></FONT></TT></TD>
<TD >A <TT><FONT FACE="Courier">URL</FONT></TT> object (see the <TT><FONT FACE="Courier">java.net.URL</FONT></TT> class documentation in <A HREF="ch33.htm" >Chapter 33</A>) containing information about the current URL.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getCodeBase</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">AppletStub</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="applet.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public abstract URL getCodeBase()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">getCodeBase</FONT></TT> returns the URL
of the applet itself.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="Returns.gif"></FONT></TT></TD>
<TD >A <TT><FONT FACE="Courier">URL</FONT></TT> object (see the <TT><FONT FACE="Courier">java.net.URL</FONT></TT> class documentation in <A HREF="ch33.htm" >Chapter 33</A>) containing information about the applet's URL.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getParameter</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">AppletStub</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="applet.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public abstract String getParameter(String
name)</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">getParameter</FONT></TT> returns the
<TT><FONT FACE="Courier">String</FONT></TT> value of the parameter
passed in using the HTML <TT><FONT FACE="Courier">&lt;PARAM&gt;</FONT></TT>
tag. (For more information on parameters, <A HREF="ch12.htm" >see Chapter 12</A>.)<P><CENTER><TABLE BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%>
<H4><TT><FONT FACE="Courier"><IMG SRC="Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getAppletContext</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">AppletStub</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="applet.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public abstract AppletContext getAppletContext()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">getAppletContext</FONT></TT> returns
an <TT><FONT FACE="Courier">AppletContext</FONT></TT> object.
This object can be used to determine information about the applet's
runtime environment.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="Returns.gif"></FONT></TT></TD>
<TD >An <TT><FONT FACE="Courier">AppletContext</FONT></TT> object (see documentation on the <TT><FONT FACE="Courier">AppletContext</FONT></TT> interface earlier in this chapter).
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">appletResize</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">AppletStub</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="applet.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public abstract void appletResize(int
width, int height)</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">appletResize</FONT></TT> is called when
the applet wants to be resized.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="Parame.gif"></FONT></TT></TD>
<TD ><FONT FACE="Courier">width</FONT> is an integer value specifying the applet's new width.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="Parame.gif"></FONT></TT>
</TD><TD ><FONT FACE="Courier">height</FONT> is an integer value specifying the applet's new height.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=8%><A NAME="AudioClip"><IMG SRC="Inter.gif"></A></TD><TD WIDTH=499>
<H2><TT><FONT SIZE=5 COLOR=#FF0000 FACE="Courier">AudioClip</FONT></TT>
</H2>

</TD><TD WIDTH=8%><IMG SRC="applet.gif"></TD></TR>
</TABLE></CENTER>
<P>
<P>
The <TT><FONT FACE="Courier">AudioClip</FONT></TT> interface is
used to provide high-level access to sound playback capabilities.
This interface, like <TT><FONT FACE="Courier">AppletContext</FONT></TT>
and <TT><FONT FACE="Courier">AppletStub</FONT></TT>, is usually
only implemented by applet viewers.
<P>
Listing 27.4 shows the declarations for all of the public methods
included in the <TT><FONT FACE="Courier">java.applet.AudioClip</FONT></TT>
class.
<HR>
<BLOCKQUOTE>
<B>Listing 27.4. Public members of </B><TT><B><FONT FACE="Courier">java.applet.AudioClip</FONT></B></TT><B>.
<BR>
</B>
</BLOCKQUOTE>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public interface AudioClip {<BR>
&nbsp;&nbsp;public abstract void play()<BR>
&nbsp;&nbsp;public abstract void loop()<BR>
&nbsp;&nbsp;public abstract void stop()<BR>
}</FONT></TT>
</BLOCKQUOTE>
<HR>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">play</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">AudioClip</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="applet.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public abstract void play()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">play</FONT></TT> method plays audio
files from the beginning until the end or <TT><FONT FACE="Courier">stop</FONT></TT>
method is called.<P>
<CENTER><TABLE BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%>
<H4><TT><FONT FACE="Courier"><IMG SRC="Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">loop</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">AudioClip</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="applet.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public abstract void loop()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">loop</FONT></TT> method plays audio
files in a loop continuously.<P>
<CENTER><TABLE BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%>
<H4><TT><FONT FACE="Courier"><IMG SRC="Method.gif"></FONT></TT></H4>

</TD><TD><H4><TT><FONT FACE="Courier">stop</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">AudioClip</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="applet.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public abstract void stop()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">stop</FONT></TT> method stops the
playing of an audio file.
<P>
<HR WIDTH="100%"></P>

</P></CENTER>

<P>
<HR WIDTH="100%"></P>

<!-- reference library footer #1-->
</CENTER>
<IMG SRC="/images/rule.gif" WIDTH="460" HEIGHT="5" VSPACE="5"
ALT="Ruler image"><br>

<FONT SIZE="-1">

Contact <a href="mailto:reference@developer.com">
reference@developer.com</a> with questions or comments.<br>


<a href="/legal/">
Copyright 1998</a> 
<a href="http://www.earthweb.com" target="_top">
EarthWeb Inc.</a>,  All rights reserved.<BR>
PLEASE READ THE <a href="/reference/usage.html">ACCEPTABLE USAGE STATEMENT</a>.
<BR>
Copyright 1998 Macmillan Computer Publishing. All rights reserved.
</FONT>
</BLOCKQUOTE>


<!--outer table--><TD VALIGN="TOP">

<!--right side ads -->
<a target="resource window" href="http://adserver.developer.com/cgi-bin/accipiter/adclick.exe/AREA=DCAD1.REF" alt="Click here for more info"><img src="http://adserver.developer.com/cgi-bin/accipiter/adserver.exe/AREA=DCAD1.REF" alt="Click here for more info" height="88" width="88" border="0"></a>
<P>
<a target="resource window" href="http://adserver.developer.com/cgi-bin/accipiter/adclick.exe/AREA=DCAD2.REF" alt="Click here for more info"><img src="http://adserver.developer.com/cgi-bin/accipiter/adserver.exe/AREA=DCAD2.REF" alt="Click here for more info" height="88" width="88" border="0"></a>
<P>



</td>
</tr>
</table>
</BODY>
</HTML>



