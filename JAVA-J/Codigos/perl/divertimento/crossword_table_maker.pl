#!perl -w use strict; # I wrote this to generate a file, not be a cgi script, but you could... # use CGI.pm; open GRID, '>grid.html' or die $!; select GRID; print "\n"; my $cellwidth = '20'; # pixel or percent my $cellheight = '4'; # pixels only my $counter = 0; sub Solid { return " \n"; } sub Open { return " \n"; } sub Numbered { ++$counter; return "<TD WIDTH='$cellwidth' HEIGHT='$cellheight' BGCOLOR='WHITE'". "ALIGN='LEFT' VALIGN='TOP'>$counter\n"; } # These two arrays are used to generate the grid. # numbers in @line correspond to the functions in @type. # 0 black box, 1, white box, 2, numbered box. my @type = ( \&Solid, \&Open, \&Numbered ); my @line = ( '020000002000002000000000000', '010200201021111110000020000', '010100101000001002111110000', '010102111121111111000010020', '010100000010001001000202010', '211121111110001021111101010', '100010000010001001000101010', '100010212111001002111111110', '100010001010000001000101010', '100010001000021111120001010', '102111001000000000010001010', '101010211000000000010200200', '101010001000000000211111111', '101010000000211111010100100', '102211111111100000000100100', '100100000000102020000100100', '000100000000101010000100100', '002111000211111111100000000', '000000000000101000000000000', '000000211111111000000000000', ); print "\n"; foreach ( @line ) { print " \n"; print map { &{$type[$_]} } split //; print " 
"; } print "\n \n\n"; 