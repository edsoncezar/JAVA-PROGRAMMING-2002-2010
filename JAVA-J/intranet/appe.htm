<HTML>
<HEAD>
<TITLE>developer.com - Reference</TITLE>

<META NAME="Author" CONTENT="developer.com">
<META NAME="Keywords" CONTENT="javascript, ActiveX, VRML, Push, channel,
push channel, applet, directory, news, community, developer, internet,
intranet, java, java applet, J++, javabeans, java products, tools, java
tools, JDK, java development kit, java development environment, JIT,
JavaPlan, enterprise tools, JVM, Java Virtual Machine, Java resources, API,
browser, java documentation, CDF, Common Desktop Format, RDF, Resource
Description Framework, Netcaster, Netcast, Castanet, meta-language, metadata,
solaris, Solaris, SUN, CGI, Perl, Oracle, database, network, Netscape API,
Apache, apache, SSL, mSQL, Netscape, Fasttrack, FastTrack,
industry standard, ActiveX bridge, web, internet, site, site
design, microsoft, active server pages, asp, iis, nt, win95, 95, html, cgi,
frontpage, business, corporate, vbscript, javascript, activex, isapi,
database, access, sql, server, www, 3.0, 3.01, 3.02, 3.03, 3.04, 4.0,
4.0b2, 4.01, 4.03, 4.04, connection, online, commerce, publisher,
publishing, publish, webmaster, dynamic html, dhtml, windows 98, netscape,
netscape software, shareware, magazines, jobs, japan, free, freeware, free
stuff">
<META NAME="description" CONTENT="Developer.com is the leading online
service for developers. It includes Gamelan, the official 
directory for Java, as well
as news, information, tutorials, and directories for other Internet technologies
including ActiveX, JavaScript, perl, VRML, Java Beans, push technologies, and
other Internet and intranet technologies. Developer.com is also the home of
Developer Direct, the Professional Developer's Store, where developers can
purchase and download thousands of Web, authoring and other development
products at some of today's lowest prices.">
<META NAME="distribution" CONTENT="global">
<META NAME="resource-type" CONTENT="document">
<META NAME="language" CONTENT="en">

</HEAD>
<BODY BACKGROUND="/images/curve_r-wide.gif" BGCOLOR="#FFFFFF" TEXT="#000000" 
LINK="#DD0000" VLINK="#999999" ALINK="#FF0000">

<TABLE>
<TR><TD VALIGN=TOP WIDTH=120>
<A HREF="/" >
<IMG SRC="/images/masthead_r.gif" WIDTH="100" HEIGHT="78" BORDER="0"
ALT="Developer.com Logo"></a>
</TD><TD>
<a target="resource window" href="http://adserver.developer.com/cgi-bin/accipiter/adclick.exe/AREA=DCBAN.REF/DT=null">
<img src="http://adserver.developer.com/cgi-bin/accipiter/adserver.exe/AREA=DCBAN.REF/DT=null" HEIGHT="60" WIDTH="468" ALT="Click here to support our advertisers"><BR><CENTER>Click here to support our advertisers</CENTER></a>
</TD></TR>
</TABLE>
<!--outer table--><TABLE>
<!--outer table--><TR>
<!--outer table--><TD VALIGN="TOP">

<!--navbar info -->

<table><tr><td>

<A HREF="http://www.developerdirect.com/" >
<IMG SRC="/images/button_s.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><b>SHOPPING</b></font></a>

</td></tr><tr><td>

<A HREF="/community/jobs/c_jobs.html">
<IMG SRC="/images/button_d.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><B>JOB BANK</B></font></a>

</td></tr><tr><td>

<A HREF="http://www.classifieds2000.com/cgi-cls/display.exe?Developer+computer+searchcomputercategories">
<IMG SRC="/images/button_d.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><B>CLASSIFIEDS</B></font></a>

</td></tr><tr><td>

<A HREF="/directories/directories.html">
<IMG SRC="/images/button_d.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><B>DIRECTORIES</B></font></a>

</td></tr><tr><td>

<A HREF="/reference/">
<IMG SRC="/images/button_r.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><B>REFERENCE</B></font></a>

<br>

<a href="/reference/r_library.html">
<FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000">
Online Library</a></font>

</td></tr><tr><td>

<A HREF="/classroom/">
<IMG SRC="/images/button_r.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><B>LEARNING CENTER</B></font></a>

</td></tr><tr><td>

<A HREF="/journal/">
<IMG SRC="/images/button_n.gif" width="15" height="11" BORDER="0"><B><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000">JOURNAL</font></B></a>

</td></tr><tr><td>

<A HREF="/news/">
<IMG SRC="/images/button_d.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><b>NEWS CENTRAL</b></font></a>

</td></tr><tr><td>

<A HREF="/downloads/">
<IMG SRC="/images/button_d.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><b>DOWNLOADS</b></font></a>

</td></tr><tr><td>

<A HREF="/community/" >
<IMG SRC="/images/button_c.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><B>COMMUNITY</B></font></a>

</td></tr><tr><td>

<A HREF="/calendar/">
<IMG SRC="/images/button_d.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><b>CALENDAR</b></font></a>

</td></tr><tr><td>

<A HREF="/about/">
<IMG SRC="/images/button_a.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><b>ABOUT US</b></a></font>

</td></tr></table>
<table>
<tr>
<td>
<form action="/subscribe/list.cgi" method=post >
<img src="/images/rule.gif" width="100" height="2"><br>
<B><FONT FACE="Arial, Helvetica" SIZE="-1">Journal:</b></font><br>
<input name='email' value='your e-mail' size="11">
<input type='hidden'  name='state' value='Subscribe'>
</td>
</tr>
<tr>
<td>
<input type='submit' value='Subscribe'>
<br>
<font size="-1">Get the weekly email highlights from the most popular journal for developers!
<br>
<a href="http://www.developer.com/subscribe.html">Current issue</a>
<img src="/images/rule.gif" width="100" height="2">
<input type='hidden' name='name' value='New Subscriber'>
</FORM>
</td>
</tr>
</table>
<!--/navbar-->
<font size="-1">
<A HREF="http://www.developer.com">developer.com</a><BR>
<A HREF="http://www.developerdirect.com">developerdirect.com</a><BR>
<A HREF="http://www.htmlgoodies.com">htmlgoodies.com</a><BR>
<A HREF="http://www.javagoodies.com">javagoodies.com</a><br>
<A HREF="http://www.jars.com">jars.com</a><BR>
<a href="http://www.intranetjournal.com">intranetjournal.com</a><br>
<a href="http://www.javascripts.com">javascripts.com</a><br>
</font>
<!--outer table--></TD>

<!--outer table--><TD VALIGN="TOP">
<BLOCKQUOTE>
<P>

<img src="/images/header_r.gif" width="440" height="50">
<P>
<MAP NAME ="header_r2.gif.map">

<AREA SHAPE ="RECT"
      HREF ="/reference/author.html"
      COORDS ="361,0,440,29">
<AREA SHAPE ="RECT"
      HREF ="/reference/basic.html"
      COORDS ="254,0,360,29">
<AREA SHAPE ="RECT"
      HREF ="/reference/help.html"
      COORDS ="183,0,251,29">
<AREA SHAPE ="RECT"
      HREF ="/reference/cool.html"
      COORDS ="100,0,181,29">
<AREA SHAPE ="RECT"
      HREF ="/reference/mybook.html"
      COORDS ="0,0,100,29">
</MAP>

<MAP NAME ="header_r1.gif.map">

<AREA SHAPE ="RECT"
      HREF ="/reference/personalize.html"
      COORDS ="339,0,439,29">
</MAP>

<p>


<font face="Arial,Helvetica" size="-1" color="#006666"><A HREF="/reference/r_library.html"><B>All Categories</A> :</B>
<b><A HREF="/reference/r_java.html">Java</A></b></font><p>

   <META NAME="GENERATOR" CONTENT="Mozilla/3.0b5aGold (WinNT; I) [Netscape]">
<H1><FONT COLOR=#FF0000>Appendix E</FONT></H1>
<H1><B><FONT SIZE=5 COLOR=#FF0000>Differences Between Java and C/C++</FONT></B>
</H1>
<P>
<HR WIDTH="100%"></P>
<P>
<H3 ALIGN=CENTER><FONT COLOR="#000000"><FONT SIZE=+2>CONTENTS<A NAME="CONTENTS"></A>
</FONT></FONT></H3>

<UL>

<LI><A HREF="#ThePreprocessor" >The Preprocessor</A>
<LI><A HREF="#Pointers" >Pointers</A>
<LI><A HREF="#StructuresandUnions" >Structures and Unions</A>
<LI><A HREF="#Functions" >Functions</A>
<LI><A HREF="#MultipleInheritance" >Multiple Inheritance</A>
<LI><A HREF="#Strings" >Strings</A>
<LI><A HREF="#ThegotoStatement" >The goto Statement</A>
<LI><A HREF="#OperatorOverloading" >Operator Overloading</A>
<LI><A HREF="#AutomaticCoercions" >Automatic Coercions</A>
<LI><A HREF="#VariableArguments" >Variable Arguments</A>
<LI><A HREF="#CommandLineArguments" >Command-Line Arguments</A>
</UL>
<HR>
<P>
<FONT COLOR=#000000>It is no secret that the Java language is
highly derived from the C and C++ languages. Because C++ is currently
considered the language of choice for professional software developers,
it's important to understand what aspects of C++ Java inherits.
Of possibly even more importance are what aspects of C++ Java
doesn't support. Because Java is an entirely new language, it
was possible for the language architects to pick and choose which
features from C++ to implement in Java and how.</FONT>
<P>
The focus of this appendix is to point out the differences between
Java and C++. If you are a C++ programmer, you will be able to
appreciate the differences between Java and C++. Even if you don't
have any C++ experience, you can gain some insight into the Java
language by understanding what C++ discrepancies it clears up
in its implementation. Because C++ backwardly supports C, many
of the differences pointed out in this appendix refer to C++,
but inherently apply to C as well.
<H2><A NAME="ThePreprocessor"><FONT SIZE=5 COLOR=#FF0000>The Preprocessor</FONT></A>
</H2>
<P>
All C/C++ compilers implement a stage of compilation known as
the preprocessor. The C++ preprocessor basically performs an intelligent
search and replace on identifiers that have been declared using
the <TT>#define</TT> or <TT>#typedef</TT>
directives. Although most advocates of C++ discourage the use
of the preprocessor, which was inherited from C, it is still widely
used by most C++ programmers. Most of the processor definitions
in C++ are stored in header files, which complement the actual
source code files.
<P>
The problem with the preprocessor approach is that it provides
an easy way for programmers to inadvertently add unnecessary complexity
to a program. What happens is that many programmers using the
<TT>#define</TT> and <TT>#typedef</TT>
directives end up inventing their own sublanguage within the confines
of a particular project. This results in other programmers having
to go through the header files and sort out all the <TT>#define</TT>
and <TT>#typedef</TT> information
to understand a program, which makes code maintenance and reuse
almost impossible. An additional problem with the preprocessor
approach is that it is weak when it comes to type checking and
validation.
<P>
Java does not have a preprocessor. It provides similar functionality
(<TT>#define</TT>, <TT>#typedef</TT>,
and so on) to that provided by the C++ preprocessor, but with
far more control. Constant data members are used in place of the
<TT>#define</TT> directive, and class
definitions are used in lieu of the <TT>#typedef</TT>
directive. The result is that Java source code is much more consistent
and easier to read than C++ source code. Additionally, Java programs
don't use header files; the Java compiler builds class definitions
directly from the source code files, which contain both class
definitions and method implementations.
<H2><A NAME="Pointers"><FONT SIZE=5 COLOR=#FF0000>Pointers</FONT></A>
</H2>
<P>
Most developers agree that the misuse of pointers causes the majority
of bugs in C/C++ programming. Put simply, when you have pointers,
you have the ability to trash memory. C++ programmers regularly
use complex pointer arithmetic to create and maintain dynamic
data structures. In return, C++ programmers spend a lot of time
hunting down complex bugs caused by their complex pointer arithmetic.
<P>
The Java language does not support pointers. Java provides similar
functionality by making heavy use of references. Java passes all
arrays and objects by reference. This approach prevents common
errors due to pointer mismanagement. It also makes programming
easier in a lot of ways simply because the correct usage of pointers
is easily misunderstood by all but the most seasoned programmers.
<P>
You may be thinking that the lack of pointers in Java will keep
you from being able to implement many data structures, such as
dynamic arrays. The reality is that any pointer task can be carried
out just as easily and more reliably with objects and arrays of
objects. You then benefit from the security provided by the Java
runtime system; it performs boundary checking on all array indexing
operations.
<H2><A NAME="StructuresandUnions"><FONT SIZE=5 COLOR=#FF0000>Structures
and Unions</FONT></A></H2>
<P>
There are three types of complex data types in C++: classes, structures,
and unions. Java only implements one of these data types: classes.
Java forces programmers to use classes when the functionality
of structures and unions is desired. Although this sounds like
more work for the programmer, it actually ends up being more consistent,
because classes can imitate structures and unions with ease. The
Java designers really wanted to keep the language simple, so it
only made sense to eliminate aspects of the language that overlapped.
<H2><A NAME="Functions"><FONT SIZE=5 COLOR=#FF0000>Functions</FONT></A>
</H2>
<P>
In C, code is organized into functions, which are global subroutines
accessible to a program. C++ added classes and in doing so provided
class methods, which are functions that are connected to classes.
C++ class methods are very similar to Java class methods. However,
because C++ still supports C, there is nothing discouraging C++
programmers from using functions. This results in a mixture of
function and method use that makes for confusing programs.
<P>
Java has no functions. Being a purer object-oriented language
than C++, Java forces programmers to bundle all routines into
class methods. There is no limitation imposed by forcing programmers
to use methods instead of functions. As a matter of fact, implementing
routines as methods encourages programmers to organize code better.
Keep in mind that strictly speaking there is nothing wrong with
the procedural approach of using functions; it just doesn't mix
well with the object-oriented paradigm that defines the core of
Java.
<H2><A NAME="MultipleInheritance"><FONT SIZE=5 COLOR=#FF0000>Multiple
Inheritance</FONT></A></H2>
<P>
Multiple inheritance is a feature of C++ that allows you to derive
a class from multiple parent classes. Although multiple inheritance
is indeed powerful, it is complicated to use correctly and causes
many problems otherwise. It is also very complicated to implement
from the compiler perspective.
<P>
Java takes the high road and provides no direct support for multiple
inheritance. You can implement functionality similar to multiple
inheritance by using interfaces in Java. Java interfaces provide
object method descriptions but contain no implementations.
<H2><A NAME="Strings"><FONT SIZE=5 COLOR=#FF0000>Strings</FONT></A>
</H2>
<P>
C and C++ have no built-in support for text strings. The standard
technique adopted among C and C++ programmers is that of using
null-terminated arrays of characters to represent strings.
<P>
In Java, strings are implemented as first class objects (<TT>String</TT>
and <TT>StringBuffer</TT>), meaning
that they are at the core of the Java language. Java's implementation
of strings as objects provides several advantages:
<UL>
<LI><FONT COLOR=#000000>The manner in which you create strings
and access the elements of strings is consistent across all strings
on all systems</FONT>
<LI><FONT COLOR=#000000>Because the Java string classes are defined
as part of the Java language and not part of some extraneous extension,
Java strings function predictably every time</FONT>
<LI><FONT COLOR=#000000>The Java string classes perform extensive
runtime checking, which helps eliminate troublesome runtime errors</FONT>
</UL>
<H2><A NAME="ThegotoStatement"><FONT SIZE=5 COLOR=#FF0000>The
</FONT><TT><FONT SIZE=5 COLOR=#FF0000 FACE="Courier">goto</TT></FONT><FONT SIZE=5 COLOR=#FF0000>
Statement</FONT></A></H2>
<P>
The dreaded <TT>goto</TT> statement
is pretty much a relic these days even in C and C++, but it is
technically a legal part of the languages. The <TT>goto</TT>
statement has historically been cited as the cause for messy,
impossible to understand, and sometimes even impossible to predict
code known as &quot;spaghetti code.&quot; The primary usage of
the <TT>goto</TT> statement has merely
been as a convenience to substitute not thinking through an alternative,
more structured branching technique.
<P>
For all these reasons and more, Java does not provide a <TT>goto</TT>
statement. The Java language specifies <TT>goto</TT>
as a keyword, but its usage is not supported. I suppose the Java
designers wanted to eliminate the possibility of even using <TT>goto</TT>
as an identifier! Not including <TT>goto</TT>
in the Java language simplifies the language and helps eliminate
the option of writing messy code.
<H2><A NAME="OperatorOverloading"><FONT SIZE=5 COLOR=#FF0000>Operator
Overloading</FONT></A></H2>
<P>
Operator overloading, which is considered a prominent feature
in C++, is not supported in Java. Although roughly the same functionality
can be implemented by classes in Java, the convenience of operator
overloading is still missing. However, in defense of Java, operator
overloading can sometimes get very tricky. No doubt the Java developers
decided not to support operator overloading to keep the Java language
as simple as possible.
<H2><A NAME="AutomaticCoercions"><FONT SIZE=5 COLOR=#FF0000>Automatic
Coercions</FONT></A></H2>
<P>
Automatic coercion refers to the implicit casting of data types
that sometimes occurs in C and C++. For example, in C++ you can
assign a <TT>float</TT> value to an
<TT>int</TT> variable, which can result
in a loss of information. Java does not support C++ style automatic
coercions. In Java, if a coercion will result in a loss of data,
you must always explicitly cast the data element to the new type.
<H2><A NAME="VariableArguments"><FONT SIZE=5 COLOR=#FF0000>Variable
Arguments</FONT></A></H2>
<P>
C and C++ let you declare functions, such as <TT>printf</TT>,
that take a variable number of arguments. Although this is a convenient
feature, it is impossible for the compiler to thoroughly type
check the arguments, which means problems can arise at runtime
without you knowing. Again Java takes the high road and doesn't
support variable arguments at all.
<H2><A NAME="CommandLineArguments"><FONT SIZE=5 COLOR=#FF0000>Command-Line
Arguments</FONT></A></H2>
<P>
The command-line arguments passed from the system into a Java
program differ in a couple of ways from the command-line arguments
passed into a C++ program. First, the number of parameters passed
differs between the two languages. In C and C++, the system passes
two arguments to a program: <TT>argc</TT>
and <TT>argv</TT>. <TT>argc</TT>
specifies the number of arguments stored in <TT>argv</TT>.
<TT>argv</TT> is a pointer to an array
of characters containing the actual arguments. In Java, the system
passes a single value to a program: <TT>args</TT>.
<TT>args</TT> is an array of <TT>Strings</TT>
that contains the command-line arguments.
<P>
In C and C++, the command-line arguments passed into a program
include the name used to invoke the program. This name always
appears as the first argument and is rarely ever used. In Java,
you already know the name of the program because it is the same
name as the class, so there is no need to pass this information
as a command-line argument. Therefore, the Java runtime system
only passes the arguments following the name that invoked the
program.

<P>
<HR WIDTH="100%"></P>

</P></CENTER>

<P>
<HR WIDTH="100%"></P>

<!-- reference library footer #1-->
</CENTER>
<IMG SRC="/images/rule.gif" WIDTH="460" HEIGHT="5" VSPACE="5"
ALT="Ruler image"><br>

<FONT SIZE="-1">

Contact <a href="mailto:reference@developer.com">
reference@developer.com</a> with questions or comments.<br>


<a href="/legal/">
Copyright 1998</a> 
<a href="http://www.earthweb.com" target="_top">
EarthWeb Inc.</a>,  All rights reserved.<BR>
PLEASE READ THE <a href="/reference/usage.html">ACCEPTABLE USAGE STATEMENT</a>.
<BR>
Copyright 1998 Macmillan Computer Publishing. All rights reserved.
</FONT>
</BLOCKQUOTE>


<!--outer table--><TD VALIGN="TOP">

<!--right side ads -->
<a target="resource window" href="http://adserver.developer.com/cgi-bin/accipiter/adclick.exe/AREA=DCAD1.REF" alt="Click here for more info"><img src="http://adserver.developer.com/cgi-bin/accipiter/adserver.exe/AREA=DCAD1.REF" alt="Click here for more info" height="88" width="88" border="0"></a>
<P>
<a target="resource window" href="http://adserver.developer.com/cgi-bin/accipiter/adclick.exe/AREA=DCAD2.REF" alt="Click here for more info"><img src="http://adserver.developer.com/cgi-bin/accipiter/adserver.exe/AREA=DCAD2.REF" alt="Click here for more info" height="88" width="88" border="0"></a>
<P>



</td>
</tr>
</table>
</BODY>
</HTML>



