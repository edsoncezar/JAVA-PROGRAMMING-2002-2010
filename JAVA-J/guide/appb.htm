<HTML>
<HEAD>
<TITLE>developer.com - Reference</TITLE>

<META NAME="Author" CONTENT="developer.com">
<META NAME="Keywords" CONTENT="javascript, ActiveX, VRML, Push, channel,
push channel, applet, directory, news, community, developer, internet,
intranet, java, java applet, J++, javabeans, java products, tools, java
tools, JDK, java development kit, java development environment, JIT,
JavaPlan, enterprise tools, JVM, Java Virtual Machine, Java resources, API,
browser, java documentation, CDF, Common Desktop Format, RDF, Resource
Description Framework, Netcaster, Netcast, Castanet, meta-language, metadata,
solaris, Solaris, SUN, CGI, Perl, Oracle, database, network, Netscape API,
Apache, apache, SSL, mSQL, Netscape, Fasttrack, FastTrack,
industry standard, ActiveX bridge, web, internet, site, site
design, microsoft, active server pages, asp, iis, nt, win95, 95, html, cgi,
frontpage, business, corporate, vbscript, javascript, activex, isapi,
database, access, sql, server, www, 3.0, 3.01, 3.02, 3.03, 3.04, 4.0,
4.0b2, 4.01, 4.03, 4.04, connection, online, commerce, publisher,
publishing, publish, webmaster, dynamic html, dhtml, windows 98, netscape,
netscape software, shareware, magazines, jobs, japan, free, freeware, free
stuff">
<META NAME="description" CONTENT="Developer.com is the leading online
service for developers. It includes Gamelan, the official 
directory for Java, as well
as news, information, tutorials, and directories for other Internet technologies
including ActiveX, JavaScript, perl, VRML, Java Beans, push technologies, and
other Internet and intranet technologies. Developer.com is also the home of
Developer Direct, the Professional Developer's Store, where developers can
purchase and download thousands of Web, authoring and other development
products at some of today's lowest prices.">
<META NAME="distribution" CONTENT="global">
<META NAME="resource-type" CONTENT="document">
<META NAME="language" CONTENT="en">

</HEAD>
<BODY BACKGROUND="/images/curve_r-wide.gif" BGCOLOR="#FFFFFF" TEXT="#000000" 
LINK="#DD0000" VLINK="#999999" ALINK="#FF0000">

<TABLE>
<TR><TD VALIGN=TOP WIDTH=120>
<A HREF="/" >
<IMG SRC="/images/masthead_r.gif" WIDTH="100" HEIGHT="78" BORDER="0"
ALT="Developer.com Logo"></a>
</TD><TD>
<a target="resource window" href="http://adserver.developer.com/cgi-bin/accipiter/adclick.exe/AREA=DCBAN.REF/DT=null">
<img src="http://adserver.developer.com/cgi-bin/accipiter/adserver.exe/AREA=DCBAN.REF/DT=null" HEIGHT="60" WIDTH="468" ALT="Click here to support our advertisers"><BR><CENTER>Click here to support our advertisers</CENTER></a>
</TD></TR>
</TABLE>
<!--outer table--><TABLE>
<!--outer table--><TR>
<!--outer table--><TD VALIGN="TOP">

<!--navbar info -->

<table><tr><td>

<A HREF="http://www.developerdirect.com/" >
<IMG SRC="/images/button_s.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><b>SHOPPING</b></font></a>

</td></tr><tr><td>

<A HREF="/community/jobs/c_jobs.html">
<IMG SRC="/images/button_d.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><B>JOB BANK</B></font></a>

</td></tr><tr><td>

<A HREF="http://www.classifieds2000.com/cgi-cls/display.exe?Developer+computer+searchcomputercategories">
<IMG SRC="/images/button_d.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><B>CLASSIFIEDS</B></font></a>

</td></tr><tr><td>

<A HREF="/directories/directories.html">
<IMG SRC="/images/button_d.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><B>DIRECTORIES</B></font></a>

</td></tr><tr><td>

<A HREF="/reference/">
<IMG SRC="/images/button_r.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><B>REFERENCE</B></font></a>

<br>

<a href="/reference/r_library.html">
<FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000">
Online Library</a></font>

</td></tr><tr><td>

<A HREF="/classroom/">
<IMG SRC="/images/button_r.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><B>LEARNING CENTER</B></font></a>

</td></tr><tr><td>

<A HREF="/journal/">
<IMG SRC="/images/button_n.gif" width="15" height="11" BORDER="0"><B><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000">JOURNAL</font></B></a>

</td></tr><tr><td>

<A HREF="/news/">
<IMG SRC="/images/button_d.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><b>NEWS CENTRAL</b></font></a>

</td></tr><tr><td>

<A HREF="/downloads/">
<IMG SRC="/images/button_d.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><b>DOWNLOADS</b></font></a>

</td></tr><tr><td>

<A HREF="/community/" >
<IMG SRC="/images/button_c.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><B>COMMUNITY</B></font></a>

</td></tr><tr><td>

<A HREF="/calendar/">
<IMG SRC="/images/button_d.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><b>CALENDAR</b></font></a>

</td></tr><tr><td>

<A HREF="/about/">
<IMG SRC="/images/button_a.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><b>ABOUT US</b></a></font>

</td></tr></table>
<table>
<tr>
<td>
<form action="/subscribe/list.cgi" method=post >
<img src="/images/rule.gif" width="100" height="2"><br>
<B><FONT FACE="Arial, Helvetica" SIZE="-1">Journal:</b></font><br>
<input name='email' value='your e-mail' size="11">
<input type='hidden'  name='state' value='Subscribe'>
</td>
</tr>
<tr>
<td>
<input type='submit' value='Subscribe'>
<br>
<font size="-1">Get the weekly email highlights from the most popular journal for developers!
<br>
<a href="http://www.developer.com/subscribe.html">Current issue</a>
<img src="/images/rule.gif" width="100" height="2">
<input type='hidden' name='name' value='New Subscriber'>
</FORM>
</td>
</tr>
</table>
<!--/navbar-->
<font size="-1">
<A HREF="http://www.developer.com">developer.com</a><BR>
<A HREF="http://www.developerdirect.com">developerdirect.com</a><BR>
<A HREF="http://www.htmlgoodies.com">htmlgoodies.com</a><BR>
<A HREF="http://www.javagoodies.com">javagoodies.com</a><br>
<A HREF="http://www.jars.com">jars.com</a><BR>
<a href="http://www.intranetjournal.com">intranetjournal.com</a><br>
<a href="http://www.javascripts.com">javascripts.com</a><br>
</font>
<!--outer table--></TD>

<!--outer table--><TD VALIGN="TOP">
<BLOCKQUOTE>
<P>

<img src="/images/header_r.gif" width="440" height="50">
<P>
<MAP NAME ="header_r2.gif.map">

<AREA SHAPE ="RECT"
      HREF ="/reference/author.html"
      COORDS ="361,0,440,29">
<AREA SHAPE ="RECT"
      HREF ="/reference/basic.html"
      COORDS ="254,0,360,29">
<AREA SHAPE ="RECT"
      HREF ="/reference/help.html"
      COORDS ="183,0,251,29">
<AREA SHAPE ="RECT"
      HREF ="/reference/cool.html"
      COORDS ="100,0,181,29">
<AREA SHAPE ="RECT"
      HREF ="/reference/mybook.html"
      COORDS ="0,0,100,29">
</MAP>

<MAP NAME ="header_r1.gif.map">

<AREA SHAPE ="RECT"
      HREF ="/reference/personalize.html"
      COORDS ="339,0,439,29">
</MAP>

<p>


<font face="Arial,Helvetica" size="-1" color="#006666"><A HREF="/reference/r_library.html"><B>All Categories</A> :</B>
<b><A HREF="/reference/r_java.html">Java</A></b></font><p>
   <META>
<H1><FONT COLOR=#FF0000>Appendix B</FONT></H1>
<H1><B><FONT SIZE=5 COLOR=#FF0000>Differences Between java and
C++</FONT></B>
</H1>
<P>
<HR WIDTH="100%"></P>
<P>
<H3 ALIGN=CENTER><FONT COLOR="#000000"><FONT SIZE=+2>CONTENTS<A NAME="CONTENTS"></A>
</FONT></FONT></H3>
<UL>
<LI><A HREF="#ProgramStructure" >Program Structure</A>
<UL>
<LI><A HREF="#ThemainMethod" >The main() Method</A>
<LI><A HREF="#Packages" >Packages</A>
<LI><A HREF="#ImportingClasses" >Importing Classes</A>
<LI><A HREF="#FunctionsandVariablesDeclaredOutside" >Functions and Variables Declared Outside of Classes</A>
</UL>
<LI><A HREF="#ProgramDevelopment" >Program Development</A>
<LI><A HREF="#CompilationandExecution" >Compilation and Execution</A>
<LI><A HREF="#ThePreprocessorandCompilerDirectives" >The Preprocessor and Compiler Directives</A>
<LI><A HREF="#TheJavaAPIVersusCLibraries" >The Java API Versus C++ Libraries</A>
<LI><A HREF="#UsingCLASSPATH" >Using CLASSPATH</A>
<LI><A HREF="#LanguageSyntax" >Language Syntax</A>
<UL>
<LI><A HREF="#Comments" >Comments</A>
<LI><A HREF="#Constants" >Constants</A>
<LI><A HREF="#PrimitiveDataTypes" >Primitive Data Types</A>
<LI><A HREF="#Keywords" >Keywords</A>
<LI><A HREF="#JavaClassesVersusCClasses" >Java Classes Versus C++ Classes</A>
<LI><A HREF="#PublicPrivateandProtectedKeywords" >Public, Private, and Protected Keywords</A>
<LI><A HREF="#Variables" >Variables</A>
<LI><A HREF="#Types" >Types</A>
<LI><A HREF="#Pointers" >Pointers</A>
<LI><A HREF="#Objects" >Objects</A>
<LI><A HREF="#Arrays" >Arrays</A>
<LI><A HREF="#Strings" >Strings</A>
<LI><A HREF="#nullVersusNULL" >null Versus NULL</A>
<LI><A HREF="#Statements" >Statements</A>
<LI><A HREF="#MethodsVersusFunctions" >Methods Versus Functions</A>
<LI><A HREF="#Operators" >Operators</A>
</UL>
</UL>
<HR>
<P>
The Java language is very similar to the C and C++ languages,
from which it is derived. These similarities make Java an easy
language to learn for those who have previously programmed in
C++, but they also mask some of the important differences between
Java and C++. This appendix summarizes these differences.
<H2><A NAME="ProgramStructure"><B><FONT SIZE=5 COLOR=#FF0000>Program
Structure</FONT></B></A></H2>
<P>
The following sections identify the differences between the way
Java and C++ programs are structured.
<H3><A NAME="ThemainMethod"><B>The </B><TT><B><FONT SIZE=4 FACE="Courier New">main()</FONT></B></TT><B><FONT SIZE=4>
Method</FONT></B></A></H3>
<P>
Every Java program contains a <TT><FONT FACE="Courier">public</FONT></TT>
class with a <TT><FONT FACE="Courier">main()</FONT></TT> method
that serves as the entry point for that program. A typical Java
program often references other Java classes that are included
within the same package as the program's class or in other compiled
packages.
<P>
C++ programs also make uses of a <TT><FONT FACE="Courier">main()</FONT></TT>
entry point. The C++ analog of the Java method is referred to
as a <I>member function</I>, or as just a <I>function</I>. The
C++ <TT><FONT FACE="Courier">main()</FONT></TT> function takes
two parameters: the <TT><FONT FACE="Courier">int</FONT></TT> <TT><FONT FACE="Courier">argc</FONT></TT>
variable that identifies the number of arguments passed to the
invoked program and the <TT><FONT FACE="Courier">argv[][]</FONT></TT>
character array that contains the program arguments. The Java
<TT><FONT FACE="Courier">main()</FONT></TT> method takes a single
<TT><FONT FACE="Courier">args[]</FONT></TT> parameter of the <TT><FONT FACE="Courier">String</FONT></TT>
class. The number of arguments passed via the <TT><FONT FACE="Courier">main()</FONT></TT>
method invocation is determined by <TT><FONT FACE="Courier">args.length</FONT></TT>.
<P>
The first value passed as the argument to a C++ program is the
name of the program. Subsequent arguments are used to pass other
values. Java programs do not pass the program name as the first
argument to the program and are therefore off by one position
with respect to the arguments passed to C++ programs.
<P>
The <TT><FONT FACE="Courier">main()</FONT></TT> function of a
C++ program has an <TT><FONT FACE="Courier">int</FONT></TT> return
type by default. This is used to return an exit code. The Java
<TT><FONT FACE="Courier">main()</FONT></TT> method has a <TT><FONT FACE="Courier">void</FONT></TT>
return type. The <TT><FONT FACE="Courier">exit()</FONT></TT> method
of the <TT><FONT FACE="Courier">java.lang.System</FONT></TT> class
can be used to return an exit code.
<H3><A NAME="Packages"><B>Packages</B></A></H3>
<P>
All Java classes are defined relative to a package, even if it
is the default <TT><FONT FACE="Courier">noname</FONT></TT> package.
C++ programs do not support a package approach.
<H3><A NAME="ImportingClasses"><B>Importing Classes</B></A></H3>
<P>
Java programs reference classes that are defined in other packages
using the <TT><FONT FACE="Courier">import</FONT></TT> statement.
C++ classes that are declared outside of a compilation unit are
referenced using <TT><FONT FACE="Courier">#include</FONT></TT>
compiler directives.
<H3><A NAME="FunctionsandVariablesDeclaredOutside"><B>Functions
and Variables Declared Outside of Classes</B></A></H3>
<P>
C++ allows functions and variables to be defined outside the scope
of a class. In fact, C++ does not require any classes to be defined.
<P>
Java strictly adheres to a class-oriented approach to program
design. It is impossible to define a method or variable outside
the scope of a class. At least one <TT><FONT FACE="Courier">public</FONT></TT>
class must be defined within a Java program to support the <TT><FONT FACE="Courier">main()</FONT></TT>
method.
<H2><A NAME="ProgramDevelopment"><B><FONT SIZE=5 COLOR=#FF0000>Program
Development</FONT></B></A></H2>
<P>
The following sections identify differences between the way Java
and C++ programs are developed.
<H3><A NAME="CompilationandExecution"><B>Compilation and Execution</B></A>
</H3>
<P>
C++ programs are generally compiled into native machine object
code and executed directly as a process running under the local
operating system.
<P>
Java programs are compiled into the bytecode instructions of the
Java virtual machine and are executed using the Java interpreter
or a Java-compatible browser.
<H3><A NAME="ThePreprocessorandCompilerDirectives"><B>The Preprocessor
and Compiler Directives</B></A></H3>
<P>
C++ source code files are processed by a preprocessor before they
are submitted to the compiler. Java does not use a preprocessor.
<P>
C++ provides the capability to communicate with the C++ compiler
using compiler directives. Java does not provide any similar capability.
<H3><A NAME="TheJavaAPIVersusCLibraries"><B>The Java API Versus
C++ Libraries</B></A></H3>
<P>
The Java API provides a rich set of classes that can be used to
support program development. These classes are largely incompatible
with standard C and C++ libraries. Existing C and C++ code can
be made available to Java programs using native methods.
<H3><A NAME="UsingCLASSPATH"><B>Using </B><TT><B><FONT SIZE=4 FACE="Courier New">CLASSPATH</FONT></B></TT></A>
</H3>
<P>
Java uses the <TT><FONT FACE="Courier">CLASSPATH</FONT></TT> environment
variable to identify Java classes. Other environment variables
are used by C and C++ programs.
<H2><A NAME="LanguageSyntax"><B><FONT SIZE=5 COLOR=#FF0000>Language
Syntax</FONT></B></A></H2>
<P>
The following sections identify significant distinctions between
the syntax of Java and C++.
<H3><A NAME="Comments"><B>Comments</B></A></H3>
<P>
Java and C++ use the same style of comments. Java also provides
the capability to insert doc comments, which are processed by
the <TT><FONT FACE="Courier">javadoc</FONT></TT> program to support
automated program documentation.
<H3><A NAME="Constants"><B>Constants</B></A></H3>
<P>
C++ defines constants using the <TT><FONT FACE="Courier">#DEFINE</FONT></TT>
compiler directive and the <TT><FONT FACE="Courier">const</FONT></TT>
keyword. Java constants are identified using the <TT><FONT FACE="Courier">final</FONT></TT>
keyword.
<H3><A NAME="PrimitiveDataTypes"><B>Primitive Data Types</B></A>
</H3>
<P>
Java provides the <TT><FONT FACE="Courier">boolean</FONT></TT>,
<TT><FONT FACE="Courier">byte</FONT></TT>, <TT><FONT FACE="Courier">short</FONT></TT>,
<TT><FONT FACE="Courier">char</FONT></TT>, <TT><FONT FACE="Courier">int</FONT></TT>,
<TT><FONT FACE="Courier">long</FONT></TT>, <TT><FONT FACE="Courier">float</FONT></TT>,
and <TT><FONT FACE="Courier">double</FONT></TT> primitive data
types. C++ supports the same data types but does not use exactly
the same type names as Java. Java's <TT><FONT FACE="Courier">char</FONT></TT>
data type uses a 16-bit character value to represent Unicode characters.
C++ uses 8-bit ASCII <TT><FONT FACE="Courier">char</FONT></TT>
values.
<H3><A NAME="Keywords"><B>Keywords</B></A></H3>
<P>
Java and C++ each identify different sets of reserved keywords,
although some keywords are reserved by both Java and C++.
<H3><A NAME="JavaClassesVersusCClasses"><B>Java Classes Versus
C++ Classes</B></A></H3>
<P>
Java classes are declared using a similar, but different, syntax
than C++ classes.
<P>
C++ allows functions to be separately prototyped from their actual
implementation. Java does not allow separate function prototyping.
<P>
C++ allows class definitions to be nested. Java does not.
<P>
C++ classes support multiple inheritance. Java classes support
only single inheritance. Java uses interfaces to implement certain
features of multiple inheritance. C++ does not support an analog
to the Java interface. Objective-C does provide similar support.
<P>
C++ supports templates. Java does not.
<H3><A NAME="PublicPrivateandProtectedKeywords"><TT><B><FONT SIZE=4 FACE="Courier New">Public</FONT></B></TT><B><FONT SIZE=4>,
</FONT></B><TT><B><FONT SIZE=4 FACE="Courier New">Private</FONT></B></TT><B><FONT SIZE=4>,
and </FONT></B><TT><B><FONT SIZE=4 FACE="Courier New">Protected</FONT></B></TT><B><FONT SIZE=4>
Keywords</FONT></B></A></H3>
<P>
The access keywords used by Java and C++ have the same names,
but they are used slightly differently. Java access keywords are
defined relative to the package in which a class, interface, variable,
or method is defined. C++ access keywords are defined relative
to the class, data member, and member functions to which they
apply.
<H3><A NAME="Variables"><B>Variables</B></A></H3>
<P>
A Java <I>variable</I> either contains the value of a primitive
data type or refers to a Java object. Java <I>objects</I> are
instances of classes or arrays.
<P>
C++ variables are not restricted in the same manner as Java variables.
They may refer to primitive data types, instances of classes,
arrays, structs, unions, or other data structures.
<H3><A NAME="Types"><B>Types</B></A></H3>
<P>
The types supported by Java are the primitive data types, classes,
interfaces, and arrays. C++ supports a variety of types, including
primitive types, classes, structs, unions, and defined types.
The C++ <TT><FONT FACE="Courier">typedef</FONT></TT> construct
does not have an analog in Java. C++ also supports enumerated
data types, and Java does not. C++ is much more flexible in providing
implicit casting between types. Java supports C++-style casting
operators, but does not support implicit casting to the same extent
as C++.
<H3><A NAME="Pointers"><B>Pointers</B></A></H3>
<P>
C++ allows pointers to other objects to be defined. Java does
not support pointers. All variables that do not contain the values
of primitive data types are references to an object. This reference
value may only be changed as the result of an assignment to a
new object. The reference value may not be directly tampered with
or manipulated as is possible with C++ pointers.
<H3><A NAME="Objects"><B>Objects</B></A></H3>
<P>
Java objects are instances of classes or arrays. C++ objects do
not include arrays.
<P>
Java objects are created using the <TT><FONT FACE="Courier">new</FONT></TT>
operator and are deallocated automatically via the Java garbage
collector. C++ objects can be statically or dynamically allocated.
Static allocation is accomplished using a type declaration. Dynamic
allocation is accomplished using the <TT><FONT FACE="Courier">new</FONT></TT>
operator. C++ variables must be explicitly deallocated using a
destructor or the <TT><FONT FACE="Courier">delete</FONT></TT>
operator.
<H3><A NAME="Arrays"><B>Arrays</B></A></H3>
<P>
Java arrays are similar to C++ arrays. However, there are some
significant differences between the two languages.
<P>
C++ supports true multidimensional arrays. Java supports single-dimensional
arrays; it simulates multidimensional arrays as arrays of arrays.
The approach used by Java is actually more flexible than that
of C++. Java arrays can consist of arrays of different dimensions.
<P>
Java arrays are objects and inherit the methods of the <TT><FONT FACE="Courier">Object</FONT></TT>
class. C++ arrays are not objects in their own right.
<P>
Java arrays are allocated using the <TT><FONT FACE="Courier">new</FONT></TT>
operator and are deallocated when they are garbage-collected.
Java arrays are separately declared and allocated, although both
steps may occur in the same statement. Java arrays can be statically
initialized using the same syntax as C++ arrays. However, C++
requires static initializers to be constant expressions, but Java
does not.
<P>
Java arrays are declared with a more flexible syntax than C++
arrays. In particular, the brackets used in Java array declarations
may be associated with the name of the array being declared or
the type of array being declared.
<H3><A NAME="Strings"><B>Strings</B></A></H3>
<P>
The Java <TT><FONT FACE="Courier">String</FONT></TT> and <TT><FONT FACE="Courier">StringBuffer</FONT></TT>
classes are used to implement text strings. These classes allow
strings to be treated as objects. C++ implements strings as null-terminated
arrays of characters.
<H3><A NAME="nullVersusNULL"><TT><B><FONT SIZE=4 FACE="Courier New">null</FONT></B></TT><B><FONT SIZE=4>
Versus </FONT></B><TT><B><FONT SIZE=4 FACE="Courier New">NULL</FONT></B></TT></A>
</H3>
<P>
The Java <TT><FONT FACE="Courier">null</FONT></TT> keyword is
used to identify a variable as not referencing any object. The
<TT><FONT FACE="Courier">null</FONT></TT> keyword cannot be assigned
to a variable that is declared with a primitive data type. The
C++ <TT><FONT FACE="Courier">NULL</FONT></TT> value is a constant
that is defined as 0.
<H3><A NAME="Statements"><B>Statements</B></A></H3>
<P>
The syntax of Java statements is nearly identical to that of C++.
However, Java does not support a <TT><FONT FACE="Courier">goto</FONT></TT>
statement, whereas C++ does. Java does, however, reserve the <TT><FONT FACE="Courier">goto</FONT></TT>
keyword.
<P>
The Java <TT><FONT FACE="Courier">if</FONT></TT>, <TT><FONT FACE="Courier">while</FONT></TT>,
and <TT><FONT FACE="Courier">do</FONT></TT> statements require
that the conditional expression used to determine the flow of
control results in a <TT><FONT FACE="Courier">boolean</FONT></TT>
value. C++ does not place this restriction on these statements.
<P>
Java supports labeled <TT><FONT FACE="Courier">break</FONT></TT>
and <TT><FONT FACE="Courier">continue</FONT></TT> statements to
break out of and continue executing complex switch and loop constructs.
<P>
Java provides the <TT><FONT FACE="Courier">synchronized</FONT></TT>
statement to support multithreading operations on critical sections.
C++ does not support a <TT><FONT FACE="Courier">synchronized</FONT></TT>
statement.
<P>
Java implements exception handling using the <TT><FONT FACE="Courier">try</FONT></TT>
statement and the <TT><FONT FACE="Courier">catch</FONT></TT> and
<TT><FONT FACE="Courier">finally</FONT></TT> clauses. C++ implements
exception handling in a similar manner, but does not support a
<TT><FONT FACE="Courier">finally</FONT></TT> clause.
<H3><A NAME="MethodsVersusFunctions"><B>Methods Versus Functions</B></A>
</H3>
<P>
The C++ analog of the Java method is the member function. C++
functions are more powerful and flexible than Java methods. C++
functions allow variable-length argument lists and optional arguments.
Java does not support these capabilities.
<P>
C++ allows inline functions to be specified and Java does not.
C++ implements <TT><FONT FACE="Courier">friend</FONT></TT> functions
to circumvent the normal class access restrictions. Java does
not support <TT><FONT FACE="Courier">friend </FONT></TT>functions.
<H3><A NAME="Operators"><B>Operators</B></A></H3>
<P>
The set of operators supported by Java is based on those provided
by C++, although not all C++ operators are supported. In addition,
Java provides operators that are not supported by C++. These include
the <TT><FONT FACE="Courier">instanceof</FONT></TT> operator and
the + operator used with <TT><FONT FACE="Courier">String</FONT></TT>
objects.
<P>
C++ supports operator overloading and Java does not.
<P>
<HR WIDTH="100%"></P>

</P></CENTER>

<P>
<HR WIDTH="100%"></P>

<!-- reference library footer #1-->
</CENTER>
<IMG SRC="/images/rule.gif" WIDTH="460" HEIGHT="5" VSPACE="5"
ALT="Ruler image"><br>

<FONT SIZE="-1">

Contact <a href="mailto:reference@developer.com">
reference@developer.com</a> with questions or comments.<br>


<a href="/legal/">
Copyright 1998</a> 
<a href="http://www.earthweb.com" target="_top">
EarthWeb Inc.</a>,  All rights reserved.<BR>
PLEASE READ THE <a href="/reference/usage.html">ACCEPTABLE USAGE STATEMENT</a>.
<BR>
Copyright 1998 Macmillan Computer Publishing. All rights reserved.
</FONT>
</BLOCKQUOTE>


<!--outer table--><TD VALIGN="TOP">

<!--right side ads -->
<a target="resource window" href="http://adserver.developer.com/cgi-bin/accipiter/adclick.exe/AREA=DCAD1.REF" alt="Click here for more info"><img src="http://adserver.developer.com/cgi-bin/accipiter/adserver.exe/AREA=DCAD1.REF" alt="Click here for more info" height="88" width="88" border="0"></a>
<P>
<a target="resource window" href="http://adserver.developer.com/cgi-bin/accipiter/adclick.exe/AREA=DCAD2.REF" alt="Click here for more info"><img src="http://adserver.developer.com/cgi-bin/accipiter/adserver.exe/AREA=DCAD2.REF" alt="Click here for more info" height="88" width="88" border="0"></a>
<P>



</td>
</tr>
</table>
</BODY>
</HTML>



