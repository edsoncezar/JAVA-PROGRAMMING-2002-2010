<HTML>
<HEAD>
<TITLE>developer.com - Reference</TITLE>

<META NAME="Author" CONTENT="developer.com">
<META NAME="Keywords" CONTENT="javascript, ActiveX, VRML, Push, channel,
push channel, applet, directory, news, community, developer, internet,
intranet, java, java applet, J++, javabeans, java products, tools, java
tools, JDK, java development kit, java development environment, JIT,
JavaPlan, enterprise tools, JVM, Java Virtual Machine, Java resources, API,
browser, java documentation, CDF, Common Desktop Format, RDF, Resource
Description Framework, Netcaster, Netcast, Castanet, meta-language, metadata,
solaris, Solaris, SUN, CGI, Perl, Oracle, database, network, Netscape API,
Apache, apache, SSL, mSQL, Netscape, Fasttrack, FastTrack,
industry standard, ActiveX bridge, web, internet, site, site
design, microsoft, active server pages, asp, iis, nt, win95, 95, html, cgi,
frontpage, business, corporate, vbscript, javascript, activex, isapi,
database, access, sql, server, www, 3.0, 3.01, 3.02, 3.03, 3.04, 4.0,
4.0b2, 4.01, 4.03, 4.04, connection, online, commerce, publisher,
publishing, publish, webmaster, dynamic html, dhtml, windows 98, netscape,
netscape software, shareware, magazines, jobs, japan, free, freeware, free
stuff">
<META NAME="description" CONTENT="Developer.com is the leading online
service for developers. It includes Gamelan, the official 
directory for Java, as well
as news, information, tutorials, and directories for other Internet technologies
including ActiveX, JavaScript, perl, VRML, Java Beans, push technologies, and
other Internet and intranet technologies. Developer.com is also the home of
Developer Direct, the Professional Developer's Store, where developers can
purchase and download thousands of Web, authoring and other development
products at some of today's lowest prices.">
<META NAME="distribution" CONTENT="global">
<META NAME="resource-type" CONTENT="document">
<META NAME="language" CONTENT="en">

</HEAD>
<BODY BACKGROUND="/images/curve_r-wide.gif" BGCOLOR="#FFFFFF" TEXT="#000000" 
LINK="#DD0000" VLINK="#999999" ALINK="#FF0000">

<TABLE>
<TR><TD VALIGN=TOP WIDTH=120>
<A HREF="/" >
<IMG SRC="/images/masthead_r.gif" WIDTH="100" HEIGHT="78" BORDER="0"
ALT="Developer.com Logo"></a>
</TD><TD>
<a target="resource window" href="http://adserver.developer.com/cgi-bin/accipiter/adclick.exe/AREA=DCBAN.REF/DT=null">
<img src="http://adserver.developer.com/cgi-bin/accipiter/adserver.exe/AREA=DCBAN.REF/DT=null" HEIGHT="60" WIDTH="468" ALT="Click here to support our advertisers"><BR><CENTER>Click here to support our advertisers</CENTER></a>
</TD></TR>
</TABLE>
<!--outer table--><TABLE>
<!--outer table--><TR>
<!--outer table--><TD VALIGN="TOP">

<!--navbar info -->

<table><tr><td>

<A HREF="http://www.developerdirect.com/" >
<IMG SRC="/images/button_s.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><b>SHOPPING</b></font></a>

</td></tr><tr><td>

<A HREF="/community/jobs/c_jobs.html">
<IMG SRC="/images/button_d.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><B>JOB BANK</B></font></a>

</td></tr><tr><td>

<A HREF="http://www.classifieds2000.com/cgi-cls/display.exe?Developer+computer+searchcomputercategories">
<IMG SRC="/images/button_d.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><B>CLASSIFIEDS</B></font></a>

</td></tr><tr><td>

<A HREF="/directories/directories.html">
<IMG SRC="/images/button_d.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><B>DIRECTORIES</B></font></a>

</td></tr><tr><td>

<A HREF="/reference/">
<IMG SRC="/images/button_r.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><B>REFERENCE</B></font></a>

<br>

<a href="/reference/r_library.html">
<FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000">
Online Library</a></font>

</td></tr><tr><td>

<A HREF="/classroom/">
<IMG SRC="/images/button_r.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><B>LEARNING CENTER</B></font></a>

</td></tr><tr><td>

<A HREF="/journal/">
<IMG SRC="/images/button_n.gif" width="15" height="11" BORDER="0"><B><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000">JOURNAL</font></B></a>

</td></tr><tr><td>

<A HREF="/news/">
<IMG SRC="/images/button_d.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><b>NEWS CENTRAL</b></font></a>

</td></tr><tr><td>

<A HREF="/downloads/">
<IMG SRC="/images/button_d.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><b>DOWNLOADS</b></font></a>

</td></tr><tr><td>

<A HREF="/community/" >
<IMG SRC="/images/button_c.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><B>COMMUNITY</B></font></a>

</td></tr><tr><td>

<A HREF="/calendar/">
<IMG SRC="/images/button_d.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><b>CALENDAR</b></font></a>

</td></tr><tr><td>

<A HREF="/about/">
<IMG SRC="/images/button_a.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><b>ABOUT US</b></a></font>

</td></tr></table>
<table>
<tr>
<td>
<form action="/subscribe/list.cgi" method=post >
<img src="/images/rule.gif" width="100" height="2"><br>
<B><FONT FACE="Arial, Helvetica" SIZE="-1">Journal:</b></font><br>
<input name='email' value='your e-mail' size="11">
<input type='hidden'  name='state' value='Subscribe'>
</td>
</tr>
<tr>
<td>
<input type='submit' value='Subscribe'>
<br>
<font size="-1">Get the weekly email highlights from the most popular journal for developers!
<br>
<a href="http://www.developer.com/subscribe.html">Current issue</a>
<img src="/images/rule.gif" width="100" height="2">
<input type='hidden' name='name' value='New Subscriber'>
</FORM>
</td>
</tr>
</table>
<!--/navbar-->
<font size="-1">
<A HREF="http://www.developer.com">developer.com</a><BR>
<A HREF="http://www.developerdirect.com">developerdirect.com</a><BR>
<A HREF="http://www.htmlgoodies.com">htmlgoodies.com</a><BR>
<A HREF="http://www.javagoodies.com">javagoodies.com</a><br>
<A HREF="http://www.jars.com">jars.com</a><BR>
<a href="http://www.intranetjournal.com">intranetjournal.com</a><br>
<a href="http://www.javascripts.com">javascripts.com</a><br>
</font>
<!--outer table--></TD>

<!--outer table--><TD VALIGN="TOP">
<BLOCKQUOTE>
<P>

<img src="/images/header_r.gif" width="440" height="50">
<P>
<MAP NAME ="header_r2.gif.map">

<AREA SHAPE ="RECT"
      HREF ="/reference/author.html"
      COORDS ="361,0,440,29">
<AREA SHAPE ="RECT"
      HREF ="/reference/basic.html"
      COORDS ="254,0,360,29">
<AREA SHAPE ="RECT"
      HREF ="/reference/help.html"
      COORDS ="183,0,251,29">
<AREA SHAPE ="RECT"
      HREF ="/reference/cool.html"
      COORDS ="100,0,181,29">
<AREA SHAPE ="RECT"
      HREF ="/reference/mybook.html"
      COORDS ="0,0,100,29">
</MAP>

<MAP NAME ="header_r1.gif.map">

<AREA SHAPE ="RECT"
      HREF ="/reference/personalize.html"
      COORDS ="339,0,439,29">
</MAP>

<p>


<font face="Arial,Helvetica" size="-1" color="#006666"><A HREF="/reference/r_library.html"><B>All Categories</A> :</B>
<b><A HREF="/reference/r_java.html">Java</A></b></font><p>

   <META>
<H1><FONT COLOR=#FF0000>Chapter 35</FONT></H1>
<H1><B><FONT SIZE=5 COLOR=#FF0000>JavaScript Reference</FONT></B>
</H1>
<P>
<HR WIDTH="100%"></P>
<P>
<H3 ALIGN=CENTER><FONT COLOR="#000000"><FONT SIZE=+2>CONTENTS<A NAME="CONTENTS"></A>
</FONT></FONT></H3>
<UL>
<LI><A HREF="#JavaScriptObjects" >JavaScript Objects</A>
<LI><A HREF="#PropertiesandMethods" >Properties and Methods </A>
<UL>
<LI><A HREF="#ThenavigatorObject" >The navigator Object</A>
<LI><A HREF="#ThewindowObject" >The window Object</A>
<LI><A HREF="#ThelocationObject" >The location Object</A>
<LI><A HREF="#ThehistoryObject" >The history Object</A>
<LI><A HREF="#ThedocumentObject" >The document Object</A>
<LI><A HREF="#TheformObject" >The form Object</A>
<LI><A HREF="#ThebuttonObject" >The button Object</A>
<LI><A HREF="#ThecheckboxObject" >The checkbox Object</A>
<LI><A HREF="#Thetexttextareahiddenandpassword" >The text, textarea, hidden, and password Objects</A>
<LI><A HREF="#TheradioObject" >The radio Object</A>
<LI><A HREF="#TheselectObject" >The select Object</A>
<LI><A HREF="#ThestringObject" >The string Object</A>
<LI><A HREF="#TheDateObject" >The Date Object</A>
<LI><A HREF="#TheMathObject" >The Math Object</A>
</UL>
<LI><A HREF="#HandlingEvents" >Handling Events</A>
<LI><A HREF="#Arrays" >Arrays</A>
<LI><A HREF="#OperatorsandExpressions" >Operators and Expressions</A>
<LI><A HREF="#Statements" >Statements</A>
<LI><A HREF="#Summary" >Summary</A>
</UL>
<HR>
<P>
This chapter serves as a tutorial and reference guide for the
JavaScript language. You'll learn about the objects and methods
provided by JavaScript and learn how events are handled. By the
end of this chapter, you should have an understanding of what
JavaScript offers and be able to begin writing your own scripts.
<H2><FONT SIZE=5 COLOR=#FF0000><A NAME="JavaScriptObjects">JavaScript Objects </A></FONT></H2>
<P>
JavaScript is an object-based scripting language that does not
support classes or inheritance. So, you might ask, how do you
use JavaScript as an object-oriented language? Good question.
JavaScript provides a number of default objects to which you have
direct access, and allows you to create your own objects as well.
The following are the JavaScript-supplied objects:
<UL>
<LI><TT><FONT FACE="Courier">navigator</FONT></TT> can be thought
of as being directly relational to the browser window. Inside
the browser window lies the entire HTML document. The same holds
true for the <TT><FONT FACE="Courier">navigator</FONT></TT> object.
<LI><TT><FONT FACE="Courier">window</FONT></TT> is the parent
class for all objects stored within the <TT><FONT FACE="Courier">navigator</FONT></TT>
object. Dialog boxes inside the <TT><FONT FACE="Courier">navigator</FONT></TT>
object's parent window can be created by using the properties
and methods provided by the <TT><FONT FACE="Courier">window</FONT></TT>
object. The <TT><FONT FACE="Courier">window</FONT></TT> object
also provides access to the child windows of each frame through
the frame's array property.
<LI><TT><FONT FACE="Courier">location</FONT></TT> holds all pertinent
information about an URL.
<LI><TT><FONT FACE="Courier">history</FONT></TT> provides access
to the browser's URL history list.
<LI><TT><FONT FACE="Courier">document</FONT></TT> contains information
about all HTML properties inside the current page. It is through
this object that JavaScript is enabled to output HTML.
<LI><TT><FONT FACE="Courier">form</FONT></TT> contains information
about a form defined within the body of the HTML document.
<LI><TT><FONT FACE="Courier">button</FONT></TT> coincides with
the button components displayed in the document.
<LI><TT><FONT FACE="Courier">checkbox</FONT></TT> coincides with
the checkbox components displayed in the document.
<LI><TT><FONT FACE="Courier">text</FONT></TT> coincides with the
text field components in the document.
<LI><TT><FONT FACE="Courier">textarea</FONT></TT> coincides with
the text area components in the document.
<LI><TT><FONT FACE="Courier">hidden</FONT></TT> coincides with
the hidden text field components in the document.
<LI><TT><FONT FACE="Courier">password</FONT></TT> coincides with
the password text field components in the document.
<LI><TT><FONT FACE="Courier">radio</FONT></TT> coincides with
the radio button components displayed in the document.
<LI><TT><FONT FACE="Courier">selections</FONT></TT> is an array
containing all of the selection group components displayed in
the document.
<LI><TT><FONT FACE="Courier">string</FONT></TT> provides a string
container for JavaScript. A number of string-manipulation utilities
are contained within the object as well.
<LI><TT><FONT FACE="Courier">Date</FONT></TT> provides the capability
to store and work with date information.
<LI><TT><FONT FACE="Courier">Math</FONT></TT> provides mathematical
constants and mathematical functions.
</UL>
<H2><A NAME="PropertiesandMethods"><FONT SIZE=5 COLOR=#FF0000>Properties
and Methods</FONT></A><FONT SIZE=5 COLOR=#FF0000> </FONT></H2>
<P>
The power of JavaScript lies in the functionality provided to
the programmer. The following sections are a reference to the
methods and properties of the  JavaScript objects. Keep in mind
when programming JavaScript that it is a loosely typed language.
<H3><A NAME="ThenavigatorObject">The <TT><FONT SIZE=4 FACE="Courier">navigator</FONT></TT><FONT SIZE=4>
Object</FONT></A></H3>
<P>
The <TT><FONT FACE="Courier">navigator</FONT></TT> object provides
a base class for all HTML objects. It provides the basis for the
logical hierarchy inherent in HTML. That is, the <TT><FONT FACE="Courier">navigator</FONT></TT>
object contains a <TT><FONT FACE="Courier">window</FONT></TT>
object containing the <TT><FONT FACE="Courier">document</FONT></TT>
object, which in turn contains all of the defined objects.
<H3><A NAME="ThewindowObject">The <TT><FONT SIZE=4 FACE="Courier">window</FONT></TT><FONT SIZE=4>
Object</FONT></A></H3>
<P>
The <TT><FONT FACE="Courier">window</FONT></TT> object is the
base object for the <TT><FONT FACE="Courier">document</FONT></TT>
object. It provides the following properties:
<UL>
<LI><TT><FONT FACE="Courier">window frames[index]</FONT></TT>
contains <TT><FONT FACE="Courier">window</FONT></TT> objects for
each frame child window.
<LI><TT><FONT FACE="Courier">number frames.length</FONT></TT>
is the number of frame child windows.
<LI><TT><FONT FACE="Courier">window self</FONT></TT> is the current
<TT><FONT FACE="Courier">window</FONT></TT> object.
<LI><TT><FONT FACE="Courier">window parent</FONT></TT> is the
parent window.
<LI><TT><FONT FACE="Courier">window top</FONT></TT> is the topmost
ancestor <TT><FONT FACE="Courier">window</FONT></TT> object.
</UL>
<P>
The <TT><FONT FACE="Courier">window</FONT></TT> object provides
the following methods:
<UL>
<LI><TT><FONT FACE="Courier">void alert(string &quot;name&quot;)</FONT></TT>
displays an alert dialog box containing the passed string.
<LI><TT><FONT FACE="Courier">boolean confirm(string &quot;name&quot;)</FONT></TT>
displays a confirmation dialog box containing the passed string.
Returns a <TT><FONT FACE="Courier">True</FONT></TT> or <TT><FONT FACE="Courier">False</FONT></TT>
value.
<LI><TT><FONT FACE="Courier">void open(string &quot;URL&quot;,
string &quot;name&quot;)</FONT></TT> opens a new client window
continuing the specified URL and displaying the title <TT><FONT FACE="Courier">name</FONT></TT>.
<LI><TT><FONT FACE="Courier">void close()</FONT></TT> closes the
<TT><FONT FACE="Courier">self</FONT></TT> window.
</UL>
<H3><A NAME="ThelocationObject">The <TT><FONT SIZE=4 FACE="Courier">location</FONT></TT><FONT SIZE=4>
Object</FONT></A></H3>
<P>
The <TT><FONT FACE="Courier">location</FONT></TT> object provides
information about the current URL location, as well as some useful
methods. Its properties are the following:
<UL>
<LI><TT><FONT FACE="Courier">string href</FONT></TT> holds the
entire URL.
<LI><TT><FONT FACE="Courier">string protocol</FONT></TT> contains
the protocol section of the URL, including the colon (<TT><FONT FACE="Courier">:</FONT></TT>).
<LI><TT><FONT FACE="Courier">string host</FONT></TT> holds the
hostname, including the optional port number embedded in the URL.
<LI><TT><FONT FACE="Courier">string hostname</FONT></TT> holds
the hostname, not including the optional port number embedded
in the URL.
<LI><TT><FONT FACE="Courier">string port</FONT></TT> contains
the port of the host if specified; otherwise, the value is <TT><FONT FACE="Courier">&quot;&quot;</FONT></TT>
(null).
<LI><TT><FONT FACE="Courier">string path</FONT></TT> contains
the path information that is specified in the URL after the host
information.
<LI><TT><FONT FACE="Courier">string hash</FONT></TT> holds the
CGI-specified information, if any.
<LI><TT><FONT FACE="Courier">string search</FONT></TT> contains
the specified CGI parameters.
<LI><TT><FONT FACE="Courier">string post</FONT></TT> contains
any post handler specified in the URL.
</UL>
<P>
The <TT><FONT FACE="Courier">location</FONT></TT> object provides
the following methods:
<UL>
<LI><TT><FONT FACE="Courier">string toString()</FONT></TT> returns
the value stored in the <TT><FONT FACE="Courier">href</FONT></TT>
property.
<LI><TT><FONT FACE="Courier">void assign()</FONT></TT> sets the
<TT><FONT FACE="Courier">href</FONT></TT> property.
</UL>
<H3><A NAME="ThehistoryObject">The <TT><FONT SIZE=4 FACE="Courier">history</FONT></TT><FONT SIZE=4>
Object</FONT></A></H3>
<P>
The <TT><FONT FACE="Courier">history</FONT></TT> object provides
access to the browser's URL history list. Its properties are the
following:
<UL>
<LI><TT><FONT FACE="Courier">string back</FONT></TT> holds the
URL of the previous location in the URL history list.
<LI><TT><FONT FACE="Courier">string forward</FONT></TT> holds
the URL of the next location in the URL history list.
<LI><TT><FONT FACE="Courier">string current</FONT></TT> holds
the URL of the current location in the URL history list.
<LI><TT><FONT FACE="Courier">int length</FONT></TT> contains the
number of entries in the URL history list.
</UL>
<P>
The <TT><FONT FACE="Courier">history</FONT></TT> object provides
the following methods:
<UL>
<LI><TT><FONT FACE="Courier">void go(int delta)</FONT></TT> loads
the URL in the URL history list that is <TT><FONT FACE="Courier">delta</FONT></TT>
distance from the current position. The value of <TT><FONT FACE="Courier">delta</FONT></TT>
may be either positive or negative, allowing positive and negative
movement.
<LI><TT><FONT FACE="Courier">void go(string &quot;srchstring&quot;)</FONT></TT>
loads the URL in the URL history list that contains the partial
<TT><FONT FACE="Courier">srchstring</FONT></TT> in either the
URL or the title.
<LI><TT><FONT FACE="Courier">string toString()</FONT></TT> creates
an HTML list of all the entries in the URL history list.
</UL>
<H3><A NAME="ThedocumentObject">The <TT><FONT SIZE=4 FACE="Courier">document</FONT></TT><FONT SIZE=4>
Object</FONT></A></H3>
<P>
The <TT><FONT FACE="Courier">document</FONT></TT> object contains
information about all HTML properties inside the current page.
In addition to the standard properties provided, a member for
each form in the document is provided with the name specified
in the form's <TT><FONT FACE="Courier">NAME</FONT></TT> attribute.
<P>
The following are the <TT><FONT FACE="Courier">document</FONT></TT>
object's provided properties:
<UL>
<LI><TT><FONT FACE="Courier">string title</FONT></TT> holds the
document's title. If one is not defined, the value is <TT><FONT FACE="Courier">Untitled</FONT></TT>.
<LI><TT><FONT FACE="Courier">string location</FONT></TT> contains
the document's full URL.
<LI><TT><FONT FACE="Courier">string lastmodified</FONT></TT> contains
the last-modified date.
<LI><TT><FONT FACE="Courier">string loadedDate</FONT></TT> contains
the date the document was loaded.
<LI><TT><FONT FACE="Courier">string referer</FONT></TT> holds
the name of the host that referred the current document.
<LI><TT><FONT FACE="Courier">string bgColor</FONT></TT> contains
the 24-bit RGB hexadecimal background color.
<LI><TT><FONT FACE="Courier">string fgColor</FONT></TT> contains
the 24-bit RGB hexadecimal foreground color.
<LI><TT><FONT FACE="Courier">string linkColor</FONT></TT> contains
the 24-bit RGB hexadecimal hyperlink color.
<LI><TT><FONT FACE="Courier">string vlinkColor</FONT></TT> contains
the 24-bit RGB hexadecimal visited hyperlink color.
<LI><TT><FONT FACE="Courier">string alinkColor</FONT></TT> contains
the 24-bit RGB hexadecimal active hyperlink color. An active hyperlink
is displayed when the mouse button has been depressed but has
not been released.
<LI><TT><FONT FACE="Courier">form forms[index]</FONT></TT> is
an array of <TT><FONT FACE="Courier">form</FONT></TT> objects
corresponding to the forms defined in the current document.
<LI><TT><FONT FACE="Courier">int forms.length</FONT></TT> contains
the number of forms in the <TT><FONT FACE="Courier">forms[]</FONT></TT>
array.
<LI><TT><FONT FACE="Courier">location links[index]</FONT></TT>
is an array of <TT><FONT FACE="Courier">location</FONT></TT> objects
corresponding to the links defined in the current document.
<LI><TT><FONT FACE="Courier">links.length</FONT></TT> contains
the number of forms in the <TT><FONT FACE="Courier">links[]</FONT></TT>
array.
<LI><TT><FONT FACE="Courier">string anchors[index]</FONT></TT>
is an array of anchor name strings, corresponding to the anchors
defined in the current document.
<LI><TT><FONT FACE="Courier">anchors.length</FONT></TT> contains
the number of forms in the <TT><FONT FACE="Courier">anchors[]</FONT></TT>
array.
</UL>
<P>
The <TT><FONT FACE="Courier">document</FONT></TT> object provides
the following methods:
<UL>
<LI><TT><FONT FACE="Courier">void write(string &quot;output&quot;)</FONT></TT>
outputs the <TT><FONT FACE="Courier">output</FONT></TT> string
into the current document.
<LI><TT><FONT FACE="Courier">void writeln(string &quot;output&quot;)</FONT></TT>
outputs the <TT><FONT FACE="Courier">output</FONT></TT> string
into the current document followed by a newline character.
<LI><TT><FONT FACE="Courier">void clear()</FONT></TT> clears the
current document window.
<LI><TT><FONT FACE="Courier">void close()</FONT></TT> closes the
current document window.
</UL>
<H3><A NAME="TheformObject">The <TT><FONT SIZE=4 FACE="Courier">form</FONT></TT><FONT SIZE=4>
Object</FONT></A></H3>
<P>
The <TT><FONT FACE="Courier">form</FONT></TT> object contains
information about the defined form. In addition to its standard
properties, this object contains a member for each field of the
form. For instance, suppose a form contains a field called <TT><FONT FACE="Courier">&quot;Name&quot;</FONT></TT>;
the associated form would contain a member named <TT><FONT FACE="Courier">Name</FONT></TT>.
The value of the field can be obtained using <TT><FONT FACE="Courier">form.Name.value</FONT></TT>.
<P>
The <TT><FONT FACE="Courier">form</FONT></TT> object's default
properties are the following:
<UL>
<LI><TT><FONT FACE="Courier">string name</FONT></TT> contains
the form's <TT><FONT FACE="Courier">NAME</FONT></TT> attribute.
<LI><TT><FONT FACE="Courier">int method</FONT></TT> will contain
a value of <TT><FONT FACE="Courier">0</FONT></TT> if the form's
<TT><FONT FACE="Courier">METHOD</FONT></TT> attribute is equal
to <TT><FONT FACE="Courier">get</FONT></TT>, or a value of <TT><FONT FACE="Courier">1</FONT></TT>
if the <TT><FONT FACE="Courier">METHOD</FONT></TT> attribute is
equal to <TT><FONT FACE="Courier">post</FONT></TT>.
<LI><TT><FONT FACE="Courier">string action</FONT></TT> holds the
value of the <TT><FONT FACE="Courier">ACTION</FONT></TT> attribute.
<LI><TT><FONT FACE="Courier">window target</FONT></TT> is the
window to be used to display the form's response.
<LI><TT><FONT FACE="Courier">object elements[index]</FONT></TT>
is an array containing all the component elements of the form.
<LI><TT><FONT FACE="Courier">elements.length</FONT></TT> contains
the number of objects in the <TT><FONT FACE="Courier">elements[]</FONT></TT>
array.
</UL>
<P>
The <TT><FONT FACE="Courier">form</FONT></TT> object has no methods.
<H3><A NAME="ThebuttonObject">The <TT><FONT SIZE=4 FACE="Courier">button</FONT></TT><FONT SIZE=4>
Object</FONT></A></H3>
<P>
The <TT><FONT FACE="Courier">button</FONT></TT> object may take
one of three separate functions coinciding with a form's reset
button, submit button, or a custom button. The <TT><FONT FACE="Courier">button</FONT></TT>
object's properties are as follows:
<UL>
<LI><TT><FONT FACE="Courier">string value</FONT></TT> stores the
value specified in the <TT><FONT FACE="Courier">VALUE</FONT></TT>
attribute.
<LI><TT><FONT FACE="Courier">string name</FONT></TT> holds the
value specified in the <TT><FONT FACE="Courier">NAME</FONT></TT>
attribute.
</UL>
<P>
The <TT><FONT FACE="Courier">button</FONT></TT> object contains
no methods.
<H3><A NAME="ThecheckboxObject">The <TT><FONT SIZE=4 FACE="Courier">checkbox</FONT></TT><FONT SIZE=4>
Object</FONT></A></H3>
<P>
The <TT><FONT FACE="Courier">checkbox</FONT></TT> object corresponds
to a form's checkbox. Its properties are as follows:
<UL>
<LI><TT><FONT FACE="Courier">string value</FONT></TT> stores the
value specified in the <TT><FONT FACE="Courier">VALUE</FONT></TT>
attribute.
<LI><TT><FONT FACE="Courier">string name</FONT></TT> holds the
value specified in the <TT><FONT FACE="Courier">NAME</FONT></TT>
attribute.
<LI><TT><FONT FACE="Courier">boolean status</FONT></TT> contains
the current status of the checkbox.
<LI><TT><FONT FACE="Courier">boolean defaultstatus</FONT></TT>
contains the default status of the checkbox specified in the <TT><FONT FACE="Courier">CHECKED</FONT></TT>
attribute.
</UL>
<P>
The <TT><FONT FACE="Courier">checkbox</FONT></TT> object contains
no methods.
<H3><A NAME="Thetexttextareahiddenandpassword">The <TT><FONT SIZE=4 FACE="Courier">text</FONT></TT><FONT SIZE=4>,
</FONT><TT><FONT SIZE=4 FACE="Courier">textarea</FONT></TT><FONT SIZE=4>,
</FONT><TT><FONT SIZE=4 FACE="Courier">hidden</FONT></TT><FONT SIZE=4>,
and </FONT><TT><FONT SIZE=4 FACE="Courier">password</FONT></TT><FONT SIZE=4>
Objects</FONT></A></H3>
<P>
The <TT><FONT FACE="Courier">text</FONT></TT>, <TT><FONT FACE="Courier">textarea</FONT></TT>,
<TT><FONT FACE="Courier">hidden</FONT></TT>, and <TT><FONT FACE="Courier">password</FONT></TT>
objects are all formed from the same object structure. The following
are the properties of the shared object structure:
<UL>
<LI><TT><FONT FACE="Courier">string value</FONT></TT> stores the
value specified in the <TT><FONT FACE="Courier">VALUE</FONT></TT>
attribute.
<LI><TT><FONT FACE="Courier">string name</FONT></TT> holds the
value specified in the <TT><FONT FACE="Courier">NAME</FONT></TT>
attribute.
<LI><TT><FONT FACE="Courier">string defaultValue</FONT></TT> holds
the default value specified in the <TT><FONT FACE="Courier">DEFAULTVALUE</FONT></TT>
attribute.
</UL>
<P>
The shared object structure contains these methods:
<UL>
<LI><TT><FONT FACE="Courier">void focus()</FONT></TT> sets the
focus to the object.
<LI><TT><FONT FACE="Courier">void blur()</FONT></TT> takes away
the focus from the object.
<LI><TT><FONT FACE="Courier">void select()</FONT></TT> selects
the content of the object's input field.
</UL>
<H3><A NAME="TheradioObject">The <TT><FONT SIZE=4 FACE="Courier">radio</FONT></TT><FONT SIZE=4>
Object</FONT></A></H3>
<P>
The <TT><FONT FACE="Courier">radio</FONT></TT> object corresponds
to a form's radio button. The object's properties are as follows:
<UL>
<LI><TT><FONT FACE="Courier">string value</FONT></TT> stores the
value specified in the <TT><FONT FACE="Courier">VALUE</FONT></TT>
attribute.
<LI><TT><FONT FACE="Courier">string name</FONT></TT> holds the
value specified in the <TT><FONT FACE="Courier">NAME</FONT></TT>
attribute.
<LI><TT><FONT FACE="Courier">int index</FONT></TT> contains the
zero-based index of the button.
<LI><TT><FONT FACE="Courier">boolean status</FONT></TT> contains
the status of the radio button.
<LI><TT><FONT FACE="Courier">boolean defaultstatus</FONT></TT>
contains the default status of the radio button specified in the
<TT><FONT FACE="Courier">CHECKED</FONT></TT> attribute.
</UL>
<P>
The <TT><FONT FACE="Courier">radio</FONT></TT> object contains
no methods.
<H3><A NAME="TheselectObject">The <TT><FONT SIZE=4 FACE="Courier">select</FONT></TT><FONT SIZE=4>
Object</FONT></A></H3>
<P>
The <TT><FONT FACE="Courier">select</FONT></TT> object is an array
corresponding to a form's selection list. Each element of the
array contains the following properties:
<UL>
<LI><TT><FONT FACE="Courier">string value</FONT></TT> stores the
value specified in the <TT><FONT FACE="Courier">VALUE</FONT></TT>
attribute.
<LI><TT><FONT FACE="Courier">string text</FONT></TT> holds the
value specified in the <TT><FONT FACE="Courier">&lt;OPTION&gt;</FONT></TT>
tag.
<LI><TT><FONT FACE="Courier">int index</FONT></TT> contains the
zero-based index of the option.
<LI><TT><FONT FACE="Courier">boolean status</FONT></TT> contains
the selection status of the item. <TT><FONT FACE="Courier">True</FONT></TT>
if selected.
<LI><TT><FONT FACE="Courier">boolean defaultstatus</FONT></TT>
contains the default status of the selected item specified in
the <TT><FONT FACE="Courier">SELECTED</FONT></TT> attribute.
</UL>
<P>
The <TT><FONT FACE="Courier">select</FONT></TT> object contains
no methods.
<H3><A NAME="ThestringObject">The <TT><FONT SIZE=4 FACE="Courier">string</FONT></TT><FONT SIZE=4>
Object</FONT></A></H3>
<P>
The <TT><FONT FACE="Courier">string</FONT></TT> object provides
the capability to store string data and provides methods to manipulate
the string value. <TT><FONT FACE="Courier">length</FONT></TT>
identifies the length of the string.
<P>
<TT><FONT FACE="Courier">string</FONT></TT> offers the following
methods:
<UL>
<LI><TT><FONT FACE="Courier">void anchor(string &quot;AnchorName&quot;)</FONT></TT>
creates an anchor with the specified name.
<LI><TT><FONT FACE="Courier">void link(string &quot;LinkAttribute&quot;)</FONT></TT>
creates a link with the specified attribute.
<LI><TT><FONT FACE="Courier">void big()</FONT></TT> causes the
text to be displayed with the <TT><FONT FACE="Courier">&lt;BIG&gt;</FONT></TT>
tag.
<LI><TT><FONT FACE="Courier">void small()</FONT></TT> causes the
text to be displayed with the <TT><FONT FACE="Courier">&lt;SMALL&gt;</FONT></TT>
tag.
<LI><TT><FONT FACE="Courier">void sub()</FONT></TT> causes the
text to be displayed in subscript as if it were inside a <TT><FONT FACE="Courier">&lt;SUB&gt;</FONT></TT>
tag.
<LI><TT><FONT FACE="Courier">void sup()</FONT></TT> causes the
text to be displayed in superscript as if it were inside a <TT><FONT FACE="Courier">&lt;SUP&gt;</FONT></TT>
tag.
<LI><TT><FONT FACE="Courier">void blink()</FONT></TT> causes the
text to be displayed blinking.
<LI><TT><FONT FACE="Courier">void bold()</FONT></TT> causes the
text to be displayed bold.
<LI><TT><FONT FACE="Courier">void italics()</FONT></TT> causes
the text to be displayed in italics.
<LI><TT><FONT FACE="Courier">void strike()</FONT></TT> causes
the text to be displayed as if it were inside a <TT><FONT FACE="Courier">&lt;STRIKE&gt;</FONT></TT>
tag.
<LI><TT><FONT FACE="Courier">char charAt(int index)</FONT></TT>
returns the character at the specified index value.
<LI><TT><FONT FACE="Courier">void fontcolor(Color)</FONT></TT>
specifies the color in which to display the text.
<LI><TT><FONT FACE="Courier">void fontsize(int size)</FONT></TT>
specifies the font size in which to display the text. The value
is between <TT><FONT FACE="Courier">1</FONT></TT> and <TT><FONT FACE="Courier">7</FONT></TT>.
<LI><TT><FONT FACE="Courier">int indexOf(string &quot;SrchStrng&quot;,[beginIndex])</FONT></TT>
returns the starting index of <TT><FONT FACE="Courier">SrchString</FONT></TT>.
If <TT><FONT FACE="Courier">beginIndex</FONT></TT> is specified,
the search begins at the specified index position.
<LI><TT><FONT FACE="Courier">int lastIndexOf(string &quot;SrchStrng&quot;,[beginIndex])</FONT></TT>
returns the starting index of the last occurrence found in <TT><FONT FACE="Courier">SrchString</FONT></TT>.
If <TT><FONT FACE="Courier">beginIndex</FONT></TT> is specified,
the search begins at the specified index position.
<LI><TT><FONT FACE="Courier">string substring(int begin, int end)</FONT></TT>
returns a partial string, beginning at the <TT><FONT FACE="Courier">begin</FONT></TT>
location and ending at <TT><FONT FACE="Courier">end</FONT></TT>.
<LI><TT><FONT FACE="Courier">string toLowerCase()</FONT></TT>
returns the string in lowercase characters.
<LI><TT><FONT FACE="Courier">string toUpperCase()</FONT></TT>
returns the string in uppercase characters.
</UL>
<H3><A NAME="TheDateObject">The <TT><FONT SIZE=4 FACE="Courier">Date</FONT></TT><FONT SIZE=4>
Object</FONT></A></H3>
<P>
The <TT><FONT FACE="Courier">Date</FONT></TT> object provides
access to the system date function and also is a container for
date information.
<P>
The <TT><FONT FACE="Courier">Date()</FONT></TT> function creates
a <TT><FONT FACE="Courier">Date</FONT></TT> object with the current
system time.
<P>
The following examples create a <TT><FONT FACE="Courier">Date</FONT></TT>
object with the specified data:
<P>
<TT><FONT FACE="Courier">Date(&quot;month day, year hours:minutes:seconds&quot;)</FONT></TT>
<BLOCKQUOTE>
Date(year, month, day)
</BLOCKQUOTE>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">Date(year, month, day, hour)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">Date</FONT></TT> object has no properties.
<P>
The following are the methods for the <TT><FONT FACE="Courier">Date</FONT></TT>
object:
<UL>
<LI><TT><FONT FACE="Courier">int getDate()</FONT></TT> returns
the day of the month.
<LI><TT><FONT FACE="Courier">int getDay()</FONT></TT> returns
the day of the week, starting with <TT><FONT FACE="Courier">0</FONT></TT>
for Sunday.
<LI><TT><FONT FACE="Courier">int getHours()</FONT></TT> returns
the hour between <TT><FONT FACE="Courier">0</FONT></TT> and <TT><FONT FACE="Courier">23</FONT></TT>.
<LI><TT><FONT FACE="Courier">int getMinutes()</FONT></TT> returns
minutes.
<LI><TT><FONT FACE="Courier">int getMonth()</FONT></TT> returns
the month of the year, starting with <TT><FONT FACE="Courier">0</FONT></TT>
for January.
<LI><TT><FONT FACE="Courier">int getSeconds()</FONT></TT> returns
seconds.
<LI><TT><FONT FACE="Courier">int getTime()</FONT></TT> returns
the number of milliseconds since January 1, 1970.
<LI><TT><FONT FACE="Courier">int getTimezoneOffset()</FONT></TT>
returns the local time zone offset.
<LI><TT><FONT FACE="Courier">int getYear()</FONT></TT> returns
the year.
<LI><TT><FONT FACE="Courier">int parse(sting &quot;Date&quot;)</FONT></TT>
returns the number of milliseconds since January 1, 1970.
<LI><TT><FONT FACE="Courier">void setDate(int date)</FONT></TT>
sets the day of the month, between <TT><FONT FACE="Courier">0</FONT></TT>
and <TT><FONT FACE="Courier">31</FONT></TT>.
<LI><TT><FONT FACE="Courier">void setHours(int hour)</FONT></TT>
sets the hour of the day, between <TT><FONT FACE="Courier">0</FONT></TT>
and <TT><FONT FACE="Courier">23</FONT></TT>.
<LI><TT><FONT FACE="Courier">void setMinutes(int minutes)</FONT></TT>
sets the minutes in the hour, between <TT><FONT FACE="Courier">0</FONT></TT>
and <TT><FONT FACE="Courier">59</FONT></TT>.
<LI><TT><FONT FACE="Courier">void setMonth(int month)</FONT></TT>
sets the month of the year, between <TT><FONT FACE="Courier">0</FONT></TT>
and <TT><FONT FACE="Courier">11</FONT></TT>.
<LI><TT><FONT FACE="Courier">void setSeconds(int seconds)</FONT></TT>
sets the seconds of the hour, between <TT><FONT FACE="Courier">0</FONT></TT>
and <TT><FONT FACE="Courier">59</FONT></TT>.
<LI><TT><FONT FACE="Courier">void setTime(int tseconds)</FONT></TT>
sets the time to the passed time value.
<LI><TT><FONT FACE="Courier">void setYear(int year)</FONT></TT>
sets the year.
<LI><TT><FONT FACE="Courier">string toGMTString()</FONT></TT>
returns the date in GMT string format.
<LI><TT><FONT FACE="Courier">string toLocaleString()</FONT></TT>
returns the date to the current location's string format.
<LI><TT><FONT FACE="Courier">Date UTC(int year, month, day [,
hrs] [, min] [, sec])</FONT></TT> converts the passed parameters
into a <TT><FONT FACE="Courier">Date</FONT></TT> object.
</UL>
<H3><A NAME="TheMathObject">The <TT><FONT SIZE=4 FACE="Courier">Math</FONT></TT><FONT SIZE=4>
Object</FONT></A></H3>
<P>
The <TT><FONT FACE="Courier">Math</FONT></TT> object provides
defined math constants and some math functions. The following
<TT><FONT FACE="Courier">static</FONT></TT> constants are available:
<UL>
<LI><TT><FONT FACE="Courier">E</FONT></TT>-The number e.
<LI><TT><FONT FACE="Courier">LN2</FONT></TT>-The natural logarithm
of 2.
<LI><TT><FONT FACE="Courier">LN10</FONT></TT>-The natural logarithm
of 10.
<LI><TT><FONT FACE="Courier">LOG2E</FONT></TT>-The logarithm base
2 of 10.
<LI><TT><FONT FACE="Courier">LOG10E</FONT></TT>-The logarithm
base 10 of e.
<LI><TT><FONT FACE="Courier">PI</FONT></TT>-The pi constant.
<LI><TT><FONT FACE="Courier">SQRT1_2</FONT></TT>-The square root
of <FONT SIZE=1>1</FONT>/<FONT SIZE=1>2</FONT>.
<LI><TT><FONT FACE="Courier">SQRT2</FONT></TT>-The square root
of 2.
</UL>
<P>
The <TT><FONT FACE="Courier">Math</FONT></TT> object provides
the following mathematical functions:
<UL>
<LI><TT><FONT FACE="Courier">abs</FONT></TT> is the absolute value
function.
<LI><TT><FONT FACE="Courier">acos</FONT></TT> is the arccosine
function.
<LI><TT><FONT FACE="Courier">asin</FONT></TT> is the arcsine function.
<LI><TT><FONT FACE="Courier">atan</FONT></TT> is the arctangent
function.
<LI><TT><FONT FACE="Courier">ceil</FONT></TT> is the ceiling function.
<LI><TT><FONT FACE="Courier">cos</FONT></TT> is the cosine function.
<LI><TT><FONT FACE="Courier">exp</FONT></TT> is the exponential
function.
<LI><TT><FONT FACE="Courier">floor</FONT></TT> is the floor function.
<LI><TT><FONT FACE="Courier">log</FONT></TT> is the natural logarithm
function.
<LI><TT><FONT FACE="Courier">max</FONT></TT> is the maximum function.
<LI><TT><FONT FACE="Courier">min</FONT></TT> is the minimum function.
<LI><TT><FONT FACE="Courier">pow</FONT></TT> is the power function.
<LI><TT><FONT FACE="Courier">random</FONT></TT> is a random number
generator.
<LI><TT><FONT FACE="Courier">round</FONT></TT> is the rounding
function.
<LI><TT><FONT FACE="Courier">sin</FONT></TT> is the sine function.
<LI><TT><FONT FACE="Courier">sqrt</FONT></TT> is the square root
function.
<LI><TT><FONT FACE="Courier">tan</FONT></TT> is the tangent function.
</UL>
<H2><A NAME="HandlingEvents"><FONT SIZE=5 COLOR=#FF0000>Handling
Events</FONT></A><FONT SIZE=5 COLOR=#FF0000> </FONT></H2>
<P>
Handling events in JavaScript allows the script to be informed
when an event has occurred. In Java, an event is trapped and then
dispatched to the code that was intended to handle that event.
In JavaScript, when an object is defined in the HTML, the function
used to handle that event is specified with the object. For example,
look at the example of placing a button into a document:
<BLOCKQUOTE>
<TT><FONT FACE="Courier">&lt;INPUT TYPE=&quot;button&quot; VALUE=&quot;OK&quot;
NAME=&quot;OKButton&quot;<BR>
onClick=&quot;ValidateMe(this.form)&quot;&gt;</FONT></TT>
</BLOCKQUOTE>
<P>
The top line defines a button with a <TT><FONT FACE="Courier">VALUE</FONT></TT>
of <TT><FONT FACE="Courier">&quot;OK&quot;</FONT></TT> and a <TT><FONT FACE="Courier">NAME</FONT></TT>
of <TT><FONT FACE="Courier">&quot;OKButton&quot;</FONT></TT>.
The bottom line is what you want to understand here.
<P>
Notice the <TT><FONT FACE="Courier">onClick</FONT></TT> parameter
to the button. This line is associating the defined function <TT><FONT FACE="Courier">ValidateMe</FONT></TT>
with the <TT><FONT FACE="Courier">onClick</FONT></TT> event of
the button. This specifies to the code to handle the event directly
from HTML.
<P>
JavaScript recognizes different event handlers for a number of
supplied objects. The following are all the supported event handlers
with their associated objects:
<UL>
<LI><TT><FONT FACE="Courier">onBlur</FONT></TT>-<TT><FONT FACE="Courier">select</FONT></TT>,
<TT><FONT FACE="Courier">text</FONT></TT>, <TT><FONT FACE="Courier">textarea</FONT></TT>
<LI><TT><FONT FACE="Courier">onChange</FONT></TT>-<TT><FONT FACE="Courier">select</FONT></TT>,
<TT><FONT FACE="Courier">text</FONT></TT>, <TT><FONT FACE="Courier">textarea</FONT></TT>
<LI><TT><FONT FACE="Courier">onClick</FONT></TT>-<TT><FONT FACE="Courier">button</FONT></TT>,
<TT><FONT FACE="Courier">checkbox</FONT></TT>, <TT><FONT FACE="Courier">radio</FONT></TT>,
<TT><FONT FACE="Courier">link</FONT></TT>
<LI><TT><FONT FACE="Courier">onFocus</FONT></TT>-<TT><FONT FACE="Courier">select</FONT></TT>,
<TT><FONT FACE="Courier">text</FONT></TT>, <TT><FONT FACE="Courier">textarea</FONT></TT>
<LI><TT><FONT FACE="Courier">onLoad</FONT></TT>-<TT><FONT FACE="Courier">window</FONT></TT>
<LI><TT><FONT FACE="Courier">onUnload</FONT></TT>-<TT><FONT FACE="Courier">form</FONT></TT>
<LI><TT><FONT FACE="Courier">onMouseOver</FONT></TT>-<TT><FONT FACE="Courier">link</FONT></TT>
<LI><TT><FONT FACE="Courier">onSelect</FONT></TT>-<TT><FONT FACE="Courier">text</FONT></TT>,
<TT><FONT FACE="Courier">textarea</FONT></TT>
<LI><TT><FONT FACE="Courier">onSubmit</FONT></TT>-<TT><FONT FACE="Courier">form</FONT></TT>
</UL>
<P>
For all of these events, the syntax to define the event handler
is the same. Inside the object's associated HTML tag is the event's
name followed by the function you want to handle the event. For
example, the following:
<P>
<TT><FONT FACE="Courier">&lt;BODY onLoad=&quot;sayHello(&quot;Hello
To Me&quot;)&gt;</FONT></TT>
<P>
sets the function <TT><FONT FACE="Courier">sayHello</FONT></TT>
to the <TT><FONT FACE="Courier">onLoad</FONT></TT> event of the
<TT><FONT FACE="Courier">window</FONT></TT> object.
<H2><A NAME="Arrays"><FONT SIZE=5 COLOR=#FF0000>Arrays</FONT></A><FONT SIZE=5 COLOR=#FF0000>
</FONT></H2>
<P>
The syntax to declare arrays in JavaScript is very different from
Java, primarily due to the loose typing of JavaScript. Arrays
are declared without specifying an implicit type; JavaScript resolves
the type at a later time. For example, to declare a single-dimensional
array, the syntax would be as follows:
<P>
<TT><FONT FACE="Courier">var aBunchOfInts = new makearray(50);</FONT></TT>
<P>
The syntax to load the array would be like this:
<P>
<TT><FONT FACE="Courier">ABunchofInts[0] = 1;</FONT></TT>
<P>
Due to the dynamic binding property of JavaScript, the type of
the array is not set until a value is assigned.
<H2><A NAME="OperatorsandExpressions"><FONT SIZE=5 COLOR=#FF0000>Operators
and Expressions</FONT></A><FONT SIZE=5 COLOR=#FF0000> </FONT>
</H2>
<P>
JavaScript follows the Java framework for operators and expressions.
Binary operators are of the form <TT><FONT FACE="Courier">operand1
operator operand2</FONT></TT>. Unary operators are of the form
<TT><FONT FACE="Courier">operator operand1</FONT></TT> or <TT><FONT FACE="Courier">operand1
operator</FONT></TT>. Bitwise operators convert operands into
32-bit integers before performing the operation.
<P>
The following are all valid JavaScript operators:<BR>
<P>
<CENTER><TABLE> 
<TR><TD><BLOCKQUOTE>
<TT><FONT FACE="Courier">+</FONT></TT>
</BLOCKQUOTE>

</TD><TD WIDTH=234><BLOCKQUOTE>
addition</BLOCKQUOTE>
</TD>
</TR>
<TR><TD WIDTH=61><BLOCKQUOTE>
<TT><FONT FACE="Courier">-</FONT></TT>
</BLOCKQUOTE>

</TD><TD WIDTH=234><BLOCKQUOTE>
subtraction</BLOCKQUOTE>
</TD>
</TR>
<TR><TD WIDTH=61><BLOCKQUOTE>
<TT><FONT FACE="Courier">*</FONT></TT>
</BLOCKQUOTE>

</TD><TD WIDTH=234><BLOCKQUOTE>
multiplication</BLOCKQUOTE>

</TD></TR>
<TR><TD WIDTH=61><BLOCKQUOTE>
<TT><FONT FACE="Courier">/</FONT></TT>
</BLOCKQUOTE>

</TD><TD WIDTH=234><BLOCKQUOTE>
division</BLOCKQUOTE>
</TD>
</TR>
<TR><TD WIDTH=61><BLOCKQUOTE>
<TT><FONT FACE="Courier">%</FONT></TT>
</BLOCKQUOTE>

</TD><TD WIDTH=234><BLOCKQUOTE>
modulus</BLOCKQUOTE>
</TD></TR>
<TR><TD WIDTH=61><BLOCKQUOTE>
<TT><FONT FACE="Courier">++</FONT></TT>
</BLOCKQUOTE>

</TD><TD WIDTH=234><BLOCKQUOTE>
increment</BLOCKQUOTE>
</TD>
</TR>
<TR><TD WIDTH=61><BLOCKQUOTE>
<TT><FONT FACE="Courier">--</FONT></TT>
</BLOCKQUOTE>

</TD><TD WIDTH=234><BLOCKQUOTE>
decrement</BLOCKQUOTE>
</TD>
</TR>
<TR><TD WIDTH=61><BLOCKQUOTE>
<TT><FONT FACE="Courier">&amp;&amp;</FONT></TT>
</BLOCKQUOTE>

</TD><TD WIDTH=234><BLOCKQUOTE>
and</BLOCKQUOTE>
</TD></TR>
<TR><TD WIDTH=61><BLOCKQUOTE>
<TT><FONT FACE="Courier">||</FONT></TT>
</BLOCKQUOTE>

</TD><TD WIDTH=234><BLOCKQUOTE>
or</BLOCKQUOTE>
</TD></TR>
<TR><TD WIDTH=61><BLOCKQUOTE>
<TT><FONT FACE="Courier">!</FONT></TT>
</BLOCKQUOTE>

</TD><TD WIDTH=234><BLOCKQUOTE>
not</BLOCKQUOTE>
</TD></TR>
<TR><TD WIDTH=61><BLOCKQUOTE>
<TT><FONT FACE="Courier">==</FONT></TT>
</BLOCKQUOTE>

</TD><TD WIDTH=234><BLOCKQUOTE>
equal to</BLOCKQUOTE>
</TD>
</TR>
<TR><TD WIDTH=61><BLOCKQUOTE>
<TT><FONT FACE="Courier">&gt;</FONT></TT>
</BLOCKQUOTE>

</TD><TD WIDTH=234><BLOCKQUOTE>
greater than</BLOCKQUOTE>
</TD>
</TR>
<TR><TD WIDTH=61><BLOCKQUOTE>
<TT><FONT FACE="Courier">&lt;</FONT></TT>
</BLOCKQUOTE>

</TD><TD WIDTH=234><BLOCKQUOTE>
less than</BLOCKQUOTE>
</TD>
</TR>
<TR><TD WIDTH=61><BLOCKQUOTE>
<TT><FONT FACE="Courier">&gt;=</FONT></TT>
</BLOCKQUOTE>

</TD><TD WIDTH=234><BLOCKQUOTE>
greater than or equal to</BLOCKQUOTE>

</TD></TR>
<TR><TD WIDTH=61><BLOCKQUOTE>
<TT><FONT FACE="Courier">&lt;=</FONT></TT>
</BLOCKQUOTE>

</TD><TD WIDTH=234><BLOCKQUOTE>
less than or equal to</BLOCKQUOTE>

</TD></TR>
<TR><TD WIDTH=61><BLOCKQUOTE>
<TT><FONT FACE="Courier">!=</FONT></TT>
</BLOCKQUOTE>

</TD><TD WIDTH=234><BLOCKQUOTE>
not equal to</BLOCKQUOTE>
</TD>
</TR>
<TR><TD WIDTH=61><BLOCKQUOTE>
<TT><FONT FACE="Courier">&amp;</FONT></TT>
</BLOCKQUOTE>

</TD><TD WIDTH=234><BLOCKQUOTE>
bitwise <TT><FONT FACE="Courier">AND</FONT></TT>
</BLOCKQUOTE>

</TD></TR>
<TR><TD WIDTH=61><BLOCKQUOTE>
<TT><FONT FACE="Courier">|</FONT></TT>
</BLOCKQUOTE>

</TD><TD WIDTH=234><BLOCKQUOTE>
bitwise <TT><FONT FACE="Courier">OR</FONT></TT>
</BLOCKQUOTE>

</TD></TR>
<TR><TD WIDTH=61><BLOCKQUOTE>
<TT><FONT FACE="Courier">^</FONT></TT>
</BLOCKQUOTE>

</TD><TD WIDTH=234><BLOCKQUOTE>
bitwise <TT><FONT FACE="Courier">XOR</FONT></TT>
</BLOCKQUOTE>

</TD></TR>
<TR><TD WIDTH=61><BLOCKQUOTE>
<TT><FONT FACE="Courier">&gt;&gt;</FONT></TT>
</BLOCKQUOTE>

</TD><TD WIDTH=234><BLOCKQUOTE>
sign-propagating right shift</BLOCKQUOTE>

</TD></TR>
<TR><TD WIDTH=61><BLOCKQUOTE>
<TT><FONT FACE="Courier">&lt;&lt;</FONT></TT>
</BLOCKQUOTE>

</TD><TD WIDTH=234><BLOCKQUOTE>
left shift</BLOCKQUOTE>
</TD>
</TR>
<TR><TD WIDTH=61><BLOCKQUOTE>
<TT><FONT FACE="Courier">&gt;&gt;&gt;</FONT></TT>
</BLOCKQUOTE>

</TD><TD WIDTH=234><BLOCKQUOTE>
zero fill right fill</BLOCKQUOTE>

</TD></TR>
</TABLE>
</CENTER>
<P>
<P>
JavaScript supports assignment expressions using <TT><FONT FACE="Courier">=</FONT></TT>
, evaluation expressions, and conditional expressions. Conditional
expressions take the form <TT><FONT FACE="Courier">(condition)
? val1 : val2</FONT></TT>, where <TT><FONT FACE="Courier">val1</FONT></TT>
is processed if the condition is <TT><FONT FACE="Courier">true</FONT></TT>;
otherwise <TT><FONT FACE="Courier">val2</FONT></TT> is processed.
<H2><A NAME="Statements"><FONT SIZE=5 COLOR=#FF0000>Statements</FONT></A>
</H2>
<P>
JavaScript provides conditional, loop, object-manipulation, and
comment statements. The syntax for each of the statement types
is identical to Java. The syntaxes for the JavaScript- supported
statements are as follows:
<P>
<B>Conditional Statements</B>
<UL>
<LI><TT><FONT FACE="Courier">if-else:<BR>
if (condition) {<BR>
&nbsp;&nbsp;&nbsp;&nbsp;statements1 }<BR>
[else {<BR>
&nbsp;&nbsp;&nbsp;&nbsp;statements2}]</FONT></TT>
</UL>
<P>
<B>Loop Statements</B>
<UL>
<LI><TT><FONT FACE="Courier">for</FONT></TT>:<BR>
<TT><FONT FACE="Courier">for ([initial-expression;] [condition;]
[increment-expression]) {<BR>
&nbsp;&nbsp;&nbsp;&nbsp;statements<BR>
}</FONT></TT>
<LI><TT><FONT FACE="Courier">while</FONT></TT>:<BR>
<TT><FONT FACE="Courier">while (condition) {<BR>
&nbsp;&nbsp;&nbsp;&nbsp;statements<BR>
}</FONT></TT>
<LI><TT><FONT FACE="Courier">break</FONT></TT>:<BR>
<TT><FONT FACE="Courier">break</FONT></TT>
<LI><TT><FONT FACE="Courier">continue</FONT></TT>:<BR>
<TT><FONT FACE="Courier">continue</FONT></TT>
</UL>
<P>
<B>Object-Manipulation Statements</B>
<UL>
<LI><TT><FONT FACE="Courier">for&nbsp;&nbsp;&nbsp;in</FONT></TT>:
<BR>
<TT><FONT FACE="Courier">for (variable in object) {<BR>
&nbsp;&nbsp;&nbsp;&nbsp;statements }</FONT></TT>
<LI><TT><FONT FACE="Courier">new</FONT></TT>:<BR>
<TT><FONT FACE="Courier">objectName = new objectType ( param1
[,param2] ...[,paramN] )</FONT></TT>
<LI><TT><FONT FACE="Courier">this</FONT></TT>:<BR>
<TT><FONT FACE="Courier">this[.propertyName]</FONT></TT>
<LI><TT><FONT FACE="Courier">with</FONT></TT>:<BR>
<TT><FONT FACE="Courier">with (object){<BR>
&nbsp;&nbsp;&nbsp;&nbsp;statements<BR>
}</FONT></TT>
</UL>
<P>
<B>Comment Statements</B>
<BLOCKQUOTE>
<TT>// comment text<BR>
<FONT FACE="Courier New">/* multiple-line comment text */</FONT></TT>
</BLOCKQUOTE>
<H2><A NAME="Summary"><FONT SIZE=5 COLOR=#FF0000>Summary</FONT></A><FONT SIZE=5 COLOR=#FF0000>
</FONT></H2>
<P>
The JavaScript language provides enough of a diversity from Java
to retain its own identity. A large number of the statements,
expressions, and operators are identical. However, the loose typing
of JavaScript gives it a flavor all its own.
<P>
<HR WIDTH="100%"></P>

</P></CENTER>

<P>
<HR WIDTH="100%"></P>

<!-- reference library footer #1-->
</CENTER>
<IMG SRC="/images/rule.gif" WIDTH="460" HEIGHT="5" VSPACE="5"
ALT="Ruler image"><br>

<FONT SIZE="-1">

Contact <a href="mailto:reference@developer.com">
reference@developer.com</a> with questions or comments.<br>


<a href="/legal/">
Copyright 1998</a> 
<a href="http://www.earthweb.com" target="_top">
EarthWeb Inc.</a>,  All rights reserved.<BR>
PLEASE READ THE <a href="/reference/usage.html">ACCEPTABLE USAGE STATEMENT</a>.
<BR>
Copyright 1998 Macmillan Computer Publishing. All rights reserved.
</FONT>
</BLOCKQUOTE>


<!--outer table--><TD VALIGN="TOP">

<!--right side ads -->
<a target="resource window" href="http://adserver.developer.com/cgi-bin/accipiter/adclick.exe/AREA=DCAD1.REF" alt="Click here for more info"><img src="http://adserver.developer.com/cgi-bin/accipiter/adserver.exe/AREA=DCAD1.REF" alt="Click here for more info" height="88" width="88" border="0"></a>
<P>
<a target="resource window" href="http://adserver.developer.com/cgi-bin/accipiter/adclick.exe/AREA=DCAD2.REF" alt="Click here for more info"><img src="http://adserver.developer.com/cgi-bin/accipiter/adserver.exe/AREA=DCAD2.REF" alt="Click here for more info" height="88" width="88" border="0"></a>
<P>



</td>
</tr>
</table>
</BODY>
</HTML>



