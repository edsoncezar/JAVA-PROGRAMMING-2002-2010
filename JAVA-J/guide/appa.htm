<HTML>
<HEAD>
<TITLE>developer.com - Reference</TITLE>

<META NAME="Author" CONTENT="developer.com">
<META NAME="Keywords" CONTENT="javascript, ActiveX, VRML, Push, channel,
push channel, applet, directory, news, community, developer, internet,
intranet, java, java applet, J++, javabeans, java products, tools, java
tools, JDK, java development kit, java development environment, JIT,
JavaPlan, enterprise tools, JVM, Java Virtual Machine, Java resources, API,
browser, java documentation, CDF, Common Desktop Format, RDF, Resource
Description Framework, Netcaster, Netcast, Castanet, meta-language, metadata,
solaris, Solaris, SUN, CGI, Perl, Oracle, database, network, Netscape API,
Apache, apache, SSL, mSQL, Netscape, Fasttrack, FastTrack,
industry standard, ActiveX bridge, web, internet, site, site
design, microsoft, active server pages, asp, iis, nt, win95, 95, html, cgi,
frontpage, business, corporate, vbscript, javascript, activex, isapi,
database, access, sql, server, www, 3.0, 3.01, 3.02, 3.03, 3.04, 4.0,
4.0b2, 4.01, 4.03, 4.04, connection, online, commerce, publisher,
publishing, publish, webmaster, dynamic html, dhtml, windows 98, netscape,
netscape software, shareware, magazines, jobs, japan, free, freeware, free
stuff">
<META NAME="description" CONTENT="Developer.com is the leading online
service for developers. It includes Gamelan, the official 
directory for Java, as well
as news, information, tutorials, and directories for other Internet technologies
including ActiveX, JavaScript, perl, VRML, Java Beans, push technologies, and
other Internet and intranet technologies. Developer.com is also the home of
Developer Direct, the Professional Developer's Store, where developers can
purchase and download thousands of Web, authoring and other development
products at some of today's lowest prices.">
<META NAME="distribution" CONTENT="global">
<META NAME="resource-type" CONTENT="document">
<META NAME="language" CONTENT="en">

</HEAD>
<BODY BACKGROUND="/images/curve_r-wide.gif" BGCOLOR="#FFFFFF" TEXT="#000000" 
LINK="#DD0000" VLINK="#999999" ALINK="#FF0000">

<TABLE>
<TR><TD VALIGN=TOP WIDTH=120>
<A HREF="/" >
<IMG SRC="/images/masthead_r.gif" WIDTH="100" HEIGHT="78" BORDER="0"
ALT="Developer.com Logo"></a>
</TD><TD>
<a target="resource window" href="http://adserver.developer.com/cgi-bin/accipiter/adclick.exe/AREA=DCBAN.REF/DT=null">
<img src="http://adserver.developer.com/cgi-bin/accipiter/adserver.exe/AREA=DCBAN.REF/DT=null" HEIGHT="60" WIDTH="468" ALT="Click here to support our advertisers"><BR><CENTER>Click here to support our advertisers</CENTER></a>
</TD></TR>
</TABLE>
<!--outer table--><TABLE>
<!--outer table--><TR>
<!--outer table--><TD VALIGN="TOP">

<!--navbar info -->

<table><tr><td>

<A HREF="http://www.developerdirect.com/" >
<IMG SRC="/images/button_s.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><b>SHOPPING</b></font></a>

</td></tr><tr><td>

<A HREF="/community/jobs/c_jobs.html">
<IMG SRC="/images/button_d.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><B>JOB BANK</B></font></a>

</td></tr><tr><td>

<A HREF="http://www.classifieds2000.com/cgi-cls/display.exe?Developer+computer+searchcomputercategories">
<IMG SRC="/images/button_d.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><B>CLASSIFIEDS</B></font></a>

</td></tr><tr><td>

<A HREF="/directories/directories.html">
<IMG SRC="/images/button_d.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><B>DIRECTORIES</B></font></a>

</td></tr><tr><td>

<A HREF="/reference/">
<IMG SRC="/images/button_r.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><B>REFERENCE</B></font></a>

<br>

<a href="/reference/r_library.html">
<FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000">
Online Library</a></font>

</td></tr><tr><td>

<A HREF="/classroom/">
<IMG SRC="/images/button_r.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><B>LEARNING CENTER</B></font></a>

</td></tr><tr><td>

<A HREF="/journal/">
<IMG SRC="/images/button_n.gif" width="15" height="11" BORDER="0"><B><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000">JOURNAL</font></B></a>

</td></tr><tr><td>

<A HREF="/news/">
<IMG SRC="/images/button_d.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><b>NEWS CENTRAL</b></font></a>

</td></tr><tr><td>

<A HREF="/downloads/">
<IMG SRC="/images/button_d.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><b>DOWNLOADS</b></font></a>

</td></tr><tr><td>

<A HREF="/community/" >
<IMG SRC="/images/button_c.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><B>COMMUNITY</B></font></a>

</td></tr><tr><td>

<A HREF="/calendar/">
<IMG SRC="/images/button_d.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><b>CALENDAR</b></font></a>

</td></tr><tr><td>

<A HREF="/about/">
<IMG SRC="/images/button_a.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><b>ABOUT US</b></a></font>

</td></tr></table>
<table>
<tr>
<td>
<form action="/subscribe/list.cgi" method=post >
<img src="/images/rule.gif" width="100" height="2"><br>
<B><FONT FACE="Arial, Helvetica" SIZE="-1">Journal:</b></font><br>
<input name='email' value='your e-mail' size="11">
<input type='hidden'  name='state' value='Subscribe'>
</td>
</tr>
<tr>
<td>
<input type='submit' value='Subscribe'>
<br>
<font size="-1">Get the weekly email highlights from the most popular journal for developers!
<br>
<a href="http://www.developer.com/subscribe.html">Current issue</a>
<img src="/images/rule.gif" width="100" height="2">
<input type='hidden' name='name' value='New Subscriber'>
</FORM>
</td>
</tr>
</table>
<!--/navbar-->
<font size="-1">
<A HREF="http://www.developer.com">developer.com</a><BR>
<A HREF="http://www.developerdirect.com">developerdirect.com</a><BR>
<A HREF="http://www.htmlgoodies.com">htmlgoodies.com</a><BR>
<A HREF="http://www.javagoodies.com">javagoodies.com</a><br>
<A HREF="http://www.jars.com">jars.com</a><BR>
<a href="http://www.intranetjournal.com">intranetjournal.com</a><br>
<a href="http://www.javascripts.com">javascripts.com</a><br>
</font>
<!--outer table--></TD>

<!--outer table--><TD VALIGN="TOP">
<BLOCKQUOTE>
<P>

<img src="/images/header_r.gif" width="440" height="50">
<P>
<MAP NAME ="header_r2.gif.map">

<AREA SHAPE ="RECT"
      HREF ="/reference/author.html"
      COORDS ="361,0,440,29">
<AREA SHAPE ="RECT"
      HREF ="/reference/basic.html"
      COORDS ="254,0,360,29">
<AREA SHAPE ="RECT"
      HREF ="/reference/help.html"
      COORDS ="183,0,251,29">
<AREA SHAPE ="RECT"
      HREF ="/reference/cool.html"
      COORDS ="100,0,181,29">
<AREA SHAPE ="RECT"
      HREF ="/reference/mybook.html"
      COORDS ="0,0,100,29">
</MAP>

<MAP NAME ="header_r1.gif.map">

<AREA SHAPE ="RECT"
      HREF ="/reference/personalize.html"
      COORDS ="339,0,439,29">
</MAP>

<p>


<font face="Arial,Helvetica" size="-1" color="#006666"><A HREF="/reference/r_library.html"><B>All Categories</A> :</B>
<b><A HREF="/reference/r_java.html">Java</A></b></font><p>
   <META>
<H1><FONT COLOR=#FF0000>Appendix A</FONT></H1>
<H1><B><FONT SIZE=5 COLOR=#FF0000>The Jawa API Quick Reference</FONT></B>
</H1>
<P>
<HR WIDTH="100%"></P>
<P>
<H3 ALIGN=CENTER><FONT COLOR="#000000"><FONT SIZE=+2>CONTENTS<A NAME="CONTENTS"></A>
</FONT></FONT></H3>
<UL>
<LI><A HREF="#javaapplet" >java.applet</A>
<LI><A HREF="#javaawt" >java.awt</A>
<LI><A HREF="#javaawtimage" >java.awt.image</A>
<LI><A HREF="#javaawtpeer" >java.awt.peer</A>
<LI><A HREF="#javaio" >java.io</A>
<LI><A HREF="#javalang" >java.lang</A>
<LI><A HREF="#javanet" >java.net</A>
<LI><A HREF="#javautil" >java.util</A>
</UL>
<HR>
<P>
This appendix summarizes the classes and interfaces of the Java
API. The eight packages of the Java API are presented in alphabetical
order.
<H2><A NAME="javaapplet"><TT><B><FONT SIZE=5 COLOR=#FF0000 FACE="Courier New">java.applet</FONT></B></TT></A>
</H2>
<P>
The <TT><FONT FACE="Courier">java.applet</FONT></TT> package provides
the <TT><FONT FACE="Courier">Applet</FONT></TT> class and the
interfaces needed to support Java applets. It consists of a single
<TT><FONT FACE="Courier">Applet</FONT></TT> class and three interfaces
that enable audio playing and applet integration within browsers.
<H3><B>Classes</B></H3>
<H4><TT><B><FONT FACE="Courier New">Applet</FONT></B></TT></H4>
<P>
The <TT><FONT FACE="Courier">Applet</FONT></TT> class is a subclass
of the <TT><FONT FACE="Courier">java.awt.Panel</FONT></TT> class
that is used to implement Java applets.
<H3><B>Interfaces</B></H3>
<H4><TT><B><FONT FACE="Courier New">AppletContext</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">AppletContext</FONT></TT> interface
provides methods that allow an applet to interact with the context
in which it is run, such as a browser, the applet viewer, or an
application program.
<H4><TT><B><FONT FACE="Courier New">AppletStub</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">AppletStub</FONT></TT> interface
provides methods that are used to implement programs that display
an applet.
<H4><TT><B><FONT FACE="Courier New">AudioClip</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">AudioClip</FONT></TT> interface provides
methods that are used to implement classes that support the playing
of audio clips within applets.
<H2><A NAME="javaawt"><TT><B><FONT SIZE=5 COLOR=#FF0000 FACE="Courier New">java.awt</FONT></B></TT></A>
</H2>
<P>
The <TT><FONT FACE="Courier">java.awt</FONT></TT> package provides
the classes that support Java window programming. This package
is known as the Abstract Windowing Toolkit.
<H3><B>Classes</B></H3>
<H4><TT><B><FONT FACE="Courier New">BorderLayout</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">BorderLayout</FONT></TT> class is
used to lay out the GUI objects contained within a <TT><FONT FACE="Courier">Container</FONT></TT>
object. It is the default layout for <TT><FONT FACE="Courier">Window</FONT></TT>,
<TT><FONT FACE="Courier">Frame</FONT></TT>, and <TT><FONT FACE="Courier">Dialog</FONT></TT>
objects.
<H4><TT><B><FONT FACE="Courier New">Button</FONT></B></TT></H4>
<P>
The <TT><FONT FACE="Courier">Button</FONT></TT> class implements
a clickable button GUI control.
<H4><TT><B><FONT FACE="Courier New">Canvas</FONT></B></TT></H4>
<P>
The <TT><FONT FACE="Courier">Canvas</FONT></TT> class implements
a GUI object that supports drawing. Drawing is not implemented
on the canvas itself, but on the <TT><FONT FACE="Courier">Graphics</FONT></TT>
object provided by the canvas.
<H4><TT><B><FONT FACE="Courier New">CardLayout</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">CardLayout</FONT></TT> class is used
to lay out the objects in a <TT><FONT FACE="Courier">Container</FONT></TT>
object in the form similar to a deck of cards.
<H4><TT><B><FONT FACE="Courier New">Checkbox</FONT></B></TT></H4>
<P>
The <TT><FONT FACE="Courier">Checkbox</FONT></TT> class is used
to implement checkbox and radio button GUI controls.
<H4><TT><B><FONT FACE="Courier New">CheckboxGroup</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">CheckboxGroup</FONT></TT> class is
used with the <TT><FONT FACE="Courier">Checkbox</FONT></TT> class
to implement radio buttons.
<H4><TT><B><FONT FACE="Courier New">CheckboxMenuItem</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">CheckboxMenuItem</FONT></TT> class
is used to implement menu items that can be checked on or off.
<H4><TT><B><FONT FACE="Courier New">Choice</FONT></B></TT></H4>
<P>
The <TT><FONT FACE="Courier">Choice</FONT></TT> class is used
to implement pull-down lists that can be placed within the main
area of a window.
<H4><TT><B><FONT FACE="Courier New">Color</FONT></B></TT></H4>
<P>
The <TT><FONT FACE="Courier">Color</FONT></TT> class provides
a system-independent color implementation and defines several
color constants.
<H4><TT><B><FONT FACE="Courier New">Component</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">Component</FONT></TT> class is the
superclass of all window GUI controls. It provides a common set
of methods that support component organization, display, and event
handling.
<H4><TT><B><FONT FACE="Courier New">Container</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">Container</FONT></TT> class is the
superclass of window classes that contain other objects and provides
a common set of methods to organize and display contained objects.
<H4><TT><B><FONT FACE="Courier New">Dialog</FONT></B></TT></H4>
<P>
The <TT><FONT FACE="Courier">Dialog</FONT></TT> class is used
to implement dialog box windows.
<H4><TT><B><FONT FACE="Courier New">Dimension</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">Dimension</FONT></TT> class is used
to represent the width and height of a two-dimensional object.
<H4><TT><B><FONT FACE="Courier New">Event</FONT></B></TT></H4>
<P>
The <TT><FONT FACE="Courier">Event</FONT></TT> class is used to
encapsulate all events processed by Java window programs.
<H4><TT><B><FONT FACE="Courier New">FileDialog</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">FileDialog</FONT></TT> class is used
to construct dialog boxes that support the selection of files
for input and output operations.
<H4><TT><B><FONT FACE="Courier New">FlowLayout</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">FlowLayout</FONT></TT> class is used
to lay out window <TT><FONT FACE="Courier">Container</FONT></TT>
objects. It is the default layout used with the <TT><FONT FACE="Courier">Panel</FONT></TT>
class.
<H4><TT><B><FONT FACE="Courier New">Font</FONT></B></TT></H4>
<P>
The <TT><FONT FACE="Courier">Font</FONT></TT> class implements
a system-independent set of fonts that control text display.
<H4><TT><B><FONT FACE="Courier New">FontMetrics</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">FontMetrics</FONT></TT> class is
used to access the specific display properties of a <TT><FONT FACE="Courier">Font</FONT></TT>
class.
<H4><TT><B><FONT FACE="Courier New">Frame</FONT></B></TT></H4>
<P>
The <TT><FONT FACE="Courier">Frame</FONT></TT> class is used to
create and control the main application window of standalone Java
window programs.
<H4><TT><B><FONT FACE="Courier New">Graphics</FONT></B></TT></H4>
<P>
The <TT><FONT FACE="Courier">Graphics</FONT></TT> class supports
the drawing of graphical objects and text within a window.
<H4><TT><B><FONT FACE="Courier New">GridBagConstraints</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">GridBagConstraints</FONT></TT> class
is used to identify the positioning parameters of a component
that is contained within an object that is laid out using the
<TT><FONT FACE="Courier">GridBagLayout</FONT></TT> class.
<H4><TT><B><FONT FACE="Courier New">GridBagLayout</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">GridBagLayout</FONT></TT> class allows
a <TT><FONT FACE="Courier">Container</FONT></TT> object to be
laid out in a gridlike fashion with component objects occupying
more than one row or column.
<H4><TT><B><FONT FACE="Courier New">GridLayout</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">GridLayout</FONT></TT> class is used
to lay out a <TT><FONT FACE="Courier">Container</FONT></TT> object
in a grid where all elements of the grid are the same size.
<H4><TT><B><FONT FACE="Courier New">Image</FONT></B></TT></H4>
<P>
The <TT><FONT FACE="Courier">Image</FONT></TT> class provides
a content-independent mechanism for implementing graphical images.
<H4><TT><B><FONT FACE="Courier New">Insets</FONT></B></TT></H4>
<P>
The <TT><FONT FACE="Courier">Insets</FONT></TT> class is used
to specify the margins associated with a GUI object.
<H4><TT><B><FONT FACE="Courier New">Label</FONT></B></TT></H4>
<P>
The <TT><FONT FACE="Courier">Label</FONT></TT> class is used to
display text labels within a window or other GUI container.
<H4><TT><B><FONT FACE="Courier New">List</FONT></B></TT></H4>
<P>
The <TT><FONT FACE="Courier">List</FONT></TT> class implements
single- and multiple-selection list GUI controls.
<H4><TT><B><FONT FACE="Courier New">MediaTracker</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">MediaTracker</FONT></TT> class provides
a set of methods for managing images used to implement multimedia
objects.
<H4><TT><B><FONT FACE="Courier New">Menu</FONT></B></TT></H4>
<P>
The <TT><FONT FACE="Courier">Menu</FONT></TT> class implements
a single pull-down menu that is attached to a menu bar or other
menu.
<H4><TT><B><FONT FACE="Courier New">MenuBar</FONT></B></TT></H4>
<P>
The <TT><FONT FACE="Courier">MenuBar</FONT></TT> class implements
a menu bar that is attached to the <TT><FONT FACE="Courier">Frame</FONT></TT>
object of a window program.
<H4><TT><B><FONT FACE="Courier New">MenuComponent</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">MenuComponent</FONT></TT> class is
the superclass of all menu-related classes and provides a common
set of methods used by its subclasses.
<H4><TT><B><FONT FACE="Courier New">MenuItem</FONT></B></TT></H4>
<P>
The <TT><FONT FACE="Courier">MenuItem</FONT></TT> class is used
to implement items that can be selected from a pull-down menu.
It is extended by the <TT><FONT FACE="Courier">Menu</FONT></TT>
and <TT><FONT FACE="Courier">CheckboxMenuItem</FONT></TT> classes.
<H4><TT><B><FONT FACE="Courier New">Panel</FONT></B></TT></H4>
<P>
The <TT><FONT FACE="Courier">Panel</FONT></TT> class is used as
a container to organize GUI components within a window. Its default
layout is <TT><FONT FACE="Courier">FlowLayout</FONT></TT>.
<H4><TT><B><FONT FACE="Courier New">Point</FONT></B></TT></H4>
<P>
The <TT><FONT FACE="Courier">Point</FONT></TT> class is used to
represent general, two-dimensional x,y-coordinates.
<H4><TT><B><FONT FACE="Courier New">Polygon</FONT></B></TT></H4>
<P>
The <TT><FONT FACE="Courier">Polygon</FONT></TT> class represents
a polygon as a list of x,y-coordinates that identify the polygon's
vertices.
<H4><TT><B><FONT FACE="Courier New">Rectangle</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">Rectangle</FONT></TT> class represents
a rectangle using the x,y-coordinate of its upper-left corner,
its width, and height.
<H4><TT><B><FONT FACE="Courier New">Scrollbar</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">Scrollbar</FONT></TT> class is used
to implement vertical and horizontal scrollbars.
<H4><TT><B><FONT FACE="Courier New">TextArea</FONT></B></TT></H4>
<P>
The <TT><FONT FACE="Courier">TextArea</FONT></TT> class implements
scrollable text-entry objects that span multiple lines and columns.
<H4><TT><B><FONT FACE="Courier New">TextComponent</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">TextComponent</FONT></TT> class is
the superclass of all text-based classes. It provides a common
set of methods used by the <TT><FONT FACE="Courier">TextArea</FONT></TT>
and <TT><FONT FACE="Courier">TextField</FONT></TT> classes.
<H4><TT><B><FONT FACE="Courier New">TextField</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">TextField</FONT></TT> class implements
a one-line text-entry field.
<H4><TT><B><FONT FACE="Courier New">Toolkit</FONT></B></TT></H4>
<P>
The <TT><FONT FACE="Courier">Toolkit</FONT></TT> class provides
the linkage between the common AWT supported by Java and the platform-dependent
implementation of the AWT.
<H4><TT><B><FONT FACE="Courier New">Window</FONT></B></TT></H4>
<P>
The <TT><FONT FACE="Courier">Window</FONT></TT> class is the superclass
of all window-related classes and provides a common set of methods
for organizing and displaying windows.
<H3><B>Interfaces</B></H3>
<H4><TT><B><FONT FACE="Courier New">LayoutManager</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">LayoutManager</FONT></TT> interface
provides a set of methods that are implemented by classes that
control the layout of a container.
<H4><TT><B><FONT FACE="Courier New">MenuContainer</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">MenuContainer</FONT></TT> class provides
a set of methods that are implemented by classes that contain
menus.
<H2><A NAME="javaawtimage"><TT><B><FONT SIZE=5 COLOR=#FF0000 FACE="Courier New">java.awt.image</FONT></B></TT></A>
</H2>
<P>
The <TT><FONT FACE="Courier">java.awt.image</FONT></TT> package
defines classes and interfaces that support image generation,
storage, and processing.
<H3><B>Classes</B></H3>
<H4><TT><B><FONT FACE="Courier New">ColorModel</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">ColorModel</FONT></TT> class provides
a general framework for representing colors and maps this framework
to the RGB color model.
<H4><TT><B><FONT FACE="Courier New">CropImageFilter</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">CropImageFilter</FONT></TT> class
is used to crop images to a specified area.
<H4><TT><B><FONT FACE="Courier New">DirectColorModel</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">DirectColorModel</FONT></TT> class
is used to directly access the color values of a pixel.
<H4><TT><B><FONT FACE="Courier New">FilteredImageSource</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">FilteredImageSource</FONT></TT> class
provides the capability to filter an image using an object of
class <TT><FONT FACE="Courier">ImageFilter</FONT></TT>.
<H4><TT><B><FONT FACE="Courier New">ImageFilter</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">ImageFilter</FONT></TT> class provides
a common set of methods for implementing an image filter.
<H4><TT><B><FONT FACE="Courier New">IndexColorModel</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">IndexColorModel</FONT></TT> class
is a subclass of the <TT><FONT FACE="Courier">ColorModel</FONT></TT>
class that translates fixed colormap pixel values to their RGB
component colors.
<H4><TT><B><FONT FACE="Courier New">MemoryImageSource</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">MemoryImageSource</FONT></TT> class
is used to create images using an array of pixel values.
<H4><TT><B><FONT FACE="Courier New">PixelGrabber</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">PixelGrabber</FONT></TT> class is
used to capture the pixels of an image and store them in an array.
<H4><TT><B><FONT FACE="Courier New">RGBImageFilter</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">RGBImageFilter</FONT></TT> class
is used to create image filters that modify the pixels of the
default RGB color model.
<H3><B>Interfaces</B></H3>
<H4><TT><B><FONT FACE="Courier New">ImageConsumer</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">ImageConsumer</FONT></TT> interface
provides a set of methods for accessing image data provided by
classes that implement the <TT><FONT FACE="Courier">ImageProducer</FONT></TT>
interface.
<H4><TT><B><FONT FACE="Courier New">ImageObserver</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">ImageObserver</FONT></TT> interface
provides a set of constants and methods through which objects
can be notified about an image that is being constructed.
<H4><TT><B><FONT FACE="Courier New">ImageProducer</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">ImageProducer</FONT></TT> interface
provides a set of methods for classes that produce images. These
methods are used to reconstruct or modify an image being produced.
<H2><A NAME="javaawtpeer"><TT><B><FONT SIZE=5 COLOR=#FF0000 FACE="Courier New">java.awt.peer</FONT></B></TT></A>
</H2>
<P>
The <TT><FONT FACE="Courier">java.awt.peer</FONT></TT> package
provides a set of interface definitions that map platform-independent
AWT classes to their native platform-dependent implementations.
<H3><B>Classes</B></H3>
<P>
This package does not have any classes.
<H3><B>Interfaces</B></H3>
<H4><TT><B><FONT FACE="Courier New">ButtonPeer</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">ButtonPeer</FONT></TT> interface
specifies the native methods that are required to support the
implementation of the <TT><FONT FACE="Courier">java.awt.Button</FONT></TT>
class.
<H4><TT><B><FONT FACE="Courier New">CanvasPeer</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">CanvasPeer</FONT></TT> interface
specifies the native methods that are required to support the
implementation of the <TT><FONT FACE="Courier">java.awt.Canvas</FONT></TT>
class.
<H4><TT><B><FONT FACE="Courier New">CheckboxMenuItemPeer</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">CheckboxMenuItemPeer</FONT></TT>
interface specifies the native methods that are required to support
the implementation of the <TT><FONT FACE="Courier">java.awt.CheckboxMenuItem</FONT></TT>
class.
<H4><TT><B><FONT FACE="Courier New">CheckboxPeer</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">CheckboxPeer</FONT></TT> interface
specifies the native methods that are required to support the
implementation of the <TT><FONT FACE="Courier">java.awt.Checkbox</FONT></TT>
class.
<H4><TT><B><FONT FACE="Courier New">ChoicePeer</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">ChoicePeer</FONT></TT> interface
specifies the native methods that are required to support the
implementation of the <TT><FONT FACE="Courier">java.awt.Choice</FONT></TT>
class.
<H4><TT><B><FONT FACE="Courier New">ComponentPeer</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">ComponentPeer</FONT></TT> interface
specifies the native methods that are required to support the
implementation of the <TT><FONT FACE="Courier">java.awt.Component</FONT></TT>
class.
<H4><TT><B><FONT FACE="Courier New">ContainerPeer</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">ContainerPeer</FONT></TT> interface
specifies the native methods that are required to support the
implementation of the <TT><FONT FACE="Courier">java.awt.Container</FONT></TT>
class.
<H4><TT><B><FONT FACE="Courier New">DialogPeer</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">DialogPeer</FONT></TT> interface
specifies the native methods that are required to support the
implementation of the <TT><FONT FACE="Courier">java.awt.Dialog</FONT></TT>
class.
<H4><TT><B><FONT FACE="Courier New">FileDialogPeer</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">FileDialogPeer</FONT></TT> interface
specifies the native methods that are required to support the
implementation of the <TT><FONT FACE="Courier">java.awt.FileDialog</FONT></TT>
class.
<H4><TT><B><FONT FACE="Courier New">FramePeer</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">FramePeer</FONT></TT> interface specifies
the native methods that are required to support the implementation
of the <TT><FONT FACE="Courier">java.awt.Frame</FONT></TT> class.
<H4><TT><B><FONT FACE="Courier New">LabelPeer</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">LabelPeer</FONT></TT> interface specifies
the native methods that are required to support the implementation
of the <TT><FONT FACE="Courier">java.awt.Label</FONT></TT> class.
<H4><TT><B><FONT FACE="Courier New">ListPeer</FONT></B></TT></H4>
<P>
The <TT><FONT FACE="Courier">ListPeer</FONT></TT> interface specifies
the native methods that are required to support the implementation
of the <TT><FONT FACE="Courier">java.awt.List</FONT></TT> class.
<H4><TT><B><FONT FACE="Courier New">MenuBarPeer</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">MenuBarPeer</FONT></TT> interface
specifies the native methods that are required to support the
implementation of the <TT><FONT FACE="Courier">java.awt.MenuBar</FONT></TT>
class.
<H4><TT><B><FONT FACE="Courier New">MenuComponentPeer</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">MenuComponentPeer</FONT></TT> interface
specifies the native methods that are required to support the
implementation of the <TT><FONT FACE="Courier">java.awt.MenuComponent</FONT></TT>
class.
<H4><TT><B><FONT FACE="Courier New">MenuItemPeer</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">MenuItemPeer</FONT></TT> interface
specifies the native methods that are required to support the
implementation of the <TT><FONT FACE="Courier">java.awt.MenuItem</FONT></TT>
class.
<H4><TT><B><FONT FACE="Courier New">MenuPeer</FONT></B></TT></H4>
<P>
The <TT><FONT FACE="Courier">MenuPeer</FONT></TT> interface specifies
the native methods that are required to support the implementation
of the <TT><FONT FACE="Courier">java.awt.Menu</FONT></TT> class.
<H4><TT><B><FONT FACE="Courier New">PanelPeer</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">PanelPeer</FONT></TT> interface specifies
the native methods that are required to support the implementation
of the <TT><FONT FACE="Courier">java.awt.Panel</FONT></TT> class.
<H4><TT><B><FONT FACE="Courier New">ScrollbarPeer</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">ScrollbarPeer</FONT></TT> interface
specifies the native methods that are required to support the
implementation of the <TT><FONT FACE="Courier">java.awt.Scrollbar</FONT></TT>
class.
<H4><TT><B><FONT FACE="Courier New">TextAreaPeer</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">TextAreaPeer</FONT></TT> interface
specifies the native methods that are required to support the
implementation of the <TT><FONT FACE="Courier">java.awt.TextArea</FONT></TT>
class.
<H4><TT><B><FONT FACE="Courier New">TextComponentPeer</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">TextComponentPeer</FONT></TT> interface
specifies the native methods that are required to support the
implementation of the <TT><FONT FACE="Courier">java.awt.TextComponent</FONT></TT>
class.
<H4><TT><B><FONT FACE="Courier New">TextFieldPeer</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">TextFieldPeer</FONT></TT> interface
specifies the native methods that are required to support the
implementation of the <TT><FONT FACE="Courier">java.awt.TextField</FONT></TT>
class.
<H4><TT><B><FONT FACE="Courier New">WindowPeer</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">WindowPeer</FONT></TT> interface
specifies the native methods that are required to support the
implementation of the <TT><FONT FACE="Courier">java.awt.Window</FONT></TT>
class.
<H2><A NAME="javaio"><TT><B><FONT SIZE=5 COLOR=#FF0000 FACE="Courier New">java.io</FONT></B></TT></A>
</H2>
<P>
The <TT><FONT FACE="Courier">java.io</FONT></TT> package provides
a number of classes that support stream-based I/O. These classes
are organized into two main class hierarchies under the <TT><FONT FACE="Courier">InputStream</FONT></TT>
and <TT><FONT FACE="Courier">OutputStream</FONT></TT> classes.
<H3><B>Classes</B></H3>
<H4><TT><B><FONT FACE="Courier New">BufferedInputStream</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">BufferedInputStream</FONT></TT> class
provides the capability to implement buffering for an arbitrary
<TT><FONT FACE="Courier">InputStream</FONT></TT> object.
<H4><TT><B><FONT FACE="Courier New">BufferedOutputStream</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">BufferedOutputStream</FONT></TT>
class provides the capability to implement buffering for an arbitrary
<TT><FONT FACE="Courier">OutputStream</FONT></TT> object.
<H4><TT><B><FONT FACE="Courier New">ByteArrayInputStream</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">ByteArrayInputStream</FONT></TT>
class is used to convert a byte array into an <TT><FONT FACE="Courier">InputStream</FONT></TT>
object.
<H4><TT><B><FONT FACE="Courier New">ByteArrayOutputStream</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">ByteArrayOutputStream</FONT></TT>
class is used to convert a byte array into an <TT><FONT FACE="Courier">OutputStream</FONT></TT>
object.
<H4><TT><B><FONT FACE="Courier New">DataInputStream</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">DataInputStream</FONT></TT> class
provides the capability to read primitive data types and objects
from an <TT><FONT FACE="Courier">InputStream</FONT></TT> object.
<H4><TT><B><FONT FACE="Courier New">DataOutputStream</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">DataOutputStream</FONT></TT> class
provides the capability to write primitive data types and objects
to an <TT><FONT FACE="Courier">OutputStream</FONT></TT> object.
<H4><TT><B><FONT FACE="Courier New">File</FONT></B></TT></H4>
<P>
The <TT><FONT FACE="Courier">File</FONT></TT> class is used to
provide system-independent access to a file or directory on the
host system.
<H4><TT><B><FONT FACE="Courier New">FileDescriptor</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">FileDescriptor</FONT></TT> class
provides a system-independent implementation of file descriptor
objects.
<H4><TT><B><FONT FACE="Courier New">FileInputStream</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">FileInputStream</FONT></TT> class
allows a <TT><FONT FACE="Courier">File</FONT></TT> object to be
used as the basis for creating an object of class <TT><FONT FACE="Courier">InputStream</FONT></TT>.
<H4><TT><B><FONT FACE="Courier New">FileOutputStream</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">FileOutputStream</FONT></TT> class
allows a <TT><FONT FACE="Courier">File</FONT></TT> object to be
used to create an object of class <TT><FONT FACE="Courier">OutputStream</FONT></TT>.
<H4><TT><B><FONT FACE="Courier New">FilterInputStream</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">FilterInputStream</FONT></TT> class
is the superclass of all classes that support input stream filtering.
<H4><TT><B><FONT FACE="Courier New">FilterOutputStream</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">FilterOutputStream</FONT></TT> class
is the superclass of all classes that support output stream <BR>
filtering.
<H4><TT><B><FONT FACE="Courier New">InputStream</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">InputStream</FONT></TT> class is
the superclass of all input stream classes. It provides the methods
required to implement an input stream of bytes.
<H4><TT><B><FONT FACE="Courier New">LineNumberInputStream</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">LineNumberInputStream</FONT></TT>
class is used to track the line numbers associated with an <TT><FONT FACE="Courier">InputStream</FONT></TT>
object.
<H4><TT><B><FONT FACE="Courier New">OutputStream</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">OutputStream</FONT></TT> class is
the superclass of all output stream classes. It provides the methods
required to implement an output stream of bytes.
<H4><TT><B><FONT FACE="Courier New">PipedInputStream</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">PipedInputStream</FONT></TT> class
is used to provide an input stream to a thread so that it can
read data written to a <TT><FONT FACE="Courier">PipedOutputStream</FONT></TT>
object by another thread.
<H4><TT><B><FONT FACE="Courier New">PipedOutputStream</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">PipedOutputStream</FONT></TT> class
is used to provide an output stream to a thread so that it can
send data to another thread that reads the data from a <TT><FONT FACE="Courier">PipedInputStream</FONT></TT>
object.
<H4><TT><B><FONT FACE="Courier New">PrintStream</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">PrintStream</FONT></TT> class provides
an output stream that supports a common set of methods for printing
objects and primitive data types.
<H4><TT><B><FONT FACE="Courier New">PushbackInputStream</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">PushbackInputStream</FONT></TT> class
is used to provide an output stream that is capable of having
data written back onto it so that it can be read again.
<H4><TT><B><FONT FACE="Courier New">RandomAccessFile</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">RandomAccessFile</FONT></TT> class
implements a file that can be directly read or written to at arbitrary
file locations.
<H4><TT><B><FONT FACE="Courier New">SequenceInputStream</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">SequenceInputStream</FONT></TT> class
is used to concatenate a sequence of input streams into a single
input stream.
<H4><TT><B><FONT FACE="Courier New">StreamTokenizer</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">StreamTokenizer</FONT></TT> class
is used to convert an input stream into a stream of tokens for
processing by an input parser.
<H4><TT><B><FONT FACE="Courier New">StringBufferInputStream</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">StringBufferInputStream</FONT></TT>
class is used to convert a <TT><FONT FACE="Courier">StringBuffer</FONT></TT>
object for use as an <TT><FONT FACE="Courier">InputStream</FONT></TT>
object.
<H3><B>Interfaces</B></H3>
<H4><TT><B><FONT FACE="Courier New">DataInput</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">DataInput</FONT></TT> interface provides
a set of methods for constructing a system-independent implementation
of an input stream.
<H4><TT><B><FONT FACE="Courier New">DataOutput</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">DataOutput</FONT></TT> interface
provides a set of methods for constructing a system-independent
implementation of an output stream.
<H4><TT><B><FONT FACE="Courier New">FilenameFilter</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">FilenameFilter</FONT></TT> interface
provides the <TT><FONT FACE="Courier">accept()</FONT></TT> method
for determining whether a filename should be included in a filtered
list of filenames.
<H2><A NAME="javalang"><TT><B><FONT SIZE=5 COLOR=#FF0000 FACE="Courier New">java.lang</FONT></B></TT></A>
</H2>
<P>
The <TT><FONT FACE="Courier">java.lang</FONT></TT> package provides
the core set of classes that are used in applets, console programs,
and window programs. The fundamental classes of the Java class
hierarchy are defined within this package. Some <TT><FONT FACE="Courier">java.lang</FONT></TT>
classes also provide access to system-specific information.
<H3><B>Classes</B></H3>
<H4><TT><B><FONT FACE="Courier New">Boolean</FONT></B></TT></H4>
<P>
The <TT><FONT FACE="Courier">Boolean</FONT></TT> class provides
a class wrapper that is used to access the <TT><FONT FACE="Courier">boolean</FONT></TT>
primitive data type as a Java object.
<H4><TT><B><FONT FACE="Courier New">Character</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">Character</FONT></TT> class provides
a class wrapper that is used to access the <TT><FONT FACE="Courier">char</FONT></TT>
primitive data type as a Java object.
<H4><TT><B><FONT FACE="Courier New">Class</FONT></B></TT></H4>
<P>
The <TT><FONT FACE="Courier">Class</FONT></TT> class provides
runtime information about other classes in the form of a class
<BR>
descriptor.
<H4><TT><B><FONT FACE="Courier New">ClassLoader</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">ClassLoader</FONT></TT> class is
used to define policies for loading classes into the runtime environment.
<H4><TT><B><FONT FACE="Courier New">Compiler</FONT></B></TT></H4>
<P>
The <TT><FONT FACE="Courier">Compiler</FONT></TT> class is used
to provide access to the Java compiler.
<H4><TT><B><FONT FACE="Courier New">Double</FONT></B></TT></H4>
<P>
The <TT><FONT FACE="Courier">Double</FONT></TT> class provides
a class wrapper that is used to access the <TT><FONT FACE="Courier">double</FONT></TT>
primitive data type as a Java object.
<H4><TT><B><FONT FACE="Courier New">Float</FONT></B></TT></H4>
<P>
The <TT><FONT FACE="Courier">Float</FONT></TT> class provides
a class wrapper that is used to access the <TT><FONT FACE="Courier">float</FONT></TT>
primitive data type as a Java object.
<H4><TT><B><FONT FACE="Courier New">Integer</FONT></B></TT></H4>
<P>
The <TT><FONT FACE="Courier">Integer</FONT></TT> class provides
a class wrapper that is used to access the <TT><FONT FACE="Courier">int</FONT></TT>
primitive data type as a Java object.
<H4><TT><B><FONT FACE="Courier New">Long</FONT></B></TT></H4>
<P>
The <TT><FONT FACE="Courier">Long</FONT></TT> class provides a
class wrapper that is used to access the <TT><FONT FACE="Courier">long</FONT></TT>
primitive data type as a Java object.
<H4><TT><B><FONT FACE="Courier New">Math</FONT></B></TT></H4>
<P>
The <TT><FONT FACE="Courier">Math</FONT></TT> class provides a
standard library of mathematical functions.
<H4><TT><B><FONT FACE="Courier New">Number</FONT></B></TT></H4>
<P>
The <TT><FONT FACE="Courier">Number</FONT></TT> class is the superclass
of all integer and floating-point classes. It can be used to convert
a numeric value from one class to another.
<H4><TT><B><FONT FACE="Courier New">Object</FONT></B></TT></H4>
<P>
The <TT><FONT FACE="Courier">Object</FONT></TT> class is the superclass
of all Java classes and provides methods that are inherited by
all Java classes.
<H4><TT><B><FONT FACE="Courier New">Process</FONT></B></TT></H4>
<P>
The <TT><FONT FACE="Courier">Process</FONT></TT> class is used
to provide system-independent access to processes that are executed
using the <TT><FONT FACE="Courier">exec()</FONT></TT> method of
the <TT><FONT FACE="Courier">System</FONT></TT> class.
<H4><TT><B><FONT FACE="Courier New">Runtime</FONT></B></TT></H4>
<P>
The <TT><FONT FACE="Courier">Runtime</FONT></TT> class provides
access to the underlying Java runtime system.
<H4><TT><B><FONT FACE="Courier New">SecurityManager</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">SecurityManager</FONT></TT> class
is used to implement a security policy for the execution of untrusted
classes.
<H4><TT><B><FONT FACE="Courier New">String</FONT></B></TT></H4>
<P>
The <TT><FONT FACE="Courier">String</FONT></TT> class is used
to implement constant character strings.
<H4><TT><B><FONT FACE="Courier New">StringBuffer</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">StringBuffer</FONT></TT> class is
used to implement growable character strings.
<H4><TT><B><FONT FACE="Courier New">System</FONT></B></TT></H4>
<P>
The <TT><FONT FACE="Courier">System</FONT></TT> class provides
system-independent access to important system resources such as
<TT><FONT FACE="Courier">stdin</FONT></TT>, <TT><FONT FACE="Courier">stdout</FONT></TT>,
and <TT><FONT FACE="Courier">stderr</FONT></TT>.
<H4><TT><B><FONT FACE="Courier New">Thread</FONT></B></TT></H4>
<P>
The <TT><FONT FACE="Courier">Thread</FONT></TT> class is used
to implement multithreaded Java programs.
<H4><TT><B><FONT FACE="Courier New">ThreadGroup</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">ThreadGroup</FONT></TT> class is
used to organize and control a set of threads as a single entity.
<H4><TT><B><FONT FACE="Courier New">Throwable</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">Throwable</FONT></TT> class is the
superclass of all Java errors and exceptions.
<H3><B>Interfaces</B></H3>
<H4><TT><B><FONT FACE="Courier New">Cloneable</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">Cloneable</FONT></TT> interface is
implemented by classes that can be copied or cloned.
<H4><TT><B><FONT FACE="Courier New">Runnable</FONT></B></TT></H4>
<P>
The <TT><FONT FACE="Courier">Runnable</FONT></TT> interface is
implemented by classes that can be executed. It is used to implement
threads that are not a subclass of the <TT><FONT FACE="Courier">Thread</FONT></TT>
class.
<H2><A NAME="javanet"><TT><B><FONT SIZE=5 COLOR=#FF0000 FACE="Courier New">java.net</FONT></B></TT></A>
</H2>
<P>
The <TT><FONT FACE="Courier">java.net</FONT></TT> package provides
a set of classes that implement socket-based client/server networking.
<H3><B>Classes</B></H3>
<H4><TT><B><FONT FACE="Courier New">ContentHandler</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">ContentHandler</FONT></TT> class
is used to extract and process an object that is read from an
<TT><FONT FACE="Courier">URLConnection</FONT></TT> object.
<H4><TT><B><FONT FACE="Courier New">DatagramPacket</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">DatagramPacket</FONT></TT> class
encapsulates a datagram object that is read or written from a
UDP socket.
<H4><TT><B><FONT FACE="Courier New">DatagramSocket</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">DatagramSocket</FONT></TT> class
is used to implement a UDP socket for the transmission and reception
of datagrams.
<H4><TT><B><FONT FACE="Courier New">InetAddress</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">InetAddress</FONT></TT> class provides
an encapsulation of an Internet host and IP address.
<H4><TT><B><FONT FACE="Courier New">ServerSocket</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">ServerSocket</FONT></TT> provides
the capability to create TCP sockets that can be used to implement
a server application.
<H4><TT><B><FONT FACE="Courier New">Socket</FONT></B></TT></H4>
<P>
The <TT><FONT FACE="Courier">Socket</FONT></TT> class is used
to implement a socket used by a client program.
<H4><TT><B><FONT FACE="Courier New">SocketImpl</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">SocketImpl</FONT></TT> class is used
to tailor the implementation of Java socket classes to a specific
platform or network environment.
<H4><TT><B><FONT FACE="Courier New">URL</FONT></B></TT></H4>
<P>
The <TT><FONT FACE="Courier">URL</FONT></TT> class encapsulates
URLs and provides a common set of methods for accessing the network
resources referenced by an URL.
<H4><TT><B><FONT FACE="Courier New">URLConnection</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">URLConnection</FONT></TT> class is
used to manage the HTTP connection created with the resource specified
by an URL.
<H4><TT><B><FONT FACE="Courier New">URLEncoder</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">URLEncoder</FONT></TT> class is used
to encode information in a format that is suitable for communication
via an URL.
<H4><TT><B><FONT FACE="Courier New">URLStreamHandler</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">URLStreamHandler</FONT></TT> class
is used to implement an <TT><FONT FACE="Courier">URLConnection</FONT></TT>
for different protocol types.
<H3><B>Interfaces</B></H3>
<H4><TT><B><FONT FACE="Courier New">ContentHandlerFactory</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">ContentHandlerFactory</FONT></TT>
interface is used to associate <TT><FONT FACE="Courier">ContentHandler</FONT></TT>
objects with MIME types.
<H4><TT><B><FONT FACE="Courier New">SocketImplFactory</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">SocketImplFactory</FONT></TT> interface
is used to create objects of the <TT><FONT FACE="Courier">SocketImpl</FONT></TT>
class.
<H4><TT><B><FONT FACE="Courier New">URLStreamHandlerFactory</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">URLStreamHandlerFactory</FONT></TT>
interface is used to associate an <TT><FONT FACE="Courier">URLStreamHandler</FONT></TT>
object with a protocol type.
<H2><A NAME="javautil"><TT><B><FONT SIZE=5 COLOR=#FF0000 FACE="Courier New">java.util</FONT></B></TT></A>
</H2>
<P>
The <TT><FONT FACE="Courier">java.util</FONT></TT> package provides
a collection of classes that support a variety of common programming
functions.
<H3><B>Classes</B></H3>
<H4><TT><B><FONT FACE="Courier New">BitSet</FONT></B></TT></H4>
<P>
The <TT><FONT FACE="Courier">BitSet</FONT></TT> class is used
to implement a compact set of bits that can be individually or
collectively accessed.
<H4><TT><B><FONT FACE="Courier New">Date</FONT></B></TT></H4>
<P>
The <TT><FONT FACE="Courier">Date</FONT></TT> class provides access
to the current date and time in a system-independent manner.
<H4><TT><B><FONT FACE="Courier New">Dictionary</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">Dictionary</FONT></TT> class is used
to create data container objects that enable data values to be
accessed by their associated keys.
<H4><TT><B><FONT FACE="Courier New">Hashtable</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">Hashtable</FONT></TT> class is a
subclass of the <TT><FONT FACE="Courier">Dictionary</FONT></TT>
class that allows a collection of objects to be accessed by a
hash code value.
<H4><TT><B><FONT FACE="Courier New">Observable</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">Observable</FONT></TT> class enables
objects to be constructed that inform observer objects as they
are updated. The observer objects must implement the <TT><FONT FACE="Courier">Observer</FONT></TT>
interface.
<H4><TT><B><FONT FACE="Courier New">Properties</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">Properties</FONT></TT> class is a
subclass of <TT><FONT FACE="Courier">Hashtable</FONT></TT> that
can be saved or loaded from a stream.
<H4><TT><B><FONT FACE="Courier New">Random</FONT></B></TT></H4>
<P>
The <TT><FONT FACE="Courier">Random</FONT></TT> class is used
to implement random number generators.
<H4><TT><B><FONT FACE="Courier New">Stack</FONT></B></TT></H4>
<P>
The <TT><FONT FACE="Courier">Stack</FONT></TT> class is used to
create a stack of objects.
<H4><TT><B><FONT FACE="Courier New">StringTokenizer</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">StringTokenizer</FONT></TT> class
is used to parse a <TT><FONT FACE="Courier">String</FONT></TT>
object into a set of tokens.
<H4><TT><B><FONT FACE="Courier New">Vector</FONT></B></TT></H4>
<P>
The <TT><FONT FACE="Courier">Vector</FONT></TT> class implements
a growable array.
<H3><B>Interfaces</B></H3>
<H4><TT><B><FONT FACE="Courier New">Enumeration</FONT></B></TT>
</H4>
<P>
The <TT><FONT FACE="Courier">Enumeration</FONT></TT> interface
provides a set of methods for indexing through a set of objects.
<H4><TT><B><FONT FACE="Courier New">Observer</FONT></B></TT></H4>
<P>
The <TT><FONT FACE="Courier">Observer</FONT></TT> interface is
implemented by classes that observe objects of the <TT><FONT FACE="Courier">Observable</FONT></TT>
class.
<P>
<HR WIDTH="100%"></P>

</P></CENTER>

<P>
<HR WIDTH="100%"></P>

<!-- reference library footer #1-->
</CENTER>
<IMG SRC="/images/rule.gif" WIDTH="460" HEIGHT="5" VSPACE="5"
ALT="Ruler image"><br>

<FONT SIZE="-1">

Contact <a href="mailto:reference@developer.com">
reference@developer.com</a> with questions or comments.<br>


<a href="/legal/">
Copyright 1998</a> 
<a href="http://www.earthweb.com" target="_top">
EarthWeb Inc.</a>,  All rights reserved.<BR>
PLEASE READ THE <a href="/reference/usage.html">ACCEPTABLE USAGE STATEMENT</a>.
<BR>
Copyright 1998 Macmillan Computer Publishing. All rights reserved.
</FONT>
</BLOCKQUOTE>


<!--outer table--><TD VALIGN="TOP">

<!--right side ads -->
<a target="resource window" href="http://adserver.developer.com/cgi-bin/accipiter/adclick.exe/AREA=DCAD1.REF" alt="Click here for more info"><img src="http://adserver.developer.com/cgi-bin/accipiter/adserver.exe/AREA=DCAD1.REF" alt="Click here for more info" height="88" width="88" border="0"></a>
<P>
<a target="resource window" href="http://adserver.developer.com/cgi-bin/accipiter/adclick.exe/AREA=DCAD2.REF" alt="Click here for more info"><img src="http://adserver.developer.com/cgi-bin/accipiter/adserver.exe/AREA=DCAD2.REF" alt="Click here for more info" height="88" width="88" border="0"></a>
<P>



</td>
</tr>
</table>
</BODY>
</HTML>



