<HTML>
<HEAD>
<TITLE>developer.com - Reference</TITLE>

<META NAME="Author" CONTENT="developer.com">
<META NAME="Keywords" CONTENT="javascript, ActiveX, VRML, Push, channel,
push channel, applet, directory, news, community, developer, internet,
intranet, java, java applet, J++, javabeans, java products, tools, java
tools, JDK, java development kit, java development environment, JIT,
JavaPlan, enterprise tools, JVM, Java Virtual Machine, Java resources, API,
browser, java documentation, CDF, Common Desktop Format, RDF, Resource
Description Framework, Netcaster, Netcast, Castanet, meta-language, metadata,
solaris, Solaris, SUN, CGI, Perl, Oracle, database, network, Netscape API,
Apache, apache, SSL, mSQL, Netscape, Fasttrack, FastTrack,
industry standard, ActiveX bridge, web, internet, site, site
design, microsoft, active server pages, asp, iis, nt, win95, 95, html, cgi,
frontpage, business, corporate, vbscript, javascript, activex, isapi,
database, access, sql, server, www, 3.0, 3.01, 3.02, 3.03, 3.04, 4.0,
4.0b2, 4.01, 4.03, 4.04, connection, online, commerce, publisher,
publishing, publish, webmaster, dynamic html, dhtml, windows 98, netscape,
netscape software, shareware, magazines, jobs, japan, free, freeware, free
stuff">
<META NAME="description" CONTENT="Developer.com is the leading online
service for developers. It includes Gamelan, the official 
directory for Java, as well
as news, information, tutorials, and directories for other Internet technologies
including ActiveX, JavaScript, perl, VRML, Java Beans, push technologies, and
other Internet and intranet technologies. Developer.com is also the home of
Developer Direct, the Professional Developer's Store, where developers can
purchase and download thousands of Web, authoring and other development
products at some of today's lowest prices.">
<META NAME="distribution" CONTENT="global">
<META NAME="resource-type" CONTENT="document">
<META NAME="language" CONTENT="en">

</HEAD>
<BODY BACKGROUND="/images/curve_r-wide.gif" BGCOLOR="#FFFFFF" TEXT="#000000" 
LINK="#DD0000" VLINK="#999999" ALINK="#FF0000">

<TABLE>
<TR><TD VALIGN=TOP WIDTH=120>
<A HREF="/" >
<IMG SRC="/images/masthead_r.gif" WIDTH="100" HEIGHT="78" BORDER="0"
ALT="Developer.com Logo"></a>
</TD><TD>
<a target="resource window" href="http://adserver.developer.com/cgi-bin/accipiter/adclick.exe/AREA=DCBAN.REF/DT=null">
<img src="http://adserver.developer.com/cgi-bin/accipiter/adserver.exe/AREA=DCBAN.REF/DT=null" HEIGHT="60" WIDTH="468" ALT="Click here to support our advertisers"><BR><CENTER>Click here to support our advertisers</CENTER></a>
</TD></TR>
</TABLE>
<!--outer table--><TABLE>
<!--outer table--><TR>
<!--outer table--><TD VALIGN="TOP">

<!--navbar info -->

<table><tr><td>

<A HREF="http://www.developerdirect.com/" >
<IMG SRC="/images/button_s.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><b>SHOPPING</b></font></a>

</td></tr><tr><td>

<A HREF="/community/jobs/c_jobs.html">
<IMG SRC="/images/button_d.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><B>JOB BANK</B></font></a>

</td></tr><tr><td>

<A HREF="http://www.classifieds2000.com/cgi-cls/display.exe?Developer+computer+searchcomputercategories">
<IMG SRC="/images/button_d.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><B>CLASSIFIEDS</B></font></a>

</td></tr><tr><td>

<A HREF="/directories/directories.html">
<IMG SRC="/images/button_d.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><B>DIRECTORIES</B></font></a>

</td></tr><tr><td>

<A HREF="/reference/">
<IMG SRC="/images/button_r.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><B>REFERENCE</B></font></a>

<br>

<a href="/reference/r_library.html">
<FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000">
Online Library</a></font>

</td></tr><tr><td>

<A HREF="/classroom/">
<IMG SRC="/images/button_r.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><B>LEARNING CENTER</B></font></a>

</td></tr><tr><td>

<A HREF="/journal/">
<IMG SRC="/images/button_n.gif" width="15" height="11" BORDER="0"><B><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000">JOURNAL</font></B></a>

</td></tr><tr><td>

<A HREF="/news/">
<IMG SRC="/images/button_d.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><b>NEWS CENTRAL</b></font></a>

</td></tr><tr><td>

<A HREF="/downloads/">
<IMG SRC="/images/button_d.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><b>DOWNLOADS</b></font></a>

</td></tr><tr><td>

<A HREF="/community/" >
<IMG SRC="/images/button_c.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><B>COMMUNITY</B></font></a>

</td></tr><tr><td>

<A HREF="/calendar/">
<IMG SRC="/images/button_d.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><b>CALENDAR</b></font></a>

</td></tr><tr><td>

<A HREF="/about/">
<IMG SRC="/images/button_a.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><b>ABOUT US</b></a></font>

</td></tr></table>
<table>
<tr>
<td>
<form action="/subscribe/list.cgi" method=post >
<img src="/images/rule.gif" width="100" height="2"><br>
<B><FONT FACE="Arial, Helvetica" SIZE="-1">Journal:</b></font><br>
<input name='email' value='your e-mail' size="11">
<input type='hidden'  name='state' value='Subscribe'>
</td>
</tr>
<tr>
<td>
<input type='submit' value='Subscribe'>
<br>
<font size="-1">Get the weekly email highlights from the most popular journal for developers!
<br>
<a href="http://www.developer.com/subscribe.html">Current issue</a>
<img src="/images/rule.gif" width="100" height="2">
<input type='hidden' name='name' value='New Subscriber'>
</FORM>
</td>
</tr>
</table>
<!--/navbar-->
<font size="-1">
<A HREF="http://www.developer.com">developer.com</a><BR>
<A HREF="http://www.developerdirect.com">developerdirect.com</a><BR>
<A HREF="http://www.htmlgoodies.com">htmlgoodies.com</a><BR>
<A HREF="http://www.javagoodies.com">javagoodies.com</a><br>
<A HREF="http://www.jars.com">jars.com</a><BR>
<a href="http://www.intranetjournal.com">intranetjournal.com</a><br>
<a href="http://www.javascripts.com">javascripts.com</a><br>
</font>
<!--outer table--></TD>

<!--outer table--><TD VALIGN="TOP">
<BLOCKQUOTE>
<P>

<img src="/images/header_r.gif" width="440" height="50">
<P>
<MAP NAME ="header_r2.gif.map">

<AREA SHAPE ="RECT"
      HREF ="/reference/author.html"
      COORDS ="361,0,440,29">
<AREA SHAPE ="RECT"
      HREF ="/reference/basic.html"
      COORDS ="254,0,360,29">
<AREA SHAPE ="RECT"
      HREF ="/reference/help.html"
      COORDS ="183,0,251,29">
<AREA SHAPE ="RECT"
      HREF ="/reference/cool.html"
      COORDS ="100,0,181,29">
<AREA SHAPE ="RECT"
      HREF ="/reference/mybook.html"
      COORDS ="0,0,100,29">
</MAP>

<MAP NAME ="header_r1.gif.map">

<AREA SHAPE ="RECT"
      HREF ="/reference/personalize.html"
      COORDS ="339,0,439,29">
</MAP>

<p>


<font face="Arial,Helvetica" size="-1" color="#006666"><A HREF="/reference/r_library.html"><B>All Categories</A> :</B>
<b><A HREF="/reference/r_java.html">Java</A></b></font><p>

   <META>
<H1><FONT COLOR=#FF0000>Chapter 28</FONT></H1>
<H1><B><FONT SIZE=5 COLOR=#FF0000>Content Handlers</FONT></B>
</H1>
<P>
<HR WIDTH="100%"></P>
<P>
<H3 ALIGN=CENTER><FONT COLOR="#000000"><FONT SIZE=+2>CONTENTS<A NAME="CONTENTS"></A>
</FONT></FONT></H3>
<UL>
<LI><A HREF="#UsingContentHandlers" >Using Content Handlers</A>
<LI><A HREF="#MultipurposeInternetMailExtensionsM" >Multipurpose Internet Mail Extensions (MIME)</A>
<LI><A HREF="#DevelopingaContentHandler" >Developing a Content Handler</A>
<LI><A HREF="#ASimpleContentHandler" >A Simple Content Handler</A>
<UL>
<LI><A HREF="#TheGridContentHandlerClass" >The GridContentHandler Class</A>
<LI><A HREF="#TheGetGridAppProgram" >The GetGridApp Program</A>
</UL>
<LI><A HREF="#Summary" >Summary</A>
</UL>
<HR>
<P>
In this chapter you'll learn how to write content handlers to
support the retrieval of objects by Web browsers. You'll also
learn about the multipurpose Internet mail extensions (MIMEs)
and how they are used to identify the type of objects that are
provided by Web servers. You'll then develop a simple content
handler and integrate it with a Web client program. This chapter
builds on the material presented in <A HREF="ch17.htm" >Chapter 17</A>,
&quot;Network Programming with the <TT><FONT FACE="Courier">java.net</FONT></TT>
Package.&quot;
<H2><A NAME="UsingContentHandlers"><FONT SIZE=5 COLOR=#FF0000>Using
Content Handlers</FONT></A></H2>
<P>
If you have been extensively involved with using your Web browser,
you probably have encountered a number of external viewers or
plug-ins that are used to supplement the capabilities provided
by your browser. These external viewers are used to display and
process files that are not normally supported by browsers.
<P>
Java supports additional internal or external viewers through
the content handler mechanism. Content handlers are used to retrieve
objects via an <TT><FONT FACE="Courier">URLConnection</FONT></TT>
object.
<P>
Content handlers are implemented as subclasses of the <TT><FONT FACE="Courier">ContentHandler</FONT></TT>
class. A content handler is only required to implement a single
method-the <TT><FONT FACE="Courier">getContent()</FONT></TT> method
that overrides the method provided by the <TT><FONT FACE="Courier">ContentHandler</FONT></TT>
class. This method takes an <TT><FONT FACE="Courier">URLConnection</FONT></TT>
object as a parameter, and returns an object of a specific MIME
type. You'll learn about MIME types in the following section of
this chapter.
<P>
The purpose of a content handler is to extract an object of a
given MIME type from an <TT><FONT FACE="Courier">URLConnection</FONT></TT>
object's input stream. Content handlers are not directly instantiated
or accessed. The <TT><FONT FACE="Courier">getContent()</FONT></TT>
methods of the <TT><FONT FACE="Courier">URL</FONT></TT> and <TT><FONT FACE="Courier">URLConnection</FONT></TT>
classes cause content handlers to be created and invoked to perform
their processing.
<P>
A content handler is associated with a specific MIME type through
the use of the <TT><FONT FACE="Courier">ContentHandlerFactory</FONT></TT>
interface. A class that implements the <TT><FONT FACE="Courier">ContentHandlerFactory</FONT></TT>
interface must implement the <TT><FONT FACE="Courier">createContentHandler()</FONT></TT>
method. This method returns a <TT><FONT FACE="Courier">ContentHandler</FONT></TT>
object to be used for a specific MIME type. A <TT><FONT FACE="Courier">ContentHandlerFactory</FONT></TT>
object is installed using the static <TT><FONT FACE="Courier">setContentHandlerFactory()</FONT></TT>
method of the <TT><FONT FACE="Courier">URLConnection</FONT></TT>
class.
<H2><A NAME="MultipurposeInternetMailExtensionsM"><FONT SIZE=5 COLOR=#FF0000>Multipurpose
Internet Mail Extensions (MIME)</FONT></A></H2>
<P>
Content handlers are associated with specific MIME types. Many
Internet programs, including e-mail clients, Web browsers, and
Web servers, use the multipurpose Internet mail extensions to
associate an object type with a file. These object types include
text, multimedia files, and application-specific files. MIME types
consist of a type and a subtype. Examples are text/html, text/plain,
image/gif, and image/jpeg, where text and image are the types
and html, plain, gif, and jpeg are the subtypes. The <TT><FONT FACE="Courier">URL</FONT></TT>
classes provided by Java support the processing of each of these
types; however, the number of MIME type/subtype combinations is
large and growing. Content handlers are used to support MIME type
processing.
<P>
Web servers map MIME types to the files they serve using the files'
extensions. For example, files with the <TT><FONT FACE="Courier">.htm</FONT></TT>
and <TT><FONT FACE="Courier">.html</FONT></TT> extensions are
mapped to the text/html MIME type/subtype. Files with the <TT><FONT FACE="Courier">.gif</FONT></TT>
and <TT><FONT FACE="Courier">.jpg</FONT></TT> extensions are mapped
to image/gif and image/jpeg. The MIME type of a file is sent to
Web browsers by Web servers when the server sends the designated
files to the browsers in response to browser requests.
<H2><A NAME="DevelopingaContentHandler"><FONT SIZE=5 COLOR=#FF0000>Developing
a Content Handler</FONT></A></H2>
<P>
The first step to implementing a content handler is to define
the class of the object to be extracted by the content handler.
The content handler is then defined as a subclass of the <TT><FONT FACE="Courier">ContentHandler</FONT></TT>
class. The <TT><FONT FACE="Courier">getContent()</FONT></TT> method
of the content handler performs the extraction of objects of a
specific MIME type from the input stream associated with an <TT><FONT FACE="Courier">URLConnection</FONT></TT>
object.
<P>
A content handler is associated with a specific MIME type through
the use of a <TT><FONT FACE="Courier">ContentHandlerFactory</FONT></TT>
object. The <TT><FONT FACE="Courier">createContentHandler()</FONT></TT>
method of the <TT><FONT FACE="Courier">ContentHandlerFactory</FONT></TT>
interface is used to return a content handler for a specific MIME
type.
<P>
Finally, the <TT><FONT FACE="Courier">setContentHandlerFactory()</FONT></TT>
method of the <TT><FONT FACE="Courier">URLConnection</FONT></TT>
class is used to set a <TT><FONT FACE="Courier">ContentHandlerFactory</FONT></TT>
as the default <TT><FONT FACE="Courier">ContentHandlerFactory</FONT></TT>
to be used with all MIME types.
<H2><A NAME="ASimpleContentHandler"><FONT SIZE=5 COLOR=#FF0000>A
Simple Content Handler</FONT></A></H2>
<P>
This section presents an example of implementing a simple content
handler. A bogus MIME type, text/cg, is created to implement objects
of the character grid type. A <I>character grid type</I> is a
two-dimensional grid made up of a single character. An example
follows:<P>
<CENTER>
<P>
<TABLE>
<TR><TD WIDTH=10><CENTER>O</CENTER></TD><TD WIDTH=10></TD><TD WIDTH=10>
</TD><TD WIDTH=10></TD><TD WIDTH=10><CENTER>O</CENTER></TD></TR>
<TR><TD WIDTH=10></TD><TD WIDTH=10><CENTER>O</CENTER></TD><TD WIDTH=10>
</TD><TD WIDTH=10><CENTER>O</CENTER></TD><TD WIDTH=10></TD></TR>
<TR><TD WIDTH=10></TD><TD WIDTH=10></TD><TD WIDTH=10><CENTER>O</CENTER>
</TD><TD WIDTH=10></TD><TD WIDTH=10></TD></TR>
<TR><TD WIDTH=10></TD><TD WIDTH=10><CENTER>O</CENTER></TD><TD WIDTH=10>
</TD><TD WIDTH=10><CENTER>O</CENTER></TD><TD WIDTH=10></TD></TR>
<TR><TD WIDTH=10><CENTER>O</CENTER></TD><TD WIDTH=10></TD><TD WIDTH=10>
</TD><TD WIDTH=10></TD><TD WIDTH=10><CENTER>O</CENTER></TD></TR>
</TABLE>
</CENTER>
<P>
<P>
This example is a character grid object that is five character
positions wide and five character positions high. It uses the
<TT><FONT FACE="Courier">O</FONT></TT> character to draw the grid.
The grid is specified by a boolean array that identifies whether
the drawing character is to be displayed.
<P>
This particular character grid is represented using the following
text string:
<P>
55O1000101010001000101010001
<P>
The first character (<TT><FONT FACE="Courier">5</FONT></TT>) represents
the grid's height. The second character (also <TT><FONT FACE="Courier">5</FONT></TT>)
represents the grid's width. The third character is the grid's
drawing character. The remaining characters specify whether the
draw character should be displayed at a particular grid position.
A <TT><FONT FACE="Courier">1</FONT></TT> signifies that the draw
character should be displayed, and a <TT><FONT FACE="Courier">0</FONT></TT>
signifies that it should not be displayed. The array is arranged
in row order beginning with the top of the grid.
<P>
The definition of the <TT><FONT FACE="Courier">CharGrid</FONT></TT>
class is shown in Listing 28.1.
<P>
<HR>
<BLOCKQUOTE>
<B>Listing 28.1. The source code for the </B><TT><B><FONT FACE="Courier">CharGrid</FONT></B></TT><B>
class.</B><P>
<TT><FONT FACE="Courier">public class CharGrid {<BR>
&nbsp;public int height;<BR>
&nbsp;public int width;<BR>
&nbsp;public char ch;<BR>
&nbsp;public boolean values[][];<BR>
&nbsp;public CharGrid(int h,int w,char c,boolean vals[][]) {<BR>
&nbsp;&nbsp;height = h;<BR>
&nbsp;&nbsp;width = w;<BR>
&nbsp;&nbsp;ch = c;<BR>
&nbsp;&nbsp;values = vals;<BR>
&nbsp;}<BR>
}</FONT></TT>
</BLOCKQUOTE>
<HR>
<H3><A NAME="TheGridContentHandlerClass">The <TT><FONT SIZE=4 FACE="Courier">GridContentHandler</FONT></TT><FONT SIZE=4>
Class</FONT></A></H3>
<P>
The <TT><FONT FACE="Courier">GridContentHandler</FONT></TT> class
is used to extract <TT><FONT FACE="Courier">CharGrid</FONT></TT>
objects from an <TT><FONT FACE="Courier">URLConnection</FONT></TT>.
Its source code is shown in Listing 28.2.
<P>
<HR>
<BLOCKQUOTE>
<B>Listing 28.2. The source code for the </B><TT><B><FONT FACE="Courier">GridContentHandler</FONT></B></TT><B>
class.</B><P>
<TT><FONT FACE="Courier">import java.net.*;<BR>
import java.io.*;<BR>
<BR>
public class GridContentHandler extends ContentHandler {<BR>
&nbsp;&nbsp;public Object getContent(URLConnection urlc) throws
IOException {<BR>
&nbsp;&nbsp;&nbsp;DataInputStream in = new DataInputStream(urlc.getInputStream());
<BR>
&nbsp;&nbsp;&nbsp;int height = (int) in.readByte() - 48;<BR>
&nbsp;&nbsp;&nbsp;int width = (int) in.readByte() - 48;<BR>
&nbsp;&nbsp;&nbsp;char ch = (char) in.readByte();<BR>
&nbsp;&nbsp;&nbsp;boolean values[][] = new boolean[height][width];
<BR>
&nbsp;&nbsp;&nbsp;for(int i=0;i&lt;height;++i) {<BR>
&nbsp;&nbsp;&nbsp;&nbsp;for(int j=0;j&lt;width;++j) {<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;byte b = in.readByte();<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(b == 48) values[i][j] = false;
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else values[i][j] = true;<BR>
&nbsp;&nbsp;&nbsp;}<BR>
&nbsp;&nbsp;}<BR>
&nbsp;&nbsp;in.close();<BR>
&nbsp;&nbsp;return new CharGrid(height,width,ch,values);<BR>
&nbsp;}<BR>
}</FONT></TT>
</BLOCKQUOTE>
<HR>
<P>
The <TT><FONT FACE="Courier">GridContentHandler</FONT></TT> class
extends the <TT><FONT FACE="Courier">ContentHandler</FONT></TT>
class and provides a single method. The <TT><FONT FACE="Courier">getContent()</FONT></TT>
method takes an <TT><FONT FACE="Courier">URLConnection</FONT></TT>
object as a parameter and returns an object of the <TT><FONT FACE="Courier">Object</FONT></TT>
class. It also throws the <TT><FONT FACE="Courier">IOException</FONT></TT>
exception.
<P>
The <TT><FONT FACE="Courier">getContent()</FONT></TT> method creates
an object of class <TT><FONT FACE="Courier">DataInputStream</FONT></TT>
and assigns it to the <TT><FONT FACE="Courier">in</FONT></TT>
variable. It uses the <TT><FONT FACE="Courier">getInputStream()</FONT></TT>
method of the <TT><FONT FACE="Courier">URLConnection</FONT></TT>
class to access the input stream associated with an URL connection.
<P>
The height, width, and draw character of the <TT><FONT FACE="Courier">CharGrid</FONT></TT>
object are read one byte at a time from the input stream. The
<TT><FONT FACE="Courier">values[][]</FONT></TT> array is then
read and converted to a boolean representation. The <TT><FONT FACE="Courier">CharGrid</FONT></TT>
object is then created from the extracted values and returned.
<H3><A NAME="TheGetGridAppProgram">The <TT><FONT SIZE=4 FACE="Courier">GetGridApp</FONT></TT><FONT SIZE=4>
Program</FONT></A></H3>
<P>
The <TT><FONT FACE="Courier">GetGridApp</FONT></TT> program illustrates
the use of content handlers. It retrieves an object of the <TT><FONT FACE="Courier">CharGrid</FONT></TT>
type from my Web sever. I use the NCSA HTTPD server on a Linux
system. I've set up the server's MIME type file to recognize files
with the <TT><FONT FACE="Courier">.cg</FONT></TT> extension as
text/cg.
<P>
The source code of the <TT><FONT FACE="Courier">GetGridApp</FONT></TT>
program is shown in Listing 28.3.
<P>
<HR>
<BLOCKQUOTE>
<B>Listing 28.3. The source code for the </B><TT><B><FONT FACE="Courier">GetGridApp</FONT></B></TT><B>
program.</B><P>
<TT><FONT FACE="Courier">import java.net.*;<BR>
import java.io.*;<BR>
<BR>
public class GetGridApp {<BR>
&nbsp;public static void main(String args[]){<BR>
&nbsp;&nbsp;try{<BR>
&nbsp;&nbsp;&nbsp;GridFactory gridFactory = new GridFactory();
<BR>
&nbsp;&nbsp;&nbsp;URLConnection.setContentHandlerFactory(gridFactory);
<BR>
&nbsp;&nbsp;&nbsp;if(args.length!=1) error(&quot;Usage: java GetGridApp
URL&quot;);<BR>
&nbsp;&nbsp;&nbsp;System.out.println(&quot;Fetching URL: &quot;+args[0]);
<BR>
&nbsp;&nbsp;&nbsp;URL url = new URL(args[0]);<BR>
&nbsp;&nbsp;&nbsp;CharGrid cg = (CharGrid) url.getContent();<BR>
&nbsp;&nbsp;&nbsp;System.out.println(&quot;height: &quot;+cg.height);
<BR>
&nbsp;&nbsp;&nbsp;System.out.println(&quot;width: &quot;+cg.width);
<BR>
&nbsp;&nbsp;&nbsp;System.out.println(&quot;char: &quot;+cg.ch);
<BR>
&nbsp;&nbsp;&nbsp;for(int i=0;i&lt;cg.height;++i) {<BR>
&nbsp;&nbsp;&nbsp;&nbsp;for(int j=0;j&lt;cg.width;++j) {<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(cg.values[i][j]) System.out.print(cg.ch);
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else System.out.print(&quot; &quot;);
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;}<BR>
&nbsp;&nbsp;&nbsp;&nbsp;System.out.println();<BR>
&nbsp;&nbsp;&nbsp;}<BR>
&nbsp;&nbsp;}catch (MalformedURLException ex){<BR>
&nbsp;&nbsp;&nbsp;error(&quot;Bad URL&quot;);<BR>
&nbsp;&nbsp;}catch (IOException ex){<BR>
&nbsp;&nbsp;&nbsp;error(&quot;IOException occurred.&quot;);<BR>
&nbsp;&nbsp;}<BR>
&nbsp;}<BR>
&nbsp;public static void error(String s){<BR>
&nbsp;&nbsp;System.out.println(s);<BR>
&nbsp;&nbsp;System.exit(1);<BR>
&nbsp;}<BR>
}<BR>
class GridFactory implements ContentHandlerFactory {<BR>
&nbsp;public GridFactory() {<BR>
&nbsp;}<BR>
&nbsp;public ContentHandler createContentHandler(String mimeType)
{<BR>
&nbsp;&nbsp;if(mimeType.equals(&quot;text/cg&quot;)) {<BR>
&nbsp;&nbsp;&nbsp;System.out.println(&quot;Requested mime type:
&quot;+mimeType);<BR>
&nbsp;&nbsp;&nbsp;return new GridContentHandler();<BR>
&nbsp;&nbsp;}<BR>
&nbsp;&nbsp;return null;<BR>
&nbsp;}<BR>
}</FONT></TT>
</BLOCKQUOTE>
<HR>
<P>
When you invoke the <TT><FONT FACE="Courier">GetGridApp</FONT></TT>
program, provide it with the URL <TT><A TARGET="resource window" HREF="http://www.jaworski.com/java/chargrid.cg">http://www.jaworski.com/java/chargrid.cg</A></TT>
as a parameter.
<P>
The <TT><FONT FACE="Courier">GetGridApp</FONT></TT> program's
output is as follows:
<BLOCKQUOTE>
<TT>C:\java\jdg\ch28&gt;java GetGridApp <A TARGET="resource window" HREF="http://www.jaworski.com/java/chargrid.cg">http://www.jaworski.com/java/chargrid.cg</A>
<BR>
Fetching URL: <A TARGET="resource window" HREF="http://www.jaworski.com/java/chargrid.cg">http://www.jaworski.com/java/chargrid.cg</A><BR>
Requested mime type: text/cg<BR>
height: 5<BR>
width: 5<BR>
char: j<BR>
jjjjj<BR>
&nbsp;&nbsp;j<BR>
&nbsp;&nbsp;j<BR>
j j<BR>
&nbsp;jj<BR>
<BR>
C:\java\jdg\ch28&gt;</FONT></TT>
</BLOCKQUOTE>
<P>
This connects to my Web server, retrieves the <TT><FONT FACE="Courier">chargrid.cg</FONT></TT>
file, extracts the <TT><FONT FACE="Courier">CharGrid</FONT></TT>
object contained in the file, and displays it on the console window.
The character grid object displays a grid of <TT><FONT FACE="Courier">j</FONT></TT>
characters.
<P>
The <TT><FONT FACE="Courier">main()</FONT></TT> method creates
an object of the <TT><FONT FACE="Courier">GridFactory</FONT></TT>
class, which implements the <TT><FONT FACE="Courier">ContentHandlerFactory</FONT></TT>
interface. It then sets the object as the default content handler.
An <TT><FONT FACE="Courier">URL</FONT></TT> object is created
using the URL string passed as the program's parameter. The <TT><FONT FACE="Courier">getContent()</FONT></TT>
method of the <TT><FONT FACE="Courier">URL</FONT></TT> class is
then used to extract the <TT><FONT FACE="Courier">CharGrid</FONT></TT>
object from the URL. The <TT><FONT FACE="Courier">getContent()</FONT></TT>
method results in the <TT><FONT FACE="Courier">GridFactory</FONT></TT>
object assigned to the <TT><FONT FACE="Courier">gridFactory</FONT></TT>
variable being invoked to retrieve an appropriate content handler.
An object of class <TT><FONT FACE="Courier">GridContentHandler</FONT></TT>
is returned and its <TT><FONT FACE="Courier">getContent()</FONT></TT>
method is invoked to extract the <TT><FONT FACE="Courier">CharGrid</FONT></TT>
object. This is performed behind the scene as the result of invoking
the <TT><FONT FACE="Courier">URL</FONT></TT> class's <TT><FONT FACE="Courier">getContent()</FONT></TT>
method. The <TT><FONT FACE="Courier">CharGrid</FONT></TT> object
is then displayed.
<P>
The <TT><FONT FACE="Courier">GetGridApp</FONT></TT> program defines
the <TT><FONT FACE="Courier">GridFactory</FONT></TT> class as
a <TT><FONT FACE="Courier">ContentHandlerFactory</FONT></TT>.
It implements the <TT><FONT FACE="Courier">createContentHandler()</FONT></TT>
method and checks to see if the MIME type passed to it is text/cg.
If it is not, the <TT><FONT FACE="Courier">null</FONT></TT> value
is returned to signal that the Java-supplied content handler should
be used. If the MIME type is text/cg, the requested MIME type
is displayed, and a <TT><FONT FACE="Courier">GridContentHandler</FONT></TT>
object is returned.
<H2><A NAME="Summary"><FONT SIZE=5 COLOR=#FF0000>Summary</FONT></A>
</H2>
<P>
In this chapter you have learned how to write content handlers
to support the retrieval of objects by Web browsers. You have
learned about the multipurpose Internet mail extensions and how
they are used to identify the type of objects that are provided
by Web servers. You have developed the <TT><FONT FACE="Courier">GridContentHandler</FONT></TT>
class and integrated it with the <TT><FONT FACE="Courier">GetGridApp</FONT></TT>
program. <A HREF="ch29.htm" >Chapter 29</A>, &quot;Protocol Handlers,&quot;
shows you how to integrate custom protocol handlers into your
Web-based applications.
<P>
<HR WIDTH="100%"></P>

</P></CENTER>

<P>
<HR WIDTH="100%"></P>

<!-- reference library footer #1-->
</CENTER>
<IMG SRC="/images/rule.gif" WIDTH="460" HEIGHT="5" VSPACE="5"
ALT="Ruler image"><br>

<FONT SIZE="-1">

Contact <a href="mailto:reference@developer.com">
reference@developer.com</a> with questions or comments.<br>


<a href="/legal/">
Copyright 1998</a> 
<a href="http://www.earthweb.com" target="_top">
EarthWeb Inc.</a>,  All rights reserved.<BR>
PLEASE READ THE <a href="/reference/usage.html">ACCEPTABLE USAGE STATEMENT</a>.
<BR>
Copyright 1998 Macmillan Computer Publishing. All rights reserved.
</FONT>
</BLOCKQUOTE>


<!--outer table--><TD VALIGN="TOP">

<!--right side ads -->
<a target="resource window" href="http://adserver.developer.com/cgi-bin/accipiter/adclick.exe/AREA=DCAD1.REF" alt="Click here for more info"><img src="http://adserver.developer.com/cgi-bin/accipiter/adserver.exe/AREA=DCAD1.REF" alt="Click here for more info" height="88" width="88" border="0"></a>
<P>
<a target="resource window" href="http://adserver.developer.com/cgi-bin/accipiter/adclick.exe/AREA=DCAD2.REF" alt="Click here for more info"><img src="http://adserver.developer.com/cgi-bin/accipiter/adserver.exe/AREA=DCAD2.REF" alt="Click here for more info" height="88" width="88" border="0"></a>
<P>



</td>
</tr>
</table>
</BODY>
</HTML>



