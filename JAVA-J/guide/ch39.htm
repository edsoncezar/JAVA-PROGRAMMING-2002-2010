<HTML>
<HEAD>
<TITLE>developer.com - Reference</TITLE>

<META NAME="Author" CONTENT="developer.com">
<META NAME="Keywords" CONTENT="javascript, ActiveX, VRML, Push, channel,
push channel, applet, directory, news, community, developer, internet,
intranet, java, java applet, J++, javabeans, java products, tools, java
tools, JDK, java development kit, java development environment, JIT,
JavaPlan, enterprise tools, JVM, Java Virtual Machine, Java resources, API,
browser, java documentation, CDF, Common Desktop Format, RDF, Resource
Description Framework, Netcaster, Netcast, Castanet, meta-language, metadata,
solaris, Solaris, SUN, CGI, Perl, Oracle, database, network, Netscape API,
Apache, apache, SSL, mSQL, Netscape, Fasttrack, FastTrack,
industry standard, ActiveX bridge, web, internet, site, site
design, microsoft, active server pages, asp, iis, nt, win95, 95, html, cgi,
frontpage, business, corporate, vbscript, javascript, activex, isapi,
database, access, sql, server, www, 3.0, 3.01, 3.02, 3.03, 3.04, 4.0,
4.0b2, 4.01, 4.03, 4.04, connection, online, commerce, publisher,
publishing, publish, webmaster, dynamic html, dhtml, windows 98, netscape,
netscape software, shareware, magazines, jobs, japan, free, freeware, free
stuff">
<META NAME="description" CONTENT="Developer.com is the leading online
service for developers. It includes Gamelan, the official 
directory for Java, as well
as news, information, tutorials, and directories for other Internet technologies
including ActiveX, JavaScript, perl, VRML, Java Beans, push technologies, and
other Internet and intranet technologies. Developer.com is also the home of
Developer Direct, the Professional Developer's Store, where developers can
purchase and download thousands of Web, authoring and other development
products at some of today's lowest prices.">
<META NAME="distribution" CONTENT="global">
<META NAME="resource-type" CONTENT="document">
<META NAME="language" CONTENT="en">

</HEAD>
<BODY BACKGROUND="/images/curve_r-wide.gif" BGCOLOR="#FFFFFF" TEXT="#000000" 
LINK="#DD0000" VLINK="#999999" ALINK="#FF0000">

<TABLE>
<TR><TD VALIGN=TOP WIDTH=120>
<A HREF="/" >
<IMG SRC="/images/masthead_r.gif" WIDTH="100" HEIGHT="78" BORDER="0"
ALT="Developer.com Logo"></a>
</TD><TD>
<a target="resource window" href="http://adserver.developer.com/cgi-bin/accipiter/adclick.exe/AREA=DCBAN.REF/DT=null">
<img src="http://adserver.developer.com/cgi-bin/accipiter/adserver.exe/AREA=DCBAN.REF/DT=null" HEIGHT="60" WIDTH="468" ALT="Click here to support our advertisers"><BR><CENTER>Click here to support our advertisers</CENTER></a>
</TD></TR>
</TABLE>
<!--outer table--><TABLE>
<!--outer table--><TR>
<!--outer table--><TD VALIGN="TOP">

<!--navbar info -->

<table><tr><td>

<A HREF="http://www.developerdirect.com/" >
<IMG SRC="/images/button_s.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><b>SHOPPING</b></font></a>

</td></tr><tr><td>

<A HREF="/community/jobs/c_jobs.html">
<IMG SRC="/images/button_d.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><B>JOB BANK</B></font></a>

</td></tr><tr><td>

<A HREF="http://www.classifieds2000.com/cgi-cls/display.exe?Developer+computer+searchcomputercategories">
<IMG SRC="/images/button_d.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><B>CLASSIFIEDS</B></font></a>

</td></tr><tr><td>

<A HREF="/directories/directories.html">
<IMG SRC="/images/button_d.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><B>DIRECTORIES</B></font></a>

</td></tr><tr><td>

<A HREF="/reference/">
<IMG SRC="/images/button_r.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><B>REFERENCE</B></font></a>

<br>

<a href="/reference/r_library.html">
<FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000">
Online Library</a></font>

</td></tr><tr><td>

<A HREF="/classroom/">
<IMG SRC="/images/button_r.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><B>LEARNING CENTER</B></font></a>

</td></tr><tr><td>

<A HREF="/journal/">
<IMG SRC="/images/button_n.gif" width="15" height="11" BORDER="0"><B><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000">JOURNAL</font></B></a>

</td></tr><tr><td>

<A HREF="/news/">
<IMG SRC="/images/button_d.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><b>NEWS CENTRAL</b></font></a>

</td></tr><tr><td>

<A HREF="/downloads/">
<IMG SRC="/images/button_d.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><b>DOWNLOADS</b></font></a>

</td></tr><tr><td>

<A HREF="/community/" >
<IMG SRC="/images/button_c.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><B>COMMUNITY</B></font></a>

</td></tr><tr><td>

<A HREF="/calendar/">
<IMG SRC="/images/button_d.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><b>CALENDAR</b></font></a>

</td></tr><tr><td>

<A HREF="/about/">
<IMG SRC="/images/button_a.gif" width="15" height="11" BORDER="0"><FONT FACE="Arial, Helvetica" SIZE="-1" color="#000000"><b>ABOUT US</b></a></font>

</td></tr></table>
<table>
<tr>
<td>
<form action="/subscribe/list.cgi" method=post >
<img src="/images/rule.gif" width="100" height="2"><br>
<B><FONT FACE="Arial, Helvetica" SIZE="-1">Journal:</b></font><br>
<input name='email' value='your e-mail' size="11">
<input type='hidden'  name='state' value='Subscribe'>
</td>
</tr>
<tr>
<td>
<input type='submit' value='Subscribe'>
<br>
<font size="-1">Get the weekly email highlights from the most popular journal for developers!
<br>
<a href="http://www.developer.com/subscribe.html">Current issue</a>
<img src="/images/rule.gif" width="100" height="2">
<input type='hidden' name='name' value='New Subscriber'>
</FORM>
</td>
</tr>
</table>
<!--/navbar-->
<font size="-1">
<A HREF="http://www.developer.com">developer.com</a><BR>
<A HREF="http://www.developerdirect.com">developerdirect.com</a><BR>
<A HREF="http://www.htmlgoodies.com">htmlgoodies.com</a><BR>
<A HREF="http://www.javagoodies.com">javagoodies.com</a><br>
<A HREF="http://www.jars.com">jars.com</a><BR>
<a href="http://www.intranetjournal.com">intranetjournal.com</a><br>
<a href="http://www.javascripts.com">javascripts.com</a><br>
</font>
<!--outer table--></TD>

<!--outer table--><TD VALIGN="TOP">
<BLOCKQUOTE>
<P>

<img src="/images/header_r.gif" width="440" height="50">
<P>
<MAP NAME ="header_r2.gif.map">

<AREA SHAPE ="RECT"
      HREF ="/reference/author.html"
      COORDS ="361,0,440,29">
<AREA SHAPE ="RECT"
      HREF ="/reference/basic.html"
      COORDS ="254,0,360,29">
<AREA SHAPE ="RECT"
      HREF ="/reference/help.html"
      COORDS ="183,0,251,29">
<AREA SHAPE ="RECT"
      HREF ="/reference/cool.html"
      COORDS ="100,0,181,29">
<AREA SHAPE ="RECT"
      HREF ="/reference/mybook.html"
      COORDS ="0,0,100,29">
</MAP>

<MAP NAME ="header_r1.gif.map">

<AREA SHAPE ="RECT"
      HREF ="/reference/personalize.html"
      COORDS ="339,0,439,29">
</MAP>

<p>


<font face="Arial,Helvetica" size="-1" color="#006666"><A HREF="/reference/r_library.html"><B>All Categories</A> :</B>
<b><A HREF="/reference/r_java.html">Java</A></b></font><p>

   <META>
<H1><FONT COLOR=#FF0000>Chapter 39</FONT></H1>
<H1><B><FONT SIZE=5 COLOR=#FF0000>Java Security</FONT></B>
</H1>
<P>
<HR WIDTH="100%"></P>
<P>
<H3 ALIGN=CENTER><FONT COLOR="#000000"><FONT SIZE=+2>CONTENTS<A NAME="CONTENTS"></A>
</FONT></FONT></H3>
<UL>
<LI><A HREF="#ThreatstoJavaSecurity" >Threats to Java Security</A>
<LI><A HREF="#JavaSecurityFeatures" >Java Security Features</A>
<UL>
<LI><A HREF="#LanguageSecurityFeatures" >Language Security Features</A>
<LI><A HREF="#CompilerSecurityFeatures" >Compiler Security Features</A>
<LI><A HREF="#RuntimeSecurityMechanisms" >Runtime Security Mechanisms</A>
</UL>
<LI><A HREF="#StayingCurrentwithJavaSecurityIssue" >Staying Current with Java Security Issues</A>
<LI><A HREF="#Summary" >Summary</A>
</UL>
<HR>
<P>
<FONT COLOR=#000000>In this chapter you'll learn about the security
of Java applets and programs. You'll learn about the threats faced
by those who use Java applets and programs and the security restrictions
placed on Java applets. You'll </FONT>cover the security features
of the Java language, compiler, and runtime environment. You'll
also explore the security mechanisms implemented by Java-enabled
browsers. When you finish this chapter, you'll be aware of the
security issues associated with Java applets and programs and
of the ways Java and Java-enabled browsers resolve these issues.
<H2><A NAME="ThreatstoJavaSecurity"><FONT SIZE=5 COLOR=#FF0000>Threats
to Java Security</FONT></A><FONT SIZE=5 COLOR=#FF0000> </FONT>
</H2>
<P>
Those who use Java applets and programs face significant security
threats. Information on their computers may be selectively altered,
destroyed, or disclosed by those who develop Java applets and
programs and those who have the ability to modify them. Damage
may result from deliberately planned attacks on your system or
from errors that are introduced into Java source or compiled code.
Although the threat associated with inadvertent errors is far
less than with malicious actions, it cannot be discounted. The
damage resulting from instances of Murphy's Law often exceeds
that of the most cunning hackers. However, this chapter examines
all security threats as if they are the result of deliberate hostile
actions. 
<P>
The threat posed by a standalone Java program is the same as any
other program that you run on your computer. When a program runs
on your behalf, it has access to your files, system capabilities,
and system resources, and can use this access to modify, delete,
or compromise sensitive data or misuse these capabilities and
resources. The program's access is limited only by the access
controls enforced by your operating system or other security software.
In most cases, these access controls are nonexistent or minimally
effective. The danger of running a standalone Java program is
the same as running any other program that you do not develop
yourself. Unless you can verify the security of the program through
rigorous analysis and testing, you are forced to trust the programs
not to cause deliberate or inadvertent damage.
<P>
The level of trust that you place in a program is usually based
on the source from which you obtained the program. You generally
place more trust in programs that you receive from well-established
software vendors than those that you download from obscure, publicly
accessible file archives. Standalone Java programs provide no
more or less security than any other programs you may encounter.
They may be written to cause the same level of damage to your
system as a program that is written in another programming language.
Because of this unfortunate fact, the security of standalone Java
programs is not explicitly considered in the remainder of this
chapter.
<P>
The threat posed by Java applets expands the threat posed by standalone
programs to the Web as a whole. Since Web pages may contain applets,
scripts, and other types of embedded programming, clicking on
a Web page is equivalent to executing a program. The increased
danger associated with applets is the lack of control that you
have over the programs you execute. Any Web page may bring an
insidious intruder into your system. You may, of course, disable
the execution of applets by your browser, but doing so eliminates
all the potential benefits of Java.
<H2><A NAME="JavaSecurityFeatures"><FONT SIZE=5 COLOR=#FF0000>Java
Security Features</FONT></A></H2>
<P>
To counter the threat posed by those who would bring harm to your
computer and to mitigate the risk associated with running applets,
the developers of Java and Java-enabled browsers have included
a powerful set of security features in the Java language, compiler,
runtime system, and Web browsers. These security features include
security mechanisms that have been specifically designed to eliminate
potential security vulnerabilities; other mechanisms, although
not intentionally designed for security purposes, encumber both
deliberate and inadvertent security threats. The following sections
describe these security features.<BR>
<P>
<CENTER><TABLE BORDERCOLOR=#000000 BORDER=1 WIDTH=80%>
<TR><TD><B>Note</B></TD></TR>
<TR><TD WIDTH=547>
<BLOCKQUOTE>
This section and its subsections address the security issues associated with running applets that are loaded over a network. The same issues apply to applets that are loaded from a local file system, but the potential risks are somewhat lower. The intent is to deal with the worst-case scenario.</BLOCKQUOTE>

</TD></TR>
</TABLE>
</CENTER>
<P>
<H3><A NAME="LanguageSecurityFeatures">Language Security Features</A>
</H3>
<P>
A number of features have been incorporated into the Java language
to make it more reliable and capable. Although these features
may not have been driven by security concerns, they still help
to minimize security risks. The most important of these features
is the removal of all pointer-based operations from the Java language.
The absence of pointers eliminates entire classes of security
vulnerabilities related to memory browsing, the modification of
memory-resident code, and illegal access to security-related objects.
<P>
Java's use of strong typing also contributes to security. All
objects are associated with a well-defined type and cannot be
freely converted from one type to another. Methods cannot be used
with classes to which they do not apply. Methods cannot return
objects of a type that is incompatible with their return type.
Strong typing enforces the Java object-oriented approach and prevents
numerous kinds of errors that could lead to security-related malfunctions.
<H3><A NAME="CompilerSecurityFeatures">Compiler Security Features</A>
</H3>
<P>
The Java compiler also provides features that support security.
These features are implemented in the form of compiler checks
that prevent errors and undesired actions.
<P>
The compiler enforces Java's strong typing by generating compilation
errors for statements that violate the language's strong typing
rules. It ensures that all methods are appropriate for the objects
for which they are invoked.
<P>
The compiler checks array operations to make sure that they are
valid for the array objects being acted on and that memory overrun
errors do not occur. These checks are duplicated and extended
by the runtime system.
<P>
The compiler checks all class, interface, variable, and method
accesses to ensure that the accesses are consistent with the access
modifiers used in their declaration. This prevents classes, interfaces,
variables, and methods from being used in unintended ways and
enforces the information hiding capabilities provided by the access
modifiers.
<P>
The compiler generates code that treats <TT><FONT FACE="Courier">String</FONT></TT>
objects as constants and supports <TT><FONT FACE="Courier">String</FONT></TT>
operations through the <TT><FONT FACE="Courier">StringBuffer</FONT></TT>
class. This eliminates overrun errors that could cause in-memory
modification of data or code.
<P>
The compiler also prevents uninitialized variables from being
read and constants from being modified. These checks eliminate
errors resulting from incorrect variable reading and writing.
<H3><A NAME="RuntimeSecurityMechanisms">Runtime Security Mechanisms</A>
</H3>
<P>
The Java runtime system is designed to prevent applets from modifying,
deleting, or disclosing your files, accessing in-memory programs
and data, and misusing network resources. This is accomplished
by preventing applets from accessing files on your computer, not
providing or disallowing services that enable control over other
programs, data, or the host operating system, and restricting
network connections to the host computer from which an applet
is loaded. The specific security mechanisms that implement these
controls are discussed in the following subsections.
<H4>Class Loader Security Checks</H4>
<P>
Applets are loaded over a network using a class loader. The class
loader prevents classes that are loaded from the network from
masquerading as or conflicting with classes that are resident
on the local file system. This ensures that the security-critical
classes of the Java API are not replaced by less trustworthy classes
that are loaded over a network.
<P>
The class loader separates local and network-loaded classes by
placing those classes from a particular network host into a name
space that is unique to that host. This approach also keeps network-loaded
classes from different hosts from conflicting with each other.
<H4>The Bytecode Verifier</H4>
<P>
The security of classes that are loaded over a network is verified
using the bytecode verifier. The bytecode verifier checks that
the loaded classes are correctly formed and that they do not have
the capability to violate type and name space restrictions. 
<P>
The verifier uses a mini theorem prover to prove that the <TT><FONT FACE="Courier">.class</FONT></TT>
file initially satisfies certain security constraints and that
when it is executed it will always transition into states in which
these security constraints are satisfied. This proof by induction
verifies that basic security rules will be enforced throughout
the execution of the <TT><FONT FACE="Courier">.class</FONT></TT>
file. The verifier proves that no illegal conversion between types
can occur, that parameters are correct for the methods and instructions
to which they apply, that stack operations do not cause overflows
or underflows, that access modifiers are enforced, that no forged
pointers can be created, and that register operations do not lead
to errors. 
<H4>Memory Management and Control</H4>
<P>
The memory locations of Java classes and objects are determined
at runtime based on the platform hosting the runtime system and
the current memory allocation maintained by the operating system.
By performing memory layout decisions at runtime, the potential
for inducing errors that cause memory overruns and lead to security
malfunctions is greatly reduced. This is because it is very difficult
to predict the memory locations at which objects will be stored
during code execution. Without this knowledge, complex memory
overrun attacks are thwarted.
<P>
The Java garbage collector reduces the likelihood that an applet
or program may make mistakes in its management of memory resources.
Since memory deallocation is automatically handled through the
garbage collection process, errors resulting from multiple deallocation
of the same memory area or failure to deallocate memory are avoided.
<P>
Runtime array bounds checking also reduces the likelihood that
errors resulting in illegal memory accesses can occur. By confining
array operations to valid array locations, these potential security-related
errors are prevented.
<H4>Security Manager Checks</H4>
<P>
The Java security manager provides a central decision point for
implementing Java security rules. This ensures that security access
controls are implemented in a manageable and consistent manner.
The <TT><FONT FACE="Courier">SecurityManager</FONT></TT> class
of the <TT><FONT FACE="Courier">java.lang</FONT></TT> package
may be overridden to implement a custom security policy for standalone
Java programs such as those that load applets. A <TT><FONT FACE="Courier">SecurityManager</FONT></TT>
object cannot, however, be created, invoked, or accessed by a
network-loaded applet. This prevents applets from modifying the
security policy implemented by the runtime system's <TT><FONT FACE="Courier">SecurityManager</FONT></TT>
object.
<P>
The applet security policy implemented by the default <TT><FONT FACE="Courier">SecurityManager</FONT></TT>
object varies from one browser to another. Netscape Navigator
2.0 implements a security policy that enforces the following rules
for applets that are loaded over a network:
<UL>
<LI><FONT COLOR=#000000>Applets cannot create or install a class
loader or security manager.</FONT>
<LI><FONT COLOR=#000000>Applets cannot create classes in the local
class name space.</FONT>
<LI><FONT COLOR=#000000>Applets cannot access local packages outside
the standard packages of the Java API.</FONT>
<LI><FONT COLOR=#000000>Applets cannot access files and directories
on the local system in any manner.</FONT>
<LI><FONT COLOR=#000000>Applets may establish network connections
only to the host system from which they were loaded.</FONT>
<LI><FONT COLOR=#000000>Applets cannot create or install a content
handler, protocol handler, or socket implementation.</FONT>
<LI><FONT COLOR=#000000>Applets cannot read system properties
that provide information about a user.</FONT>
<LI><FONT COLOR=#000000>Applets cannot modify system properties.</FONT>
<LI><FONT COLOR=#000000>Applets cannot run other programs or load
dynamic link libraries on the local system.</FONT>
<LI><FONT COLOR=#000000>Applets cannot terminate other programs
or the runtime system.</FONT>
<LI><FONT COLOR=#000000>Applets cannot access threads or thread
groups that are outside of their thread group.</FONT>
<LI><FONT COLOR=#000000>All windows created by an applet must
be clearly labeled as being untrusted.</FONT>
</UL>
<H2><A NAME="StayingCurrentwithJavaSecurityIssue"><FONT SIZE=5 COLOR=#FF0000>Staying
Current with Java Security Issues</FONT></A><FONT SIZE=5 COLOR=#FF0000>
</FONT></H2>
<P>
Keeping Java secure is an ongoing process. Several security flaws
have been identified to date and it is reasonable to expect that
new Java security flaws will continue to be found. Sun and Netscape
have responded quickly to newly discovered security flaws, often
releasing fixes within days. As new versions of Java are released
and the Java API is expanded, new security flaws will most likely
be introduced. To stay current with Java security issues, you
should periodically review the FAQ on applet security maintained
by JavaSoft. This FAQ contains the status of all known security-related
bugs in Java and Java-enabled browsers. The FAQ is located at
the URL <TT><A TARGET="resource window" HREF="http://java.sun.com/sfaq/">http://java.sun.com/sfaq/</A></TT>.
A source of information on general Java bugs in the JDK 1.0 release
can be found at <TT><A TARGET="resource window" HREF="http://www.javasoft.com/JDK-1.0/knownbugs.html">http://www.javasoft.com/JDK-1.0/knownbugs.html</A></TT>.
<H2><A NAME="Summary"><FONT SIZE=5 COLOR=#FF0000>Summary</FONT></A><FONT SIZE=5 COLOR=#FF0000>
</FONT></H2>
<P>
In this chapter you have learned about the security of Java applets
and programs. You have learned about the threats faced by those
who use Java applets and programs and the security restrictions
placed on Java applets. You have covered the security features
of the Java language, compiler, and runtime environment and explored
the security mechanisms implemented by Java-enabled browsers.
The next and final chapter examines Java platforms and extensions.
<P>
<HR WIDTH="100%"></P>

</P></CENTER>

<P>
<HR WIDTH="100%"></P>

<!-- reference library footer #1-->
</CENTER>
<IMG SRC="/images/rule.gif" WIDTH="460" HEIGHT="5" VSPACE="5"
ALT="Ruler image"><br>

<FONT SIZE="-1">

Contact <a href="mailto:reference@developer.com">
reference@developer.com</a> with questions or comments.<br>


<a href="/legal/">
Copyright 1998</a> 
<a href="http://www.earthweb.com" target="_top">
EarthWeb Inc.</a>,  All rights reserved.<BR>
PLEASE READ THE <a href="/reference/usage.html">ACCEPTABLE USAGE STATEMENT</a>.
<BR>
Copyright 1998 Macmillan Computer Publishing. All rights reserved.
</FONT>
</BLOCKQUOTE>


<!--outer table--><TD VALIGN="TOP">

<!--right side ads -->
<a target="resource window" href="http://adserver.developer.com/cgi-bin/accipiter/adclick.exe/AREA=DCAD1.REF" alt="Click here for more info"><img src="http://adserver.developer.com/cgi-bin/accipiter/adserver.exe/AREA=DCAD1.REF" alt="Click here for more info" height="88" width="88" border="0"></a>
<P>
<a target="resource window" href="http://adserver.developer.com/cgi-bin/accipiter/adclick.exe/AREA=DCAD2.REF" alt="Click here for more info"><img src="http://adserver.developer.com/cgi-bin/accipiter/adserver.exe/AREA=DCAD2.REF" alt="Click here for more info" height="88" width="88" border="0"></a>
<P>



</td>
</tr>
</table>
</BODY>
</HTML>



