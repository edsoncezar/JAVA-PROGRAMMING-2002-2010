<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE j2ee-ri-specific-information PUBLIC '-//Sun Microsystems Inc.//DTD J2EE Reference Implementation 1.3//EN' 'http://localhost:8000/sun-j2ee-ri_1_3.dtd'>

<j2ee-ri-specific-information>
  <server-name></server-name>
  <rolemapping />
  <enterprise-beans>
    <module-name>roster-ejb.jar</module-name>
    <unique-id>0</unique-id>
    <ejb>
      <ejb-name>RosterEJB</ejb-name>
      <jndi-name>MyRoster</jndi-name>
      <ejb-ref>
        <ejb-ref-name>ejb/SimpleLeague</ejb-ref-name>
        <jndi-name>localejbs/RosterApp/LeagueEJB0</jndi-name>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>ejb/SimpleTeam</ejb-ref-name>
        <jndi-name>localejbs/RosterApp/TeamEJB2</jndi-name>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>ejb/SimplePlayer</ejb-ref-name>
        <jndi-name>localejbs/RosterApp/PlayerEJB1</jndi-name>
      </ejb-ref>
      <gen-classes />
    </ejb>
  </enterprise-beans>
  <enterprise-beans>
    <module-name>team-ejb.jar</module-name>
    <unique-id>0</unique-id>
    <ejb>
      <ejb-name>LeagueEJB</ejb-name>
      <jndi-name>MyLeague</jndi-name>
      <gen-classes />
      <ejb20-cmp>
        <sql-statement>
          <operation>loadRow</operation>
          <sql>SELECT "name" , "sport" FROM "LeagueBeanTable" WHERE "leagueId" = ? </sql>
        </sql-statement>
        <sql-statement>
          <operation>storeRow</operation>
          <sql>UPDATE "LeagueBeanTable" SET "name" = ?  , "sport" = ?  WHERE "leagueId" = ? </sql>
        </sql-statement>
        <sql-statement>
          <operation>deleteRow</operation>
          <sql>DELETE FROM "LeagueBeanTable" WHERE "leagueId" = ? </sql>
        </sql-statement>
        <sql-statement>
          <operation>findByPrimaryKey</operation>
          <sql>SELECT "leagueId" FROM "LeagueBeanTable" WHERE "leagueId" = ? </sql>
        </sql-statement>
        <sql-statement>
          <operation>deleteTable</operation>
          <sql>DROP TABLE "LeagueBeanTable"</sql>
        </sql-statement>
        <sql-statement>
          <operation>createRow</operation>
          <sql>INSERT INTO "LeagueBeanTable" ( "leagueId" , "name" , "sport" ) VALUES (  ?  ,  ?  ,  ?  )</sql>
        </sql-statement>
        <sql-statement>
          <operation>createTable</operation>
          <sql>CREATE TABLE "LeagueBeanTable" ("leagueId" VARCHAR(255) , "name" VARCHAR(255) , "sport" VARCHAR(255), CONSTRAINT "pk_LeagueBeanTabl" PRIMARY KEY ("leagueId") )</sql>
        </sql-statement>
        <create-table-deploy>true</create-table-deploy>
        <delete-table-undeploy>true</delete-table-undeploy>
      </ejb20-cmp>
    </ejb>
    <ejb>
      <ejb-name>TeamEJB</ejb-name>
      <jndi-name>MyTeam</jndi-name>
      <gen-classes />
      <ejb20-cmp>
        <sql-statement>
          <operation>loadRow</operation>
          <sql>SELECT "city" , "name" FROM "TeamBeanTable" WHERE "teamId" = ? </sql>
        </sql-statement>
        <sql-statement>
          <operation>storeRow</operation>
          <sql>UPDATE "TeamBeanTable" SET "city" = ?  , "name" = ?  WHERE "teamId" = ? </sql>
        </sql-statement>
        <sql-statement>
          <operation>deleteRow</operation>
          <sql>DELETE FROM "TeamBeanTable" WHERE "teamId" = ? </sql>
        </sql-statement>
        <sql-statement>
          <operation>findByPrimaryKey</operation>
          <sql>SELECT "teamId" FROM "TeamBeanTable" WHERE "teamId" = ? </sql>
        </sql-statement>
        <sql-statement>
          <operation>deleteTable</operation>
          <sql>DROP TABLE "TeamBeanTable"</sql>
        </sql-statement>
        <sql-statement>
          <operation>createRow</operation>
          <sql>INSERT INTO "TeamBeanTable" ( "city" , "name" , "teamId" ) VALUES (  ?  ,  ?  ,  ?  )</sql>
        </sql-statement>
        <sql-statement>
          <operation>createTable</operation>
          <sql>CREATE TABLE "TeamBeanTable" ("city" VARCHAR(255) , "name" VARCHAR(255) , "teamId" VARCHAR(255), CONSTRAINT "pk_TeamBeanTabl" PRIMARY KEY ("teamId") )</sql>
        </sql-statement>
        <create-table-deploy>true</create-table-deploy>
        <delete-table-undeploy>true</delete-table-undeploy>
      </ejb20-cmp>
    </ejb>
    <ejb>
      <ejb-name>PlayerEJB</ejb-name>
      <jndi-name>MyPlayer</jndi-name>
      <gen-classes />
      <ejb20-cmp>
        <sql-statement>
          <operation>loadRow</operation>
          <sql>SELECT "name" , "position" , "salary" FROM "PlayerBeanTable" WHERE "playerId" = ? </sql>
        </sql-statement>
        <sql-statement>
          <operation>storeRow</operation>
          <sql>UPDATE "PlayerBeanTable" SET "name" = ?  , "position" = ?  , "salary" = ?  WHERE "playerId" = ? </sql>
        </sql-statement>
        <sql-statement>
          <operation>deleteRow</operation>
          <sql>DELETE FROM "PlayerBeanTable" WHERE "playerId" = ? </sql>
        </sql-statement>
        <sql-statement>
          <operation>findByPrimaryKey</operation>
          <sql>SELECT "playerId" FROM "PlayerBeanTable" WHERE "playerId" = ? </sql>
        </sql-statement>
        <sql-statement>
          <operation>deleteTable</operation>
          <sql>DROP TABLE "PlayerBeanTable"</sql>
        </sql-statement>
        <sql-statement>
          <operation>createRow</operation>
          <sql>INSERT INTO "PlayerBeanTable" ( "name" , "playerId" , "position" , "salary" ) VALUES (  ?  ,  ?  ,  ?  ,  ?  )</sql>
        </sql-statement>
        <sql-statement>
          <operation>createTable</operation>
          <sql>CREATE TABLE "PlayerBeanTable" ("name" VARCHAR(255) , "playerId" VARCHAR(255) , "position" VARCHAR(255) , "salary" DOUBLE PRECISION NOT NULL, CONSTRAINT "pk_PlayerBeanTabl" PRIMARY KEY ("playerId") )</sql>
        </sql-statement>
        <create-table-deploy>true</create-table-deploy>
        <delete-table-undeploy>true</delete-table-undeploy>
        <sql-statement>
          <method>
            <ejb-name>PlayerEJB</ejb-name>
            <method-intf>LocalHome</method-intf>
            <method-name>findNotOnTeam</method-name>
            <method-params />
          </method>
          <sql>SELECT "p"."playerId" FROM "PlayerBeanTable" "p" WHERE ( NOT EXISTS (SELECT * FROM "TeamBeanTable" "@_p" , "TeamEJB_players_PlayerEJB_teamsTable" "@tmp0" WHERE (("p"."playerId" = "@tmp0"."_PlayerEJB_playerId" AND "@tmp0"."_TeamEJB_teamId" = "@_p"."teamId"))))</sql>
        </sql-statement>
        <sql-statement>
          <method>
            <ejb-name>PlayerEJB</ejb-name>
            <method-intf>LocalHome</method-intf>
            <method-name>findAll</method-name>
            <method-params />
          </method>
          <sql>SELECT "p"."playerId" FROM "PlayerBeanTable" "p" </sql>
        </sql-statement>
        <sql-statement>
          <method>
            <ejb-name>PlayerEJB</ejb-name>
            <method-intf>LocalHome</method-intf>
            <method-name>findBySport</method-name>
            <method-params>
              <method-param>java.lang.String</method-param>
            </method-params>
          </method>
          <sql>SELECT DISTINCT "p"."playerId" FROM "PlayerBeanTable" "p" , "TeamBeanTable" "t" , "TeamEJB_players_PlayerEJB_teamsTable" "@tmp0" , "LeagueBeanTable" "@tmp1" , "LeagueEJB_teams_TeamEJB_Table" "@tmp2" WHERE ("@tmp1"."sport"  = ? ) AND (("p"."playerId" = "@tmp0"."_PlayerEJB_playerId" AND "@tmp0"."_TeamEJB_teamId" = "t"."teamId")) AND (("t"."teamId" = "@tmp2"."_TeamEJB_teamId" AND "@tmp2"."_LeagueEJB_leagueId" = "@tmp1"."leagueId"))</sql>
        </sql-statement>
        <sql-statement>
          <method>
            <ejb-name>PlayerEJB</ejb-name>
            <method-intf>Bean</method-intf>
            <method-name>ejbSelectSports</method-name>
            <method-params>
              <method-param>team.LocalPlayer</method-param>
            </method-params>
          </method>
          <sql>SELECT DISTINCT "@tmp1"."sport" FROM "PlayerBeanTable" "p" , "TeamBeanTable" "t" , "TeamEJB_players_PlayerEJB_teamsTable" "@tmp0" , "LeagueBeanTable" "@tmp1" , "LeagueEJB_teams_TeamEJB_Table" "@tmp2" WHERE (("p"."playerId" = ? )) AND (("p"."playerId" = "@tmp0"."_PlayerEJB_playerId" AND "@tmp0"."_TeamEJB_teamId" = "t"."teamId")) AND (("t"."teamId" = "@tmp2"."_TeamEJB_teamId" AND "@tmp2"."_LeagueEJB_leagueId" = "@tmp1"."leagueId"))</sql>
        </sql-statement>
        <sql-statement>
          <method>
            <ejb-name>PlayerEJB</ejb-name>
            <method-intf>LocalHome</method-intf>
            <method-name>findBySalaryRange</method-name>
            <method-params>
              <method-param>double</method-param>
              <method-param>double</method-param>
            </method-params>
          </method>
          <sql>SELECT DISTINCT "p"."playerId" FROM "PlayerBeanTable" "p" WHERE ("p"."salary"  BETWEEN ?  AND ? )</sql>
        </sql-statement>
        <sql-statement>
          <method>
            <ejb-name>PlayerEJB</ejb-name>
            <method-intf>LocalHome</method-intf>
            <method-name>findByHigherSalary</method-name>
            <method-params>
              <method-param>java.lang.String</method-param>
            </method-params>
          </method>
          <sql>SELECT DISTINCT "p1"."playerId" FROM "PlayerBeanTable" "p1" , "PlayerBeanTable" "p2" WHERE (("p1"."salary"  &gt; "p2"."salary" ) AND ("p2"."name"  = ? ))</sql>
        </sql-statement>
        <sql-statement>
          <method>
            <ejb-name>PlayerEJB</ejb-name>
            <method-intf>LocalHome</method-intf>
            <method-name>findByCity</method-name>
            <method-params>
              <method-param>java.lang.String</method-param>
            </method-params>
          </method>
          <sql>SELECT DISTINCT "p"."playerId" FROM "PlayerBeanTable" "p" , "TeamBeanTable" "t" , "TeamEJB_players_PlayerEJB_teamsTable" "@tmp0" WHERE ("t"."city"  = ? ) AND (("p"."playerId" = "@tmp0"."_PlayerEJB_playerId" AND "@tmp0"."_TeamEJB_teamId" = "t"."teamId"))</sql>
        </sql-statement>
        <sql-statement>
          <method>
            <ejb-name>PlayerEJB</ejb-name>
            <method-intf>LocalHome</method-intf>
            <method-name>findByPositionAndName</method-name>
            <method-params>
              <method-param>java.lang.String</method-param>
              <method-param>java.lang.String</method-param>
            </method-params>
          </method>
          <sql>SELECT DISTINCT "p"."playerId" FROM "PlayerBeanTable" "p" WHERE (("p"."position"  = ? ) AND ("p"."name"  = ? ))</sql>
        </sql-statement>
        <sql-statement>
          <method>
            <ejb-name>PlayerEJB</ejb-name>
            <method-intf>LocalHome</method-intf>
            <method-name>findByLeague</method-name>
            <method-params>
              <method-param>team.LocalLeague</method-param>
            </method-params>
          </method>
          <sql>SELECT DISTINCT "p"."playerId" FROM "PlayerBeanTable" "p" , "TeamBeanTable" "t" , "TeamEJB_players_PlayerEJB_teamsTable" "@tmp0" , "LeagueBeanTable" "@tmp1" , "LeagueEJB_teams_TeamEJB_Table" "@tmp2" WHERE (("@tmp2"."_LeagueEJB_leagueId" = ?  AND (("t"."teamId" = "@tmp2"."_TeamEJB_teamId" AND "@tmp2"."_LeagueEJB_leagueId" = "@tmp1"."leagueId")))) AND (("p"."playerId" = "@tmp0"."_PlayerEJB_playerId" AND "@tmp0"."_TeamEJB_teamId" = "t"."teamId"))</sql>
        </sql-statement>
        <sql-statement>
          <method>
            <ejb-name>PlayerEJB</ejb-name>
            <method-intf>Bean</method-intf>
            <method-name>ejbSelectLeagues</method-name>
            <method-params>
              <method-param>team.LocalPlayer</method-param>
            </method-params>
          </method>
          <sql>SELECT DISTINCT "@tmp2"."_LeagueEJB_leagueId" FROM "PlayerBeanTable" "p" , "TeamBeanTable" "t" , "TeamEJB_players_PlayerEJB_teamsTable" "@tmp0" , "LeagueBeanTable" "@tmp1" , "LeagueEJB_teams_TeamEJB_Table" "@tmp2" WHERE (("p"."playerId" = ? )) AND (("p"."playerId" = "@tmp0"."_PlayerEJB_playerId" AND "@tmp0"."_TeamEJB_teamId" = "t"."teamId")) AND (("t"."teamId" = "@tmp2"."_TeamEJB_teamId" AND "@tmp2"."_LeagueEJB_leagueId" = "@tmp1"."leagueId"))</sql>
        </sql-statement>
        <sql-statement>
          <method>
            <ejb-name>PlayerEJB</ejb-name>
            <method-intf>LocalHome</method-intf>
            <method-name>findByPosition</method-name>
            <method-params>
              <method-param>java.lang.String</method-param>
            </method-params>
          </method>
          <sql>SELECT DISTINCT "p"."playerId" FROM "PlayerBeanTable" "p" WHERE ("p"."position"  = ? )</sql>
        </sql-statement>
        <sql-statement>
          <method>
            <ejb-name>PlayerEJB</ejb-name>
            <method-intf>LocalHome</method-intf>
            <method-name>findByTest</method-name>
            <method-params>
              <method-param>java.lang.String</method-param>
              <method-param>java.lang.String</method-param>
              <method-param>java.lang.String</method-param>
            </method-params>
          </method>
          <sql>SELECT DISTINCT "p"."playerId" FROM "PlayerBeanTable" "p" WHERE ("p"."name"  = ? )</sql>
        </sql-statement>
      </ejb20-cmp>
    </ejb>
    <join-object>
      <name>team.TeamEJB_players_PlayerEJB_teams</name>
      <ejb20-cmp>
        <sql-statement>
          <operation>storeRow</operation>
          <sql> </sql>
        </sql-statement>
        <sql-statement>
          <operation>findBySourceKey</operation>
          <sql>SELECT "_PlayerEJB_playerId" FROM "TeamEJB_players_PlayerEJB_teamsTable" WHERE "_TeamEJB_teamId" = ? </sql>
        </sql-statement>
        <sql-statement>
          <operation>deleteRow</operation>
          <sql>DELETE FROM "TeamEJB_players_PlayerEJB_teamsTable" WHERE "_PlayerEJB_playerId" = ?  AND "_TeamEJB_teamId" = ? </sql>
        </sql-statement>
        <sql-statement>
          <operation>loadRow</operation>
          <sql>SELECT  *  FROM "TeamEJB_players_PlayerEJB_teamsTable" WHERE "_PlayerEJB_playerId" = ?  AND "_TeamEJB_teamId" = ? </sql>
        </sql-statement>
        <sql-statement>
          <operation>findByPrimaryKey</operation>
          <sql>SELECT "_PlayerEJB_playerId" , "_TeamEJB_teamId" FROM "TeamEJB_players_PlayerEJB_teamsTable" WHERE "_PlayerEJB_playerId" = ?  AND "_TeamEJB_teamId" = ? </sql>
        </sql-statement>
        <sql-statement>
          <operation>createRow</operation>
          <sql>INSERT INTO "TeamEJB_players_PlayerEJB_teamsTable" ( "_PlayerEJB_playerId" , "_TeamEJB_teamId" ) VALUES (  ?  ,  ?  )</sql>
        </sql-statement>
        <sql-statement>
          <operation>deleteTable</operation>
          <sql>DROP TABLE "TeamEJB_players_PlayerEJB_teamsTable"</sql>
        </sql-statement>
        <sql-statement>
          <operation>createTable</operation>
          <sql>CREATE TABLE "TeamEJB_players_PlayerEJB_teamsTable" ("_PlayerEJB_playerId" VARCHAR(255) , "_TeamEJB_teamId" VARCHAR(255), CONSTRAINT "pk_TeamEJB_players_PlayerEJB_teamsTabl" PRIMARY KEY ("_PlayerEJB_playerId" , "_TeamEJB_teamId") )</sql>
        </sql-statement>
        <sql-statement>
          <operation>findBySinkKey</operation>
          <sql>SELECT "_TeamEJB_teamId" FROM "TeamEJB_players_PlayerEJB_teamsTable" WHERE "_PlayerEJB_playerId" = ? </sql>
        </sql-statement>
        <create-table-deploy>true</create-table-deploy>
        <delete-table-undeploy>true</delete-table-undeploy>
      </ejb20-cmp>
      <source>
        <name>TeamEJB</name>
        <field>players</field>
      </source>
      <sink>
        <name>PlayerEJB</name>
        <field>teams</field>
      </sink>
    </join-object>
    <join-object>
      <name>team.LeagueEJB_teams_TeamEJB_</name>
      <ejb20-cmp>
        <sql-statement>
          <operation>storeRow</operation>
          <sql>UPDATE "LeagueEJB_teams_TeamEJB_Table" SET "_LeagueEJB_leagueId" = ?  WHERE "_TeamEJB_teamId" = ? </sql>
        </sql-statement>
        <sql-statement>
          <operation>findBySourceKey</operation>
          <sql>SELECT "_TeamEJB_teamId" FROM "LeagueEJB_teams_TeamEJB_Table" WHERE "_LeagueEJB_leagueId" = ? </sql>
        </sql-statement>
        <sql-statement>
          <operation>deleteRow</operation>
          <sql>DELETE FROM "LeagueEJB_teams_TeamEJB_Table" WHERE "_TeamEJB_teamId" = ? </sql>
        </sql-statement>
        <sql-statement>
          <operation>loadRow</operation>
          <sql>SELECT "_LeagueEJB_leagueId" FROM "LeagueEJB_teams_TeamEJB_Table" WHERE "_TeamEJB_teamId" = ? </sql>
        </sql-statement>
        <sql-statement>
          <operation>findByPrimaryKey</operation>
          <sql>SELECT "_TeamEJB_teamId" FROM "LeagueEJB_teams_TeamEJB_Table" WHERE "_TeamEJB_teamId" = ? </sql>
        </sql-statement>
        <sql-statement>
          <operation>createRow</operation>
          <sql>INSERT INTO "LeagueEJB_teams_TeamEJB_Table" ( "_LeagueEJB_leagueId" , "_TeamEJB_teamId" ) VALUES (  ?  ,  ?  )</sql>
        </sql-statement>
        <sql-statement>
          <operation>deleteTable</operation>
          <sql>DROP TABLE "LeagueEJB_teams_TeamEJB_Table"</sql>
        </sql-statement>
        <sql-statement>
          <operation>createTable</operation>
          <sql>CREATE TABLE "LeagueEJB_teams_TeamEJB_Table" ("_LeagueEJB_leagueId" VARCHAR(255) , "_TeamEJB_teamId" VARCHAR(255), CONSTRAINT "pk_LeagueEJB_teams_TeamEJB_Tabl" PRIMARY KEY ("_TeamEJB_teamId") )</sql>
        </sql-statement>
        <sql-statement>
          <operation>findBySinkKey</operation>
          <sql>SELECT "_LeagueEJB_leagueId" FROM "LeagueEJB_teams_TeamEJB_Table" WHERE "_TeamEJB_teamId" = ? </sql>
        </sql-statement>
        <create-table-deploy>true</create-table-deploy>
        <delete-table-undeploy>true</delete-table-undeploy>
      </ejb20-cmp>
      <source>
        <name>LeagueEJB</name>
        <field>teams</field>
      </source>
      <sink>
        <name>TeamEJB</name>
        <field>league</field>
      </sink>
    </join-object>
    <cmpresource>
      <ds-jndi-name>jdbc/Cloudscape</ds-jndi-name>
      <default-resource-principal>
        <name></name>
        <password></password>
      </default-resource-principal>
    </cmpresource>
  </enterprise-beans>
</j2ee-ri-specific-information>

