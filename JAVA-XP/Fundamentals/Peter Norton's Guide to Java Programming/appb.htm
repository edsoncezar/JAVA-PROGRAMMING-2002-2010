<HTML>

<HEAD>
   <TITLE>Appendix B -- Java Terminology</TITLE>
   <META NAME="GENERATOR" CONTENT="Mozilla/3.0b5aGold (WinNT; I) [Netscape]">
</HEAD>
<!--Begin JavaScript roadmap code.  If editing downloaded HTML source, delete
 this portion.-->

<script language="JavaScript">
<!--

function TripodShowPopup()
{
   var bName=navigator.appName;
   var bVer=parseInt(navigator.appVersion);
   var now = new Date();
   var popupURL = "/adm/popup/roadmap.shtml?"+"member_name=er4ebus&path=peternortonjavaprograming&client_ip=200.190.100.218&ts=1015337459&ad_type=POPUP&category=net&id=6dfa2bf9190c6325498476f594c5e5ce";
   var popupName = "TripodPopup";

   if (bName=="Netscape" && bVer<=3)
   {
      var popup = window.open("", popupName,'toolbar=0,location=0,directories=0,status=0,menubar=0,scrollbars=0,resizable=0,width=614,height=150');
   }
   else
   {
      var popup = window.open("", popupName,'toolbar=0,location=0,directories=0,status=0,menubar=0,scrollbars=0,resizable=0,width=604,height=135');
   }
   popup.location = popupURL;
}

if(window.parent==window)
{
   TripodShowPopup();
}

// -->
</script>

<script language="JavaScript1.2">
<!--

function changeOpenFunction()
{
   var original_window_open = window.open;
   function new_open_function(url, name, features, replace)
   {
      if(name != "TripodPopup")
         return original_window_open(url, name, features, replace);
   }
   window.open = new_open_function;
}
var bName = navigator.appName;

if(bName != "Netscape")
   changeOpenFunction();

// -->
</script>
<BODY TEXT="#000000" BGCOLOR="#FFFFFF" LINK="#0000EE" VLINK="#551A8B" ALINK="#CE2910">
<H1><FONT COLOR=#Ff0000>Appendix B</FONT></H1>
<H1><B><FONT SIZE=5 COLOR=#Ff0000>Java Terminology</FONT></B>
</H1>
<P>
<HR WIDTH="100%"></P>

<P>
<B>abstract modifier</B>&nbsp;&nbsp;A modifier used to create
<I>template classes</I>.
<P>
<B>abstract class</B>&nbsp;&nbsp;A template class that contains
such things as variable declarations and methods, but cannot contain
code for creating new instances.
<P>
<B>applet</B>&nbsp;&nbsp;Code that requires an external program
to provide an interface to the user. Web browsers and the Java
Developer's Kit (JDK) applet viewer are examples of interfaces
that support applets.
<P>
<B>applet viewer</B>&nbsp;&nbsp;A program that allows you to view
an applet directly without a Java-enabled browser. You will find
this program in the Java Developer's Kit.
<P>
<B>application</B>&nbsp;&nbsp;Stand-alone program that can be
run directly from the command line.
<P>
<B>argument</B>&nbsp;&nbsp;A parameter that is passed to a method
when it is called.
<P>
<B>array</B>&nbsp;&nbsp;A single- or multidimensional group of
variables.
<P>
<TT><B><FONT FACE="Courier">available()</FONT></B></TT><B> method</B>&nbsp;&nbsp;A
method used to determine if some amount of data is ready to be
read without blocking in the input stream. This method is found
in the following <TT><FONT FACE="Courier">java.io</FONT></TT>
classes: <TT><FONT FACE="Courier">InputStream</FONT></TT>, <TT><FONT FACE="Courier">FilterInputStream</FONT></TT>,
<TT><FONT FACE="Courier">BufferedInputStream</FONT></TT>, <TT><FONT FACE="Courier">ByteArrayInputStream</FONT></TT>,
and <TT><FONT FACE="Courier">PushbackInputStream</FONT></TT>.
<P>
<B>binary operator</B>&nbsp;&nbsp;An operator that acts on two
values and returns one value.
<P>
<B>block</B>&nbsp;&nbsp;A section of code beginning and ending
with curly braces <TT><FONT FACE="Courier">{}</FONT></TT>. The
statements are grouped so they can be used together to accomplish
a certain task or so that they can be executed when a particular
condition is met.
<P>
<B>boolean</B>&nbsp;&nbsp;A data type that can be either <TT><FONT FACE="Courier">true</FONT></TT>
or <TT><FONT FACE="Courier">false</FONT></TT>.
<P>
<B>boolean literal</B>&nbsp;&nbsp;A literal declared with the
keywords <TT><FONT FACE="Courier">true</FONT></TT><B> </B>or <TT><FONT FACE="Courier">false</FONT></TT>.
<P>
<B>catch</B>&nbsp;&nbsp;Code that realizes an exception has occurred
and deals with it appropriately. See also <TT><FONT FACE="Courier">try</FONT></TT>.
<P>
<TT><B><FONT FACE="Courier">char</FONT></B></TT><B> data type</B>&nbsp;&nbsp;A
16-bit unsigned integer that represents a Unicode value.
<P>
<B>character literal</B>&nbsp;&nbsp;A single character value.
<P>
<B>class</B>&nbsp;&nbsp;Made up of objects that are not all exactly
alike but have enough similar characteristics that they can be
grouped together.
<P>
<B>class library</B>&nbsp;&nbsp;A set of classes. See also <I>package</I>.
<P>
<B>class variable</B>&nbsp;&nbsp;A variable that is available
to all instances of a class.
<P>
<TT><B><FONT FACE="Courier">close()</FONT></B></TT><B> method</B>&nbsp;&nbsp;A
method used to close an output stream that an application or applet
no longer needs. This method is found in the following <TT><FONT FACE="Courier">java.io</FONT></TT>
classes: <TT><FONT FACE="Courier">OutputStream</FONT></TT> and
<TT><FONT FACE="Courier">FilterOutputStream</FONT></TT>.
<P>
<B>conditional expression</B>&nbsp;&nbsp;An expression that executes
one of several sections of code based on a conditional test.
<P>
<B>constructor</B>&nbsp;&nbsp;A special method used in the initialization
of an object.
<P>
<B>data type</B>&nbsp;&nbsp;Defines the kind of data that can
be stored in a variable.
<P>
<B>declaration statement</B>&nbsp;&nbsp;A statement that declares
a variable or a line of code. Most declaration statements end
with a semicolon.
<P>
<B>double data type</B>&nbsp;&nbsp;A double-precision, 64-bit
long, floating-point number used as a variable.
<P>
<B>exception</B>&nbsp;&nbsp;Java's method of handling errors.
<P>
<B>expression</B>&nbsp;&nbsp;Performs computations.
<P>
<B>final</B>&nbsp;&nbsp; A modifier that indicates an object is
fixed and cannot be changed.
<P>
<TT><B><FONT FACE="Courier">finally</FONT></B></TT>&nbsp;&nbsp;Used
to perform any necessary cleanup if an exception occurs. The <TT><FONT FACE="Courier">finally</FONT></TT>
statement ensures that a section of code will be run.
<P>
<TT><B><FONT FACE="Courier">float</FONT></B></TT><B> data type</B>&nbsp;&nbsp;Designates
a single-precision, 32-bit long, floating-point number as a variable.
<P>
<B>floating-point literal</B>&nbsp;&nbsp;Represents a number that
has a decimal point, such as 3.7.
<P>
<B>friendly</B>&nbsp;&nbsp;A term used to describe the default
access control for methods of a particular class in which the
class itself, subclasses, and classes in the same package can
call the method.
<P>
<TT><B><FONT FACE="Courier">flush()</FONT></B></TT><B> method</B>&nbsp;&nbsp;A
method that is used to force any data buffered for the output
stream to be written to the output device. This method is found
in the following <TT><FONT FACE="Courier">java.io</FONT></TT>
classes: <TT><FONT FACE="Courier">OutputStream</FONT></TT>, <TT><FONT FACE="Courier">FilterOutputStream</FONT></TT>,
<TT><FONT FACE="Courier">BufferedOutputStream</FONT></TT>, and
<TT><FONT FACE="Courier">DataOutputStream</FONT></TT>.
<P>
<B>keyword</B>&nbsp;&nbsp;A reserved word that can be used only
as it is assigned in Java. Here is a complete list of reserved
words in Java:
<BLOCKQUOTE>
<TT><FONT FACE="Courier">abstract<BR>
boolean<BR>
break<BR>
byte<BR>
byvalue<BR>
case<BR>
cast<BR>
catch<BR>
char<BR>
class<BR>
const<BR>
continue<BR>
default<BR>
do<BR>
double<BR>
else<BR>
extends<BR>
false<BR>
final<BR>
finally<BR>
float<BR>
for<BR>
future<BR>
generic<BR>
goto<BR>
if<BR>
implements<BR>
import<BR>
inner<BR>
instance of<BR>
int<BR>
interface<BR>
long<BR>
native<BR>
new<BR>
null<BR>
operator<BR>
outer<BR>
package<BR>
private<BR>
protected<BR>
public<BR>
rest<BR>
return<BR>
short<BR>
static<BR>
super<BR>
switch<BR>
synchronized<BR>
this<BR>
threadsafe<BR>
throw<BR>
transient<BR>
true<BR>
try<BR>
var<BR>
void<BR>
while</FONT></TT>
</BLOCKQUOTE>
<P>
<B>identifier</B>&nbsp;&nbsp;A Java reserved word or title given
to variables, classes, and methods.
<P>
<TT><B><FONT FACE="Courier">import</FONT></B></TT><B> statement</B>&nbsp;&nbsp;A
statement that is used to include a class to be searched for in
a particular package.
<P>
<B>inheritance</B>&nbsp;&nbsp;A methodology whereby the code that
was developed for one use can be extended for use elsewhere without
having to actually make a copy of the code.
<P>
<TT><B><FONT FACE="Courier">init()</FONT></B></TT><B> method</B>&nbsp;&nbsp;A
method that is only called the first time an applet is loaded
into a viewer. It is used to initialize data. The method is in
the <TT><FONT FACE="Courier">java.applet.Applet</FONT></TT> class.
<P>
<B>input stream</B>&nbsp;&nbsp;A data stream that is accepted
and processed by a  process looking for incoming data.
<P>
<B>instance</B>&nbsp;&nbsp;One specific object within the class
of objects.
<P>
<B>instance variable</B>&nbsp;&nbsp;A variable particular to an
instance of a class.
<P>
<B>integer</B>&nbsp;&nbsp;A whole number, such as 1 and 5280.
<P>
<B>integer literal</B>&nbsp;&nbsp;A literal that can be decimal
(base 10), octal (base 8), or hexadecimal (base 16).
<P>
<B>interface</B>&nbsp;&nbsp;Used to define the structure of a
set of methods that will be implemented by classes yet to be designed
and coded.
<P>
<B>literal</B>&nbsp;&nbsp;Represents data in Java. It is based
on character and number representations. The types of literals
are <I>integer</I>, <I>floating-point</I>, <I>boolean</I>, <I>character</I>,
and <I>string</I>.
<P>
<TT><B><FONT FACE="Courier">main()</FONT></B></TT><B> method</B>&nbsp;&nbsp;A
method that must be defined in every Java application<I>.</I>
When a Java application is invoked, the Java compiler looks for
the method named <TT><FONT FACE="Courier">main</FONT></TT> and
begins execution there.
<P>
<TT><B><FONT FACE="Courier">mark()</FONT></B></TT><B> method</B>&nbsp;&nbsp;Used
to mark a point in an input stream to which it may be necessary
to return at a later time. This method is found in the following
<TT><FONT FACE="Courier">java.io</FONT></TT> classes: <TT><FONT FACE="Courier">InputStream</FONT></TT>,
<TT><FONT FACE="Courier">FilterInputStream</FONT></TT>, and <TT><FONT FACE="Courier">BufferedInputStream</FONT></TT>.
<P>
<B>method</B>&nbsp;&nbsp;A function that reports back a status.
<P>
<B>modifier</B>&nbsp;&nbsp;Used to alter certain aspects of classes.
Modifiers are specified in the declaration of a class before the
class name.
<P>
<B>native</B>&nbsp;&nbsp;Methods implemented in a platform-dependent
language, such as C or C++.
<P>
<TT><B><FONT FACE="Courier">new</FONT></B></TT>&nbsp;&nbsp;The
command in Java that creates a new instance of a reference data
type.
<P>
<B>null</B>&nbsp;&nbsp;No value is assigned to a variable.
<P>
<B>operator</B>&nbsp;&nbsp;A symbol used for arithmetic and logical
operations.
<P>
<B>output stream</B>&nbsp;&nbsp;A data stream that is generated
by a producer process.
<P>
<B>package</B>&nbsp;&nbsp;To group together a variety of classes
and/or interfaces that perform similar functions.
<P>
<B>primitive data type</B>&nbsp;&nbsp;A data type that can have
only one value at a time and is the simplest built-in form of
data within Java.
<P>
<TT><B><FONT FACE="Courier">private</FONT></B></TT>&nbsp;&nbsp;A
modifier that specifies only the current class can call this method
or variable. When you use this modifier, you are excluding subclasses
of the class as well.
<P>
<TT><B><FONT FACE="Courier">private protected</FONT></B></TT>&nbsp;&nbsp;A
modifier is a special combination of private and protected access
modifiers. This modifier specifies that only the class in which
the method or variable is defined can call the method or variable,
and does not exclude subclasses of the class, which can access
the method.
<P>
<TT><B><FONT FACE="Courier">protected</FONT></B></TT>&nbsp;&nbsp;A
modifier that specifies that only classes in the current package
in which the method or variable is defined can call the method.
This allows access for objects that are part of the same application,
but not to other applications.
<P>
<TT><B><FONT FACE="Courier">read()</FONT></B></TT><B> method</B>&nbsp;&nbsp;The
method an application actually uses to read data from a stream.
This method is found in the following <TT><FONT FACE="Courier">java.io</FONT></TT>
classes: <TT><FONT FACE="Courier">InputStream</FONT></TT>, <TT><FONT FACE="Courier">FilterInputStream</FONT></TT>,
<TT><FONT FACE="Courier">BufferedInputStream</FONT></TT>, <TT><FONT FACE="Courier">DataInputStream</FONT></TT>,
<TT><FONT FACE="Courier">ByteArrayInputStream</FONT></TT>, and
<TT><FONT FACE="Courier">PushbackInputStream</FONT></TT>.
<P>
<B>reserved word</B>&nbsp;&nbsp;A word that can be used only as
it is assigned in Java.
<P>
<B>separator</B>&nbsp;&nbsp;Divides code into segments.
<P>
<B>single inheritance</B>&nbsp;&nbsp;The concept that a class
can only have one superclass.
<P>
<TT><B><FONT FACE="Courier">skip()</FONT></B></TT><B> method</B>&nbsp;&nbsp;The
method used to bypass part of an input stream. <TT><FONT FACE="Courier">skip</FONT></TT>
is used to move quickly through a stream by skipping a fixed number
of bytes. This method is found in the following <TT><FONT FACE="Courier">java.io</FONT></TT>
classes: <TT><FONT FACE="Courier">InputStream</FONT></TT>, <TT><FONT FACE="Courier">FilterInputStream</FONT></TT>,
<TT><FONT FACE="Courier">BufferedInputStream</FONT></TT>, and
<TT><FONT FACE="Courier">ByteArrayInputStream</FONT></TT>.
<P>
<TT><B><FONT FACE="Courier">start()</FONT></B></TT><B> method</B>&nbsp;&nbsp;The
method that is called after the <TT><FONT FACE="Courier">init()</FONT></TT>
method the first time an applet is loaded into a viewer or if
an applet has been suspended and must be restarted. The method
is in the <TT><FONT FACE="Courier">java.applet.Applet</FONT></TT>
class.
<P>
<B>statement</B>&nbsp;&nbsp;Any line or lines of code ending in
a semicolon. Statements may be an expression, a method call, or
a declaration.
<P>
<TT><B><FONT FACE="Courier">static</FONT></B></TT> modifier&nbsp;&nbsp;A
modifier that is used to specify a method that can be declared
only once. No subclasses are allowed to implement a method of
the same name.
<P>
<B>static variable</B>&nbsp;&nbsp;A variable that exists in only
one location and is globally accessible by all instances of a
class. See also <I>class variable</I>.
<P>
<TT><B><FONT FACE="Courier">stop()</FONT></B></TT><B> method</B>&nbsp;&nbsp;A
method that is called whenever an applet needs to be stopped or
suspended. The method is in the <TT><FONT FACE="Courier">java.applet.Applet</FONT></TT>
class.
<P>
<B>stream</B>&nbsp;&nbsp;Allows a Java application to communicate
with files, networks, devices, other applications, and even among
threads within the same application.
<P>
<B>string literal</B>&nbsp;&nbsp;A sequence of characters enclosed
in double quotes, such as <TT><FONT FACE="Courier">&quot;This
is a string literal&quot;</FONT></TT>.
<P>
<B>subclass</B>&nbsp;&nbsp;Extends the superclass and creates
a new variation of the class. Inherits the characteristics of
the preceding class.
<P>
<TT><B><FONT FACE="Courier">super</FONT></B></TT>&nbsp;&nbsp;A
reference to the superclass. It is often used as a shortcut or
explicit way to reference a member in the superclass of the current
class.
<P>
<B>superclass</B>&nbsp;&nbsp;The top-level class of every application.
<P>
<B>template classes</B>&nbsp;&nbsp;Classes that are normally used
to provide a superclass for other classes.
<P>
<TT><B><FONT FACE="Courier">this</FONT></B></TT>&nbsp;&nbsp;Allows
the current instance of a variable to be explicitly referenced.
<P>
<B>thread</B>&nbsp;&nbsp;Provides Java with the capability to
have a single application easily run multiple concurrent code
execution.
<P>
<B>token</B>&nbsp;&nbsp;The basic elements of the Java language.
At compile time, the <TT><FONT FACE="Courier">javac</FONT></TT>
compiler takes the code and pulls out these basic building blocks
for further processing.
<P>
<TT><B><FONT FACE="Courier">try</FONT></B></TT>&nbsp;&nbsp;Executes
a block of code that may generate (<I>throw</I>) an exception.
See also <TT><FONT FACE="Courier">catch</FONT></TT>.
<P>
<B>unary operator</B>&nbsp;&nbsp;An operator that manipulates
a single value.
<P>
<TT><B><FONT FACE="Courier">void</FONT></B></TT>&nbsp;&nbsp;A
special return type in Java. <TT><FONT FACE="Courier">void</FONT></TT>
indicates that there is no return type of any kind. This is used
for methods that have no need to return anything to the calling
program, or that only modify method arguments or global variables.
<P>
<TT><B><FONT FACE="Courier">write()</FONT></B></TT><B> method</B>&nbsp;&nbsp;The
method an application actually uses to write data to a stream.
This method is found in the following <TT><FONT FACE="Courier">java.io</FONT></TT>
classes: <TT><FONT FACE="Courier">OutputStream</FONT></TT>, <TT><FONT FACE="Courier">FilterOutputStream</FONT></TT>,
<TT><FONT FACE="Courier">BufferedOutputStream</FONT></TT>, <TT><FONT FACE="Courier">DataOutputStream</FONT></TT>,
and <TT><FONT FACE="Courier">ByteArrayOutputStream</FONT></TT>.
<P>
<HR WIDTH="100%"></P>

<CENTER><P><A HREF="appa.htm" tppabs="http://www.mcp.com/835574400/1-57521/1-57521-088-6/appa.htm"><IMG SRC="pc.gif" tppabs="http://www.mcp.com/835574400/1-57521/1-57521-088-6/pc.gif" BORDER=0 HEIGHT=88 WIDTH=140></A><A HREF="#CONTENTS"><IMG SRC="cc.gif" tppabs="http://www.mcp.com/835574400/1-57521/1-57521-088-6/cc.gif" BORDER=0 HEIGHT=88 WIDTH=140></A><A HREF="index.htm" tppabs="http://www.mcp.com/835574400/1-57521/1-57521-088-6/index.htm"><IMG SRC="hb.gif" tppabs="http://www.mcp.com/835574400/1-57521/1-57521-088-6/hb.gif" BORDER=0 HEIGHT=88 WIDTH=140></A></P></CENTER>

<P>
<HR WIDTH="100%"></P>

</BODY>
</HTML>