
<HTML>

<HEAD>
   <TITLE>Chapter 30 -- Package java.awt.peer</TITLE>
   <META NAME="GENERATOR" CONTENT="Mozilla/3.0b5aGold (WinNT; I) [Netscape]">
</HEAD>
<BODY TEXT="#000000" BGCOLOR="#FFFFFF" LINK="#0000EE" VLINK="#551A8B" ALINK="#CE2910">










<H1><FONT COLOR=#FF0000>Chapter 30</FONT></H1>
<H1><B><FONT SIZE=5 COLOR=#FF0000>Package </FONT><TT><FONT SIZE=6 COLOR=#FF0000 FACE="Courier">java.awt.peer</FONT></FONT></TT></H1>
<P>
<HR WIDTH="100%"></P>
<P>
<H3 ALIGN=CENTER><FONT COLOR="#000000"><FONT SIZE=+2>CONTENTS<A NAME="CONTENTS"></A>
</FONT></FONT></H3>

<UL>
<LI><A HREF="#ButtonPeer" >ButtonPeer</A>
<LI><A HREF="#CanvasPeer" >CanvasPeer</A>
<LI><A HREF="#CheckboxMenuItemPeer" >CheckboxMenuItemPeer</A>
<LI><A HREF="#CheckboxPeer" >CheckboxPeer</A>
<LI><A HREF="#ChoicePeer" >ChoicePeer</A>
<LI><A HREF="#ComponentPeer" >ComponentPeer</A>
<LI><A HREF="#ContainerPeer" >ContainerPeer</A>
<LI><A HREF="#DialogPeer" >DialogPeer</A>
<LI><A HREF="#FileDialogPeer" >FileDialogPeer</A>
<LI><A HREF="#FramePeer" >FramePeer</A>
<LI><A HREF="#LabelPeer" >LabelPeer</A>
<LI><A HREF="#ListPeer" >ListPeer</A>
<LI><A HREF="#MenuBarPeer" >MenuBarPeer</A>
<LI><A HREF="#MenuComponentPeer" >MenuComponentPeer</A>
<LI><A HREF="#MenuItemPeer" >MenuItemPeer</A>
<LI><A HREF="#MenuPeer" >MenuPeer</A>
<LI><A HREF="#PanelPeer" >PanelPeer</A>
<LI><A HREF="#ScrollbarPeer" >ScrollbarPeer</A>
<LI><A HREF="#TextAreaPeer" >TextAreaPeer</A>
<LI><A HREF="#TextComponentPeer" >TextComponentPeer</A>
<LI><A HREF="#TextFieldPeer" >TextFieldPeer</A>
<LI><A HREF="#WindowPeer" >WindowPeer</A>
</UL>
<HR>
<P>
<FONT COLOR=#000000>The </FONT><TT><FONT FACE="Courier">java.awt.peer</FONT></TT>
package is interesting in that it contains no classes. Every object
defined within the <TT><FONT FACE="Courier">java.awt.peer</FONT></TT>
package is an interface. By examining the contents of the classes
in the <TT><FONT FACE="Courier">java.awt</FONT></TT> package,
you will find that all of the GUI components in that package implement
the interfaces found in the <TT><FONT FACE="Courier">java.awt.peer</FONT></TT>
package. The remainder of this chapter lists the interfaces found
within the <TT><FONT FACE="Courier">java.awt.peer</FONT></TT>
package and these interfaces' methods. Table 30.1 shows the contents
of the <TT><FONT FACE="Courier">java.awt.peer</FONT></TT> package,
and Figure 30.1 shows the hierarchy of the contents of the package.
<P>
<A HREF="http://docs.rinet.ru/JavDev/f30-1.gif" ><B>Figure 30.1:</B> <I>Cotents of package </I>java.awt.peer.</A>
<BR>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=80%>
<TR VALIGN=TOP><TD><B>Note</B></TD></TR>
<TR VALIGN=TOP><TD>
<BLOCKQUOTE>
Nearly all of the methods defined in the <TT><FONT FACE="Courier">java.awt.peer</FONT></TT> interfaces are <I>friendly</I> methods. This means that they can only be accessed from within <TT><FONT FACE="Courier">java.awt</FONT></TT> package classes. 
Therefore, if you are developing a class for a package outside of <TT><FONT FACE="Courier">java.awt</FONT></TT> (which you probably are), these interfaces are not accessible. They are only provided to give some insight into <TT><FONT 
FACE="Courier">java.awt</FONT></TT> class functionality.
</BLOCKQUOTE>

</TD></TR>
</TABLE></CENTER>
<P>
<P>
<CENTER><B>Table 30.1. Contents of package </B><TT><B><FONT FACE="Courier">java.awt.peer</FONT></B></TT><B>.</B></CENTER>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=80%>
<TR VALIGN=TOP><TD COLSPAN=3 WIDTH=586><I>Interface index</I></TD></TR>
<TR VALIGN=TOP><TD WIDTH=214><TT><FONT FACE="Courier">ButtonPeer</FONT></TT>
</TD><TD WIDTH=186><TT><FONT FACE="Courier">FileDialogPeer</FONT></TT>
</TD><TD WIDTH=186><TT><FONT FACE="Courier">MenuPeer</FONT></TT>
</TD></TR>
<TR VALIGN=TOP><TD WIDTH=214><TT><FONT FACE="Courier">CanvasPeer</FONT></TT>
</TD><TD WIDTH=186><TT><FONT FACE="Courier">FramePeer</FONT></TT>
</TD><TD WIDTH=186><TT><FONT FACE="Courier">PanelPeer</FONT></TT>
</TD></TR>
<TR VALIGN=TOP><TD WIDTH=214><TT><FONT FACE="Courier">CheckboxMenuItemPeer</FONT></TT>
</TD><TD WIDTH=186><TT><FONT FACE="Courier">LabelPeer</FONT></TT>
</TD><TD WIDTH=186><TT><FONT FACE="Courier">ScrollbarPeer</FONT></TT>
</TD></TR>
<TR VALIGN=TOP><TD WIDTH=214><TT><FONT FACE="Courier">CheckboxPeer</FONT></TT>
</TD><TD WIDTH=186><TT><FONT FACE="Courier">ListPeer</FONT></TT>
</TD><TD WIDTH=186><TT><FONT FACE="Courier">TextAreaPeer</FONT></TT>
</TD></TR>
<TR VALIGN=TOP><TD WIDTH=214><TT><FONT FACE="Courier">ChoicePeer</FONT></TT>
</TD><TD WIDTH=186><TT><FONT FACE="Courier">MenuBarPeer</FONT></TT>
</TD><TD WIDTH=186><TT><FONT FACE="Courier">TextComponentPeer</FONT></TT>
</TD></TR>
<TR VALIGN=TOP><TD WIDTH=214><TT><FONT FACE="Courier">ComponentPeer</FONT></TT>
</TD><TD WIDTH=186><TT><FONT FACE="Courier">MenuComponentPeer</FONT></TT>
</TD><TD WIDTH=186><TT><FONT FACE="Courier">TextFieldPeer</FONT></TT>
</TD></TR>
<TR VALIGN=TOP><TD WIDTH=214><TT><FONT FACE="Courier">ContainerPeer</FONT></TT>
</TD><TD WIDTH=186><TT><FONT FACE="Courier">MenuItemPeer</FONT></TT>
</TD><TD WIDTH=186><TT><FONT FACE="Courier">WindowPeer</FONT></TT>
</TD></TR>
<TR VALIGN=TOP><TD WIDTH=214><TT><FONT FACE="Courier">DialogPeer</FONT></TT>
</TD><TD WIDTH=186>&nbsp;</TD><TD WIDTH=186>&nbsp;</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=8%><A NAME="ButtonPeer"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></A></TD><TD WIDTH=499>
<H2><FONT SIZE=5 COLOR=#FF0000>ButtonPeer</FONT></H2>

</TD><TD WIDTH=8%><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Extends.gif"></FONT></TT></TD>
<TD><FONT FACE="Courier">ComponentPeer</FONT> </TD>
</TR>
</TABLE></CENTER>
<P>
<P>
The <TT><FONT FACE="Courier">ButtonPeer</FONT></TT> interface
extends interface <TT><FONT FACE="Courier">java.awt.peer.ComponentPeer</FONT></TT>.
The <TT><FONT FACE="Courier">ButtonPeer</FONT></TT> interface
provides the basic structure required for button component functionality.
<P>
Listing 30.1 shows the declarations for all of the public methods
included in the <TT><FONT FACE="Courier">java.awt.peer.ButtonPeer</FONT></TT>
interface.
<HR>
<BLOCKQUOTE>
<B>Listing 30.1. Members of </B><TT><B><FONT FACE="Courier">java.awt.peer.ButtonPeer</FONT></B></TT><B>.
<BR>
</B>
</BLOCKQUOTE>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public interface ButtonPeer extends ComponentPeer
{<BR>
&nbsp;&nbsp;void setLabel(String label)<BR>
}</FONT></TT>
</BLOCKQUOTE>
<HR>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></H4>
</TD><TD ><H4><TT><FONT FACE="Courier">setLabel</FONT></TT></H4>

</TD><TD WIDTH=8%><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">ButtonPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">void setLabel(String label)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">setLabel()</FONT></TT> method should
set the displayed label for the <TT><FONT FACE="Courier">Button</FONT></TT>
using the specified label string.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD><FONT FACE="Courier">Label</FONT> is a <TT><FONT FACE="Courier">String</FONT></TT> that will be displayed as the button's label.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=8%><A NAME="CanvasPeer"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></A></TD><TD WIDTH=499>
<H2><FONT SIZE=5 COLOR=#FF0000>CanvasPeer</FONT></H2>

</TD><TD WIDTH=8%><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Extends.gif"></FONT></TT>


</TD><TD>
<FONT FACE="Courier">ComponentPeer </FONT>

</TD></TR>
</TABLE></CENTER>

<P>
<P>
The <TT><FONT FACE="Courier">CanvasPeer</FONT></TT> interface
extends interface <TT><FONT FACE="Courier">java.awt.peer.ComponentPeer</FONT></TT>.
The <TT><FONT FACE="Courier">CanvasPeer</FONT></TT> interface
provides the basic structure required for canvas component functionality.
<P>
Listing 30.2 shows the declarations for all of the public methods
included in the <TT><FONT FACE="Courier">java.awt.peer.ComponentPeer</FONT></TT>
interface.
<HR>
<BLOCKQUOTE>
<B>Listing 30.2. Members of </B><TT><B><FONT FACE="Courier">java.awt.peer.CanvasPeer</FONT></B></TT><B>.
<BR>
</B>
</BLOCKQUOTE>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public interface CanvasPeer extends ComponentPeer
{<BR>
}</FONT></TT>
</BLOCKQUOTE>
<HR>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=8%><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></TD><TD WIDTH=499><H2><FONT SIZE=5 COLOR=#FF0000><A NAME="CheckboxMenuItemPeer">CheckboxMenuItemPeer</A></FONT></H2>

</TD><TD WIDTH=8%><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Extends.gif"></FONT></TT></TD>
<TD><FONT FACE="Courier">MenuItemPeer</FONT> </TD></TR>
</TABLE></CENTER>
<P>
<P>
The <TT><FONT FACE="Courier">CheckboxMenuItemPeer</FONT></TT>
interface extends interface <TT><FONT FACE="Courier">java.awt.peer.MenuItemPeer</FONT></TT>.
The <TT><FONT FACE="Courier">CheckboxMenuItemPeer</FONT></TT>
interface provides the basic structure required for <TT><FONT FACE="Courier">CheckboxMenuItem</FONT></TT>
component functionality.
<P>
Listing 30.3 shows the declarations for all of the public methods
included in the <TT><FONT FACE="Courier">java.awt.peer.CheckboxMenuItemPeer</FONT></TT>
interface.
<HR>
<BLOCKQUOTE>
<B>Listing 30.3. Members of </B><TT><B><FONT FACE="Courier">java.awt.peer.CheckboxMenuItemPeer</FONT></B></TT><B>.
<BR>
</B>
</BLOCKQUOTE>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public interface CheckboxMenuItemPeer
extends MenuItemPeer {<BR>
&nbsp;</FONT></TT>&nbsp;void setState(boolean t)<BR>
}
</BLOCKQUOTE>
<HR>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">setState</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">CheckboxMenuItemPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">void setState(boolean t)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">setState()</FONT></TT> method sets
the checked state of a <TT><FONT FACE="Courier">CheckboxMenuItem</FONT></TT>.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD><FONT FACE="Courier">t</FONT> is a Boolean value that will be <TT><FONT FACE="Courier">true</FONT></TT> if the <TT><FONT FACE="Courier">Checkbox</FONT></TT> is to be checked, <TT><FONT FACE="Courier">false</FONT></TT> if not.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=8%><A NAME="CheckboxPeer"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></A></TD><TD WIDTH=499>
<H2><FONT SIZE=5 COLOR=#FF0000>CheckboxPeer</FONT></H2>

</TD><TD WIDTH=8%><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Extends.gif"></FONT></TT></TD>
<TD><FONT FACE="Courier">ComponentPeer</FONT> </TD>
</TR>
</TABLE></CENTER>
<P>
<P>
The <TT><FONT FACE="Courier">CheckboxPeer</FONT></TT> interface
extends interface <TT><FONT FACE="Courier">java.awt.peer.ComponentPeer</FONT></TT>.
The <TT><FONT FACE="Courier">CheckboxPeer</FONT></TT> interface
provides the basic structure required for checkbox component functionality.
<P>
Listing 30.4 shows the declarations for all of the public methods
included in the <TT><FONT FACE="Courier">java.awt.peer.CheckboxPeer</FONT></TT>
interface.
<HR>
<BLOCKQUOTE>
<B>Listing 30.4. Members of </B><TT><B><FONT FACE="Courier">java.awt.peer.CheckboxPeer</FONT></B></TT><B>.
<BR>
</B>
</BLOCKQUOTE>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public interface CheckboxPeer extends
ComponentPeer {<BR>
&nbsp;&nbsp;void setState(boolean state)<BR>
&nbsp;&nbsp;void setCheckboxGroup(CheckboxGroup g)<BR>
&nbsp;&nbsp;void setLabel(String label)<BR>
}</FONT></TT>
</BLOCKQUOTE>
<HR>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">setState</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></H4>

</TD><TD WIDTH=20%><H4><FONT FACE="Courier">CheckboxPeer</FONT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">void setState(boolean state)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">setState()</FONT></TT> method sets
the checked state of a <TT><FONT FACE="Courier">Checkbox</FONT></TT>.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD><FONT FACE="Courier">t</FONT> is a Boolean value that should be set to <TT><FONT FACE="Courier">true</FONT></TT> if the <TT><FONT FACE="Courier">Checkbox</FONT></TT> is to be checked, <TT><FONT FACE="Courier">false</FONT></TT>  if not.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">SetCheckboxGroup</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></H4>

</TD><TD WIDTH=20%><H4><FONT FACE="Courier">CheckboxPeer</FONT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">void setCheckboxGroup(CheckboxGroup g)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">setCheckboxGroup()</FONT></TT> method
should set which checkbox group the checkbox belongs to using
the specified <TT><FONT FACE="Courier">CheckboxGroup</FONT></TT>.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD><FONT FACE="Courier">g</FONT> is a <TT><FONT FACE="Courier">CheckboxGroup</FONT></TT> object of which this <TT><FONT FACE="Courier">Checkbox</FONT></TT> will be a member.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">setLabel</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></H4>

</TD><TD WIDTH=20%><H4><FONT FACE="Courier">CheckboxPeer</FONT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">void setLabel(String label)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">setLabel()</FONT></TT> method should
set the displayed label for the <TT><FONT FACE="Courier">Checkbox</FONT></TT>
using the specified label string.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD><FONT FACE="Courier">label</FONT> is a <TT><FONT FACE="Courier">String</FONT></TT> that will be displayed as the checkbox's label.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=8%><A NAME="ChoicePeer"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></A></TD><TD WIDTH=499>
<H2><FONT SIZE=5 COLOR=#FF0000>ChoicePeer</FONT></H2>

</TD><TD WIDTH=8%><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Extends.gif"></FONT></TT></TD>
<TD><FONT FACE="Courier">ComponentPeer</FONT> </TD>
</TR>
</TABLE></CENTER>
<P>
<P>
The <TT><FONT FACE="Courier">ChoicePeer</FONT></TT> interface
extends interface <TT><FONT FACE="Courier">java.awt.peer.ComponentPeer</FONT></TT>.
The <TT><FONT FACE="Courier">ChoicePeer</FONT></TT> interface
provides the basic structure required for <TT><FONT FACE="Courier">Choice</FONT></TT>
component functionality.
<P>
Listing 30.5 shows the declarations for all of the public methods
included in the <TT><FONT FACE="Courier">java.awt.peer.ChoicePeer</FONT></TT>
interface.
<HR>
<BLOCKQUOTE>
<B>Listing 30.5. Members of </B><TT><B><FONT FACE="Courier">java.awt.peer.ChoicePeer</FONT></B></TT><B>.
<BR>
</B>
</BLOCKQUOTE>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public interface ChoicePeer extends ComponentPeer
{<BR>
&nbsp;&nbsp;void addItem(String item, int index)<BR>
&nbsp;&nbsp;void select(int index)<BR>
}</FONT></TT>
</BLOCKQUOTE>
<HR>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">addItem</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">ChoicePeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">void addItem(String item, int index)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">addItem()</FONT></TT> method adds
the specified item to the <TT><FONT FACE="Courier">Choice</FONT></TT>
list at the specified list index.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD><FONT FACE="Courier">item</FONT> is a <TT><FONT FACE="Courier">String</FONT></TT> value representing the item to be added to the <TT><FONT FACE="Courier">Choice</FONT></TT> list.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD><FONT FACE="Courier">index</FONT> is the integer index into the <TT><FONT FACE="Courier">Choice</FONT></TT> list where the item parameter is to be added.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">select</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">ChoicePeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">void select(int index)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">select()</FONT></TT> method selects
the <TT><FONT FACE="Courier">Choice</FONT></TT> list item at the
specified index.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD><FONT FACE="Courier">index</FONT> is the index into the <TT><FONT FACE="Courier">Choice</FONT></TT> list to be selected.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=8%><A NAME="ComponentPeer"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></A></TD><TD WIDTH=499>
<H2><FONT SIZE=5 COLOR=#FF0000>ComponentPeer</FONT></H2>

</TD><TD WIDTH=8%><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Extends.gif"></FONT></TT></TD>
<TD><FONT FACE="Courier">Object</FONT> </TD></TR>
</TABLE></CENTER>
<P>
<P>
The <TT><FONT FACE="Courier">ComponentPeer</FONT></TT> interface
extends class <TT><FONT FACE="Courier">java.lang.Object</FONT></TT>.
The <TT><FONT FACE="Courier">ComponentPeer</FONT></TT> interface
provides the basic structure required for component functionality.
<P>
Listing 30.6 shows the declarations for all of the public methods
included in the <TT><FONT FACE="Courier">java.awt.peer.ComponentPeer</FONT></TT>
interface.
<HR>
<BLOCKQUOTE>
<B>Listing 30.6. Members of </B><TT><B><FONT FACE="Courier">java.awt.peer.ComponentPeer</FONT></B></TT><B>.
<BR>
</B>
</BLOCKQUOTE>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public interface ComponentPeer {</FONT></TT>
</BLOCKQUOTE>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">&nbsp;&nbsp;void&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;show()
<BR>
&nbsp;&nbsp;void&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hide()
<BR>
&nbsp;&nbsp;void&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;enable()
<BR>
&nbsp;&nbsp;void&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;disable()
<BR>
&nbsp;&nbsp;void&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;paint(Graphics
g)<BR>
&nbsp;&nbsp;void&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;repaint(long
tm, int x, int y, int width, int height)<BR>
&nbsp;&nbsp;void&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(Graphics
g)<BR>
&nbsp;&nbsp;void&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reshape(int
x, int y, int width, int height)<BR>
&nbsp;&nbsp;boolean&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
handleEvent(Event e)<BR>
&nbsp;&nbsp;Dimension&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
minimumSize()<BR>
&nbsp;&nbsp;Dimension&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
preferredSize()<BR>
&nbsp;&nbsp;ColorModel&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getColorModel()
<BR>
&nbsp;&nbsp;java.awt.Toolkit&nbsp;&nbsp;&nbsp;&nbsp;getToolkit()
<BR>
&nbsp;&nbsp;Graphics&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getGraphics()
<BR>
&nbsp;&nbsp;FontMetrics&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getFontMetrics(Font
font)<BR>
&nbsp;&nbsp;void&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dispose()
<BR>
&nbsp;&nbsp;void&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setForeground(Color
c)<BR>
&nbsp;&nbsp;void&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setBackground(Color
c)<BR>
&nbsp;&nbsp;void&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setFont(Font
f)<BR>
&nbsp;&nbsp;void&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;requestFocus()
<BR>
&nbsp;&nbsp;void&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nextFocus()
<BR>
&nbsp;&nbsp;Image&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;createImage(ImageProducer
producer)<BR>
&nbsp;&nbsp;Image&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;createImage(int
width, int height)<BR>
&nbsp;&nbsp;boolean&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
prepareImage(Image img, int w, int h, ImageObserver o)<BR>
&nbsp;&nbsp;int&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
checkImage(Image img, int w, int h, ImageObserver o)<BR>
}</FONT></TT>
</BLOCKQUOTE>
<HR>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">show</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">ComponentPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">void show()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">show()</FONT></TT> method should
be implemented to make the <TT><FONT FACE="Courier">Component</FONT></TT>
object visible.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD>None</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">hide</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">ComponentPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">void hide()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">hide()</FONT></TT> method should
hide the component so that is not visible.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD>None</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">enable</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">ComponentPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">void enable()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">enable()</FONT></TT> method should
enable the component so that it can be selected by the user.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD>None</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">disable</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">ComponentPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">void disable()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">disable()</FONT></TT> method should
disable the component (gray it out, etc.) so that it cannot be
selected by the user.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD>None</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">paint</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">ComponentPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">void paint(Graphics g)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">paint()</FONT></TT> method should
display the component using the specified <TT><FONT FACE="Courier">Graphics</FONT></TT>
context.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD><FONT FACE="Courier">g</FONT> is a <TT><FONT FACE="Courier">Graphics</FONT></TT> object used for drawing purposes. For more information on the <TT><FONT FACE="Courier">Graphics</FONT></TT> class, see the documentation in <A HREF="ch28.htm" >Chapter 
28</A>, &quot;Package <TT><FONT FACE="Courier">java.awt</FONT></TT>.&quot;
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">repaint</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">ComponentPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">void repaint(long tm, int x, int y, int
width, int height)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">repaint()</FONT></TT> method repaints
a part of the component at some specified time in the future.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD><FONT FACE="Courier">tm</FONT> sets the maximum time in milliseconds before the update.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD><FONT FACE="Courier">x</FONT> is the x coordinate of the component's bounding rectangle to repaint.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD><FONT FACE="Courier">y</FONT> is the y coordinate of the component's bounding rectangle to repaint.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD><FONT FACE="Courier">width</FONT> is the width of the component's bounding rectangle to repaint.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD><FONT FACE="Courier">height</FONT> is the height of the component's bounding rectangle to repaint.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">print</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">ComponentPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">void print(Graphics g)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">print()</FONT></TT> method should
print the component using the specified <TT><FONT FACE="Courier">Graphics</FONT></TT>
object.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD><FONT FACE="Courier">g</FONT> is a <TT><FONT FACE="Courier">Graphics</FONT></TT> object used for drawing purposes. For more information on the <TT><FONT FACE="Courier">Graphics</FONT></TT> class, see the documentation in <A HREF="ch28.htm" >Chapter 
28</A>.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">reshape</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">ComponentPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">void reshape(int x, int y, int width,
int height)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">reshape()</FONT></TT> method reshapes
the component to the specified bounding rectangle.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD><FONT FACE="Courier">x</FONT> is the x coordinate of the component's new bounding rectangle.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD><FONT FACE="Courier">y</FONT> is the y coordinate of the component's new bounding rectangle.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD><FONT FACE="Courier">width</FONT> is the width of the component's new bounding rectangle.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD><FONT FACE="Courier">height</FONT> is the height of the component's new bounding rectangle.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">handleEvent</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">ComponentPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">boolean handleEvent(Event e)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">handleEvent()</FONT></TT> method
should handle the specified event for the component.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD><FONT FACE="Courier">e</FONT> is an <TT><FONT FACE="Courier">Event</FONT></TT> object encapsulating some system event. For more information on the <TT><FONT FACE="Courier">Event</FONT></TT> class, see the documentation in <A HREF="ch28.htm" >Chapter 
28</A>.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT>
</TD><TD>A Boolean value that should be <TT><FONT FACE="Courier">true</FONT></TT> if the event was handled.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">minimumSize</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">ComponentPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">Dimension minimumSize()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">minimumSize()</FONT></TT> method
returns the minimum size allowable for the component.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD>A <TT><FONT FACE="Courier">Dimension</FONT></TT> object containing the component's minimum size. For more information on the <TT><FONT FACE="Courier">Dimension</FONT></TT> class, see the documentation in <A HREF="ch28.htm" >Chapter 28</A>.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">preferredSize</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">ComponentPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">Dimension preferredSize()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">preferredSize()</FONT></TT> method
returns the preferred size allowable for the component.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD>A <TT><FONT FACE="Courier">Dimension</FONT></TT> object containing the component's preferred size. For more information on the <TT><FONT FACE="Courier">Dimension</FONT></TT> class, see the documentation in <A HREF="ch28.htm" >Chapter 28</A>.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getColorModel</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">ComponentPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">ColorModel getColorModel()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">getColorModel()</FONT></TT> method
returns the <TT><FONT FACE="Courier">ColorModel</FONT></TT> used
for this component.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD>A <TT><FONT FACE="Courier">ColorModel</FONT></TT> object that contains the component's <TT><FONT FACE="Courier">ColorModel</FONT></TT> information. For more information on the <TT><FONT FACE="Courier">ColorModel</FONT></TT> class, see the documentation 
in <A HREF="ch29.htm" >Chapter 29</A>, &quot;Package <TT><FONT FACE="Courier">java.awt.image</FONT></TT>.&quot;
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getToolkit</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">ComponentPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">Toolkit getToolkit()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">getToolkit()</FONT></TT> method returns
the component's managing <TT><FONT FACE="Courier">Toolkit</FONT></TT>.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD>A <TT><FONT FACE="Courier">Toolkit</FONT></TT> object. For more information on the <TT><FONT FACE="Courier">Toolkit</FONT></TT> class, see the documentation in <A HREF="ch28.htm" >Chapter 28</A>.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getGraphics</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">ComponentPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">Graphics getGraphics()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">getGraphics()</FONT></TT> method
returns a <TT><FONT FACE="Courier">Graphics</FONT></TT> context
for the component.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD>A <TT><FONT FACE="Courier">Graphics</FONT></TT> class used for drawing purposes. For more information on the <TT><FONT FACE="Courier">Graphics</FONT></TT> class, see the documentation in <A HREF="ch28.htm" >Chapter 28</A>.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getFontMetrics</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">ComponentPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">FontMetrics getFontMetrics(Font font)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">getFontMetrics()</FONT></TT> method
returns the <TT><FONT FACE="Courier">FontMetrics</FONT></TT> information
for the specified <TT><FONT FACE="Courier">Font</FONT></TT>.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD><FONT FACE="Courier">font</FONT> is a <TT><FONT FACE="Courier">Font</FONT></TT> object. For more information on the <TT><FONT FACE="Courier">Font</FONT></TT> class, see the documentation in <A HREF="ch28.htm" >Chapter 28</A>.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT>
</TD><TD>A <TT><FONT FACE="Courier">FontMetrics</FONT></TT> object containing metrics information on the specified font. For more information on the <TT><FONT FACE="Courier">FontMetrics</FONT></TT> class, see the documentation in <A HREF="ch28.htm" 
>Chapter 28</A>.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">dispose</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">ComponentPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">void dispose()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">dispose()</FONT></TT> method disposes
of a component's resources and the component itself.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD>None</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">setForeground</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">ComponentPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">void setForeground(Color c)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">setForeground()</FONT></TT> method
sets the foreground color for the component using the specified
color.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD><FONT FACE="Courier">c</FONT> is a <TT><FONT FACE="Courier">Color</FONT></TT> object specifying which color to use for the foreground color. For more information on the <TT><FONT FACE="Courier">Color</FONT></TT> class, see the documentation in <A 
HREF="ch28.htm" >Chapter 28</A>.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">setBackground</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">ComponentPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">void setBackground(Color c)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">setBackground()</FONT></TT> method
sets the background color for the component using the specified
color.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD><FONT FACE="Courier">c</FONT> is a <TT><FONT FACE="Courier">Color</FONT></TT> object specifying which color to use for the background color. For more information on the <TT><FONT FACE="Courier">Color</FONT></TT> class, see the documentation in <A 
HREF="ch28.htm" >Chapter 28</A>.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">setFont</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">ComponentPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">void setFont(Font f)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">setFont()</FONT></TT> method sets
the font to use for this component using the specified font.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD><FONT FACE="Courier">f</FONT> is a <TT><FONT FACE="Courier">Font</FONT></TT> object specifying which font to use for the component. For more information on the <TT><FONT FACE="Courier">Font</FONT></TT> class, see the documentation in <A HREF="ch28.htm" 
>Chapter 28</A>.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">requestFocus</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">ComponentPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">void requestFocus()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">requestFocus()</FONT></TT> method
requests the input focus for the component.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD>None</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">nextFocus</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">ComponentPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">void nextFocus()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">nextFocus()</FONT></TT> method shifts
the focus to the next component on the screen.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD>None</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">createImage</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">ComponentPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">Image createImage(ImageProducer producer)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">createImage()</FONT></TT> method
creates an <TT><FONT FACE="Courier">Image</FONT></TT> object using
the specified <TT><FONT FACE="Courier">ImageProducer</FONT></TT>
 interface.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD><FONT FACE="Courier">producer</FONT> is an <TT><FONT FACE="Courier">ImageProducer</FONT></TT> interface used to produce an image. For more information on the <TT><FONT FACE="Courier">ImageProducer</FONT></TT> interface, see the documentation in <A 
HREF="ch29.htm" >Chapter 29</A>.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT>
</TD><TD>An <TT><FONT FACE="Courier">Image</FONT></TT> object. For more information on the <TT><FONT FACE="Courier">Image</FONT></TT> class, see the documentation in <A HREF="ch28.htm" >Chapter 28</A>.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">createImage</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">ComponentPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">Image createImage(int width, int height)</FONT></TT>
</BLOCKQUOTE>
<P>
This <TT><FONT FACE="Courier">createImage()</FONT></TT> method
creates an image for off-screen use using the specified sizes.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><FONT FACE="Courier">width</FONT> is the width of the image to be created.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><FONT FACE="Courier">height</FONT> is the height of the image to be created.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT>
</TD><TD >An <TT><FONT FACE="Courier">Image</FONT></TT> object. For more information on the <TT><FONT FACE="Courier">Image</FONT></TT> class, see the documentation in <TT><FONT FACE="Courier"> <A HREF="ch28.htm" >Chapter 28</A></FONT>.</TT>
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">prepareImage</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">ComponentPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">boolean prepareImage(Image img, int w,
int h, ImageObserver o)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">prepareImage()</FONT></TT> method
prepares the image for rendering on this component using the specified
parameters.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><FONT FACE="Courier">Img</FONT> is an <TT><FONT FACE="Courier">Image</FONT></TT> object to be rendered. For more information on the <TT><FONT FACE="Courier">Image</FONT></TT> class, see the documentation in <A HREF="ch28.htm" >Chapter 28</A>.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><FONT FACE="Courier">w</FONT> is the width of the rectangle in which to render the image.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><FONT FACE="Courier">h</FONT> is the height of the rectangle in which to render the image.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><FONT FACE="Courier">o</FONT> is the <TT><FONT FACE="Courier">ImageObserver</FONT></TT> interface used to monitor the <TT><FONT FACE="Courier">Image</FONT></TT> rendering. For more information on the <TT><FONT 
FACE="Courier">ImageObserver</FONT></TT> interface, see the documentation in <A HREF="ch29.htm" >Chapter 29</A>.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT>
</TD><TD >A Boolean value that is <TT><FONT FACE="Courier">true</FONT></TT> if the image was rendered successfully, <TT><FONT FACE="Courier">false</FONT></TT> if not.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">checkImage</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">ComponentPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">int checkImage(Image img, int w, int
h, ImageObserver o)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">checkImage()</FONT></TT> method returns
the status of a scaled rendering of a specified <TT><FONT FACE="Courier">Image</FONT></TT>.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><FONT FACE="Courier">img</FONT> is an <TT><FONT FACE="Courier">Image</FONT></TT> object to be rendered. For more information on the <TT><FONT FACE="Courier">Image</FONT></TT> class, see the documentation in <A HREF="ch28.htm" >Chapter 28</A>.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><FONT FACE="Courier">w</FONT> is the width of the rectangle in which to render the image.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><FONT FACE="Courier">h</FONT> is the height of the rectangle in which to render the image.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><FONT FACE="Courier">o</FONT> is the <TT><FONT FACE="Courier">ImageObserver</FONT></TT> interface used to monitor the <TT><FONT FACE="Courier">Image</FONT></TT> rendering. For more information on the <TT><FONT 
FACE="Courier">ImageObserver</FONT></TT> interface, see the documentation in <A HREF="ch29.htm" >Chapter 29</A>.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT>
</TD><TD >An integer value containing the Boolean <TT><FONT FACE="Courier">OR</FONT></TT> of the <TT><FONT FACE="Courier">ImageObserver</FONT></TT> status flags. For more information on the <TT><FONT FACE="Courier">ImageObserver</FONT></TT> class, see the 
documentation in <A HREF="ch29.htm" >Chapter 29</A>.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=8%><A NAME="ContainerPeer"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></A></TD><TD WIDTH=499>
<H2><FONT SIZE=5 COLOR=#FF0000>ContainerPeer</FONT></H2>

</TD><TD WIDTH=8%><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Extends.gif"></FONT></TT></TD>
<TD ><FONT FACE="Courier">ComponentPeer</FONT> </TD>
</TR>
</TABLE></CENTER>
<P>
<P>
The <TT><FONT FACE="Courier">ContainerPeer</FONT></TT> interface
extends interface <TT><FONT FACE="Courier">java.awt.peer.ComponentPeer</FONT></TT>.
The <TT><FONT FACE="Courier">ContainerPeer</FONT></TT> interface
provides the basic structure required for container component
functionality.
<P>
Listing 30.7 shows the declarations for all of the public methods
included in the <TT><FONT FACE="Courier">java.awt.peer.ContainerPeer</FONT></TT>
interface.
<HR>
<BLOCKQUOTE>
<B>Listing 30.7. Members of </B><TT><B><FONT FACE="Courier">java.awt.peer.ContainerPeer</FONT></B></TT><B>.
<BR>
</B>
</BLOCKQUOTE>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public interface ContainerPeer extends
ComponentPeer {<BR>
&nbsp;&nbsp;Insets insets()<BR>
}</FONT></TT>
</BLOCKQUOTE>
<HR>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">insets</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">ContainerPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">Insets insets()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">insets()</FONT></TT> method returns
an <TT><FONT FACE="Courier">Insets</FONT></TT> object representing
the <TT><FONT FACE="Courier">Insets</FONT></TT> of the container.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >An <TT><FONT FACE="Courier">Insets</FONT></TT> object. For more information on the <TT><FONT FACE="Courier">Insets</FONT></TT> class, see the documentation in <A HREF="ch28.htm" >Chapter 28</A>.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=8%><A NAME="DialogPeer"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></A></TD><TD WIDTH=499>
<H2><FONT SIZE=5 COLOR=#FF0000>DialogPeer</FONT></H2>

</TD><TD WIDTH=8%><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Extends.gif"></FONT></TT></TD>
<TD ><FONT FACE="Courier">WindowPeer</FONT> </TD></TR>
</TABLE></CENTER>
<P>
<P>
The <TT><FONT FACE="Courier">DialogPeer</FONT></TT> interface
extends the <TT><FONT FACE="Courier">java.awt.peer.WindowPeer</FONT></TT>
interface. The <TT><FONT FACE="Courier">DialogPeer</FONT></TT>
 interface provides the basic structure required for dialog box
component functionality.
<P>
Listing 30.8 shows the declarations for all of the public methods
included in the <TT><FONT FACE="Courier">java.awt.peer.WindowPeer</FONT></TT>
interface.
<HR>
<BLOCKQUOTE>
<B>Listing 30.8. Members of </B><TT><B><FONT FACE="Courier">java.awt.peer.DialogPeer</FONT></B></TT><B>.
<BR>
</B>
</BLOCKQUOTE>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public interface DialogPeer extends WindowPeer
{<BR>
&nbsp;&nbsp;void setTitle(String title)<BR>
&nbsp;&nbsp;void setResizable(boolean resizeable)<BR>
}</FONT></TT>
</BLOCKQUOTE>
<HR>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">setTitle</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">DialogPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">void setTitle(String title)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">setTitle()</FONT></TT> method sets
the title to be displayed on the dialog's title bar.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><FONT FACE="Courier">title</FONT> is a <TT><FONT FACE="Courier">String</FONT></TT> value that will be used as the dialog's title.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">setResizable</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">DialogPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">void setResizable(boolean resizeable)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">setResizable()</FONT></TT> method
determines the dialog's resize state.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></TD><TD ><TT><FONT FACE="Courier">resizeable</FONT></TT> is a Boolean value that is <TT><FONT FACE="Courier">true</FONT></TT> if the dialog can be resized, <TT><FONT FACE="Courier">false</FONT></TT> if 
not.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=8%><A NAME="FileDialogPeer"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></A></TD><TD WIDTH=499>
<H2><FONT SIZE=5 COLOR=#FF0000>FileDialogPeer</FONT></H2>

</TD><TD WIDTH=8%><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Extends.gif"></FONT></TT></TD>
<TD ><FONT FACE="Courier">DialogPeer</FONT> </TD></TR>
</TABLE></CENTER>
<P>
<P>
The <TT><FONT FACE="Courier">FileDialogPeer</FONT></TT> interface
extends interface <TT><FONT FACE="Courier">java.awt.peer.DialogPeer</FONT></TT>.
The <TT><FONT FACE="Courier">FileDialogPeer</FONT></TT> interface
provides the basic structure required for file selection dialog
component functionality.
<P>
Listing 30.9 shows the declarations for all of the public methods
included in the <TT><FONT FACE="Courier">java.awt.peer.FileDialogPeer</FONT></TT>
interface.
<HR>
<BLOCKQUOTE>
<B>Listing 30.9. Members of </B><TT><B><FONT FACE="Courier">java.awt.peer.FileDialogPeer</FONT></B></TT><B>.
<BR>
</B>
</BLOCKQUOTE>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public interface FileDialogPeer extends
DialogPeer {<BR>
&nbsp;&nbsp;void setFile(String file)<BR>
&nbsp;&nbsp;void setDirectory(String dir)<BR>
&nbsp;&nbsp;void setFilenameFilter(FilenameFilter filter)<BR>
}</FONT></TT>
</BLOCKQUOTE>
<HR>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">setFile</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">FileDialogPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">void setFile(String file)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">setFile()</FONT></TT> method sets
the filename to be displayed in the <TT><FONT FACE="Courier">FileDialog</FONT></TT>.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></TD><TD ><TT><FONT FACE="Courier">file</FONT></TT> is a <TT><FONT FACE="Courier">String</FONT></TT> value representing a filename.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">setDirectory</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">FileDialogPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">void setDirectory(String dir)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">setDirectory()</FONT></TT> method
sets the directory to be selected in the <TT><FONT FACE="Courier">FileDialog</FONT></TT>.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></TD><TD ><TT><FONT FACE="Courier">dir</FONT></TT> is a <TT><FONT FACE="Courier">String</FONT></TT> value representing the directory name.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">setFilenameFilter</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">FileDialogPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">void setFilenameFilter(FilenameFilter
filter)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">setFilenameFilter()</FONT></TT> sets
the filter to be used in the <TT><FONT FACE="Courier">FileDialog</FONT></TT>.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></TD><TD ><TT><FONT FACE="Courier">filter</FONT></TT> is a <TT><FONT FACE="Courier">FilenameFilter</FONT></TT> object used to filter filenames. For more information on the <TT><FONT 
FACE="Courier">FilenameFilter</FONT></TT> interface, see the documentation for the <TT><FONT FACE="Courier">java.io</FONT></TT> package in <A HREF="ch31.htm" >Chapter 31</A>, &quot;Package <TT><FONT FACE="Courier">java.io</FONT></TT>.&quot;
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=8%><A NAME="FramePeer"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></A></TD><TD WIDTH=499>
<H2><FONT SIZE=5 COLOR=#FF0000>FramePeer</FONT></H2>

</TD><TD WIDTH=8%><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Extends.gif"></FONT></TT></TD>
<TD ><FONT FACE="Courier">WindowPeer</FONT> </TD></TR>
</TABLE></CENTER>
<P>
<P>
The <TT><FONT FACE="Courier">FramePeer</FONT></TT> interface extends
interface <TT><FONT FACE="Courier">java.awt.peer.WindowPeer</FONT></TT>.
The <TT><FONT FACE="Courier">FramePeer</FONT></TT> interface provides
the basic structure required for frame component functionality.
<P>
Listing 30.10 shows the declarations for all of the public methods
included in the <TT><FONT FACE="Courier">java.awt.peer.FramePeer</FONT></TT>
interface.
<HR>
<BLOCKQUOTE>
<B>Listing 30.10. Members of </B><TT><B><FONT FACE="Courier">java.awt.peer.FramePeer</FONT></B></TT><B>.
<BR>
</B>
</BLOCKQUOTE>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public interface FramePeer extends WindowPeer
{<BR>
&nbsp;&nbsp;void setTitle(String title)<BR>
&nbsp;&nbsp;void setIconImage(Image im)<BR>
&nbsp;&nbsp;void setMenuBar(MenuBar mb)<BR>
&nbsp;&nbsp;void setResizable(boolean resizeable)<BR>
&nbsp;&nbsp;void setCursor(int cursorType)<BR>
}</FONT></TT>
</BLOCKQUOTE>
<HR>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">setTitle</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">FramePeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">void setTitle(String title)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">setTitle()</FONT></TT> method sets
the title of the frame to the specified title string.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></TD><TD ><TT><FONT FACE="Courier">title</FONT></TT> is a <TT><FONT FACE="Courier">String</FONT></TT> value representing the frame's title.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">setIconImage</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">FramePeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">void setIconImage(Image im)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">setIconImage()</FONT></TT> method
sets the image to be used when the frame is iconized.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></TD><TD ><TT><FONT FACE="Courier">im</FONT></TT> is an <TT><FONT FACE="Courier">Image</FONT></TT> object. For more information on the <TT><FONT FACE="Courier">Image</FONT></TT> class, see the documentation 
in <A HREF="ch28.htm" >Chapter 28</A>.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">setMenuBar</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">FramePeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">void setMenuBar(MenuBar mb)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">setMenuBar()</FONT></TT> method sets
the menu bar to be used for the frame.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></TD><TD ><TT><FONT FACE="Courier">mb</FONT></TT> is a <TT><FONT FACE="Courier">MenuBar</FONT></TT> object. For more information on the <TT><FONT FACE="Courier">MenuBar</FONT></TT> class, see the 
documentation in <A HREF="ch28.htm" >Chapter 28</A>.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">setResizable</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">FramePeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">void setResizable(boolean resizeable)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">setResizable()</FONT></TT> method
determines the resize state of the frame.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></TD><TD ><TT><FONT FACE="Courier">resizeable</FONT></TT> is a Boolean value that is <TT><FONT FACE="Courier">true</FONT></TT> if the frame can be resized, <TT><FONT FACE="Courier">false</FONT></TT> if not.

</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">setCursor</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">FramePeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">void setCursor(int cursorType)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">setCursor()</FONT></TT> method sets
the cursor type for the frame.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></TD><TD ><TT><FONT FACE="Courier">cursorType</FONT></TT> is an integer value representing the cursor type. For more information on the <TT><FONT FACE="Courier">Frame</FONT></TT> class, see the 
documentation in <A HREF="ch28.htm" >Chapter 28</A>.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=8%><A NAME="LabelPeer"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></A></TD><TD WIDTH=499>
<H2><FONT SIZE=5 COLOR=#FF0000>LabelPeer</FONT></H2>

</TD><TD WIDTH=8%><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Extends.gif"></FONT></TT></TD>
<TD ><FONT FACE="Courier">ComponentPeer</FONT> </TD>
</TR>
</TABLE></CENTER>
<P>
<P>
The <TT><FONT FACE="Courier">LabelPeer</FONT></TT> interface extends
interface <TT><FONT FACE="Courier">java.awt.peer.ComponentPeer</FONT></TT>.
The <TT><FONT FACE="Courier">LabelPeer</FONT></TT> interface provides
the basic structure required for label component functionality.
<P>
Listing 30.11 shows the declarations for all of the public methods
included in the <TT><FONT FACE="Courier">java.awt.peer.LabelPeer</FONT></TT>
interface.
<HR>
<BLOCKQUOTE>
<B>Listing 30.11. Members of </B><TT><B><FONT FACE="Courier">java.awt.peer.LabelPeer</FONT></B></TT><B>.
<BR>
</B>
</BLOCKQUOTE>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public interface LabelPeer extends ComponentPeer
{<BR>
&nbsp;&nbsp;void setText(String label)<BR>
&nbsp;&nbsp;void setAlignment(int alignment)<BR>
}</FONT></TT>
</BLOCKQUOTE>
<HR>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">setText</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">LabelPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">void setText(String label)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">setText()</FONT></TT> method sets
the text to be displayed on the label.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></TD><TD ><TT><FONT FACE="Courier">label</FONT></TT> is a <TT><FONT FACE="Courier">String</FONT></TT> value that will be used as the label string.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">setAlignment</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">LabelPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">void setAlignment(int alignment)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">setAlignment()</FONT></TT> method
sets the alignment type of the label.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></TD><TD ><TT><FONT FACE="Courier">alignment</FONT></TT> is an integer value that determines the alignment of the label (<TT><FONT FACE="Courier">LEFT</FONT></TT>, <TT><FONT 
FACE="Courier">RIGHT</FONT></TT>, or <TT><FONT FACE="Courier">CENTER</FONT></TT>).
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=8%><A NAME="ListPeer"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></A></TD><TD WIDTH=499>
<H2><FONT SIZE=5 COLOR=#FF0000>ListPeer</FONT></H2>

</TD><TD WIDTH=8%><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Extends.gif"></FONT></TT></TD>
<TD ><FONT FACE="Courier">ComponentPeer</FONT> </TD>
</TR>
</TABLE></CENTER>
<P>
<P>
The <TT><FONT FACE="Courier">ListPeer</FONT></TT> interface extends
interface <TT><FONT FACE="Courier">java.awt.peer.ComponentPeer</FONT></TT>.
The <TT><FONT FACE="Courier">ListPeer</FONT></TT> interface provides
the basic structure required for list component functionality.
<P>
Listing 30.12 shows the declarations for all of the public methods
included in the <TT><FONT FACE="Courier">java.awt.peer.ListPeer</FONT></TT>
interface.
<HR>
<BLOCKQUOTE>
<B>Listing 30.12. Members of </B><TT><B><FONT FACE="Courier">java.awt.peer.ListPeer</FONT></B></TT><B>.
<BR>
</B>
</BLOCKQUOTE>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public interface ListPeer extends ComponentPeer
{<BR>
&nbsp;&nbsp;int[] getSelectedIndexes()<BR>
&nbsp;&nbsp;void addItem(String item, int index)<BR>
&nbsp;&nbsp;void delItems(int start, int end)<BR>
&nbsp;&nbsp;void clear()<BR>
&nbsp;&nbsp;void select(int index)<BR>
&nbsp;&nbsp;void deselect(int index)<BR>
&nbsp;&nbsp;void makeVisible(int index)<BR>
&nbsp;&nbsp;void setMultipleSelections(boolean v)<BR>
&nbsp;&nbsp;Dimension preferredSize(int v)<BR>
&nbsp;&nbsp;Dimension minimumSize(int v)<BR>
}</FONT></TT>
</BLOCKQUOTE>
<HR>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getSelectedIndexes</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">ListPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">int[] getSelectedIndexes()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">getSelectedIndexes()</FONT></TT>
method returns an array containing the selected indexes in the
list.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></TD><TD >An integer array containing the indexes that are currently selected in the list.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">addItem</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">ListPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">void addItem(String item, int index)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">addItem()</FONT></TT> method adds
a <TT><FONT FACE="Courier">String</FONT></TT> item at the specified
index.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></TD><TD ><TT><FONT FACE="Courier">item</FONT></TT> is a <TT><FONT FACE="Courier">String</FONT></TT> value to be added to the list.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></TD><TD ><TT><FONT FACE="Courier">index</FONT></TT> is an integer value representing the index into the list.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">delItems</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">ListPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">void delItems(int start, int end)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">delItems()</FONT></TT> method deletes
a range of values from the list using the specified range values.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></TD><TD ><TT><FONT FACE="Courier">start</FONT></TT> is an integer value marking the start of the deletion range.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></TD><TD ><TT><FONT FACE="Courier">end</FONT></TT> is an integer value marking the end of the deletion range.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">clear</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">ListPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">void clear()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">clear()</FONT></TT> method clears
all elements from the list.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></TD><TD >None</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">select</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">ListPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">void select(int index)</FONT></TT>
</BLOCKQUOTE>
<P>
This <TT><FONT FACE="Courier">select()</FONT></TT> method selects
the specified index.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></TD><TD ><TT><FONT FACE="Courier">index</FONT></TT> is an integer value specifying the item in the list to be selected.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">deselect</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">ListPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">void deselect(int index)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">deselect()</FONT></TT> method deselects
an item within the list.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></TD><TD ><TT><FONT FACE="Courier">index</FONT></TT> is an integer value specifying the item in the list to be deselected.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">makeVisible</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">ListPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">void makeVisible(int index)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">makeVisible()</FONT></TT> method
forces the list to scroll, if necessary, so that the specified
index will be made visible to the user.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></TD><TD ><TT><FONT FACE="Courier">index</FONT></TT> is an integer value representing the index to be made visible.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">setMultipleSelections</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">ListPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">void setMultipleSelections(boolean v)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">setMultipleSelections()</FONT></TT>
method specifies whether the list should allow multiple selections
or not.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></TD><TD ><TT><FONT FACE="Courier">v</FONT></TT> is a Boolean value that is <TT><FONT FACE="Courier">true</FONT></TT> if multiple selections are to be allowed, <TT><FONT FACE="Courier">false</FONT></TT> if 
not.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">preferredSize</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">ListPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">Dimension preferredSize(int v)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">preferredSize()</FONT></TT> method
sets the preferred size for a list of the specified number of
items.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></TD><TD ><TT><FONT FACE="Courier">vis</FONT></TT> an integer value specifying the number of items within the list.
</TD></TR>
</TABLE></CENTER>
<P>
<P>
A <TT><FONT FACE="Courier">Dimension</FONT></TT> object containing
the preferred size of the list. For more information on the <TT><FONT FACE="Courier">Dimension</FONT></TT>
class, see the documentation in <A HREF="ch28.htm" >Chapter 28</A>.<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%>
<H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">minimumSize</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">ListPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">Dimension minimumSize(int v)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">minimumSize()</FONT></TT> method
sets the minimum size for a list of the specified number of items.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></TD><TD ><TT><FONT FACE="Courier">v</FONT></TT> is an integer value specifying the number of items within the list.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></TD><TD >A <TT><FONT FACE="Courier">Dimension</FONT></TT> object containing the minimum size of the list. For more information on the <TT><FONT FACE="Courier">Dimension</FONT></TT> class, see the documentation in <A HREF="ch28.htm" 
>Chapter 28</A>.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=8%><A NAME="MenuBarPeer"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></A></TD><TD WIDTH=499>
<H2><FONT SIZE=5 COLOR=#FF0000>MenuBarPeer</FONT></H2>

</TD><TD WIDTH=8%><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Extends.gif"></FONT></TT></TD>
<TD ><FONT FACE="Courier">MenuComponentPeer</FONT> </TD>
</TR>
</TABLE></CENTER>
<P>
<P>
The <TT><FONT FACE="Courier">MenuBarPeer</FONT></TT> interface
extends interface <TT><FONT FACE="Courier">java.awt.peer.MenuComponentPeer</FONT></TT>.
The <TT><FONT FACE="Courier">MenuBarPeer</FONT></TT> interface
provides the basic structure required for menu bar component functionality.
<P>
Listing 30.13 shows the declarations for all of the public methods
included in the <TT><FONT FACE="Courier">java.awt.peer.MenuBarPeer</FONT></TT>
interface.
<HR>
<BLOCKQUOTE>
<B>Listing 30.13. Members of </B><TT><B><FONT FACE="Courier">java.awt.peer.MenuBarPeer</FONT></B></TT><B>.
<BR>
</B>
</BLOCKQUOTE>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public interface MenuBarPeer extends
MenuComponentPeer {<BR>
&nbsp;&nbsp;void addMenu(Menu m)<BR>
&nbsp;&nbsp;void delMenu(int index)<BR>
&nbsp;&nbsp;void addHelpMenu(Menu m)<BR>
}</FONT></TT>
</BLOCKQUOTE>
<HR>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">addMenu</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">MenuBarPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">void addMenu(Menu m)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">addMenu()</FONT></TT> method adds
the specified <TT><FONT FACE="Courier">Menu</FONT></TT> to the
<TT><FONT FACE="Courier">MenuBar</FONT></TT>.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></TD><TD ><TT><FONT FACE="Courier">m</FONT></TT> is the <TT><FONT FACE="Courier">Menu</FONT></TT> object to be added to the <TT><FONT FACE="Courier">MenuBar</FONT></TT>. For more information on the 
<TT><FONT FACE="Courier">Menu</FONT></TT> class, see the documentation in <A HREF="ch28.htm" >Chapter 28</A>.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">delMenu</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">MenuBarPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">void delMenu(int index)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">delMenu()</FONT></TT> method deletes
the menu at the specified index from the <TT><FONT FACE="Courier">MenuBar</FONT></TT>.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></TD><TD ><TT><FONT FACE="Courier">index</FONT></TT> is an integer value representing the index to be deleted from the <TT><FONT FACE="Courier">MenuBar</FONT></TT>.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">addHelpMenu</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">MenuBarPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">void addHelpMenu(Menu m)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">addHelpMenu</FONT></TT> adds a help
menu to the <TT><FONT FACE="Courier">MenuBar</FONT></TT>.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></TD><TD ><TT><FONT FACE="Courier">m</FONT></TT> is the <TT><FONT FACE="Courier">Menu</FONT></TT> object to be added to the <TT><FONT FACE="Courier">MenuBar</FONT></TT>. For more information on the 
<TT><FONT FACE="Courier">Menu</FONT></TT> class, see the documentation in <A HREF="ch28.htm" >Chapter 28</A>.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=8%><A NAME="MenuComponentPeer"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></A></TD><TD WIDTH=499>
<H2><FONT SIZE=5 COLOR=#FF0000>MenuComponentPeer</FONT></H2>

</TD><TD WIDTH=8%><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Extends.gif"></FONT></TT></TD>
<TD ><FONT FACE="Courier">Object</FONT></TD></TR>
</TABLE></CENTER>
<P>
<P>
The <TT><FONT FACE="Courier">MenuComponentPeer</FONT></TT> interface
extends the class <TT><FONT FACE="Courier">java.lang.Object</FONT></TT>.
The <TT><FONT FACE="Courier">MenuComponentPeer</FONT></TT> interface
provides the basic structure required for menu component functionality.
<P>
Listing 30.14 shows the declarations for all of the public methods
included in the <TT><FONT FACE="Courier">java.awt.peer.MenuComponentPeer</FONT></TT>
interface.
<HR>
<BLOCKQUOTE>
<B>Listing 30.14. Members of </B><TT><B><FONT FACE="Courier">java.awt.peer.MenuComponentPeer</FONT></B></TT><B>.
<BR>
</B>
</BLOCKQUOTE>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public interface MenuComponentPeer {
<BR>
&nbsp;&nbsp;void dispose()<BR>
}</FONT></TT>
</BLOCKQUOTE>
<HR>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">dispose</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">MenuComponentPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">void dispose()<BR>
</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">dispose()</FONT></TT> method disposes
of a <TT><FONT FACE="Courier">MenuComponent</FONT></TT>'s allocated
resources.<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=8%><A NAME="MenuItemPeer"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></A></TD><TD WIDTH=499>
<H2><FONT SIZE=5 COLOR=#FF0000>MenuItemPeer</FONT></H2>

</TD><TD WIDTH=8%><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Extends.gif"></FONT></TT></TD>
<TD ><FONT FACE="Courier">MenuComponentPeer</FONT> </TD>
</TR>
</TABLE></CENTER>
<P>
<P>
The <TT><FONT FACE="Courier">MenuItemPeer</FONT></TT> interface
extends interface <TT><FONT FACE="Courier">java.awt.peer.MenuComponentPeer</FONT></TT>.
The <TT><FONT FACE="Courier">MenuItemPeer</FONT></TT> interface
provides the basic structure required for menu item component
functionality.
<P>
Listing 30.15 shows the declarations for all of the public methods
included in the <TT><FONT FACE="Courier">java.awt.peer.MenuItemPeer</FONT></TT>
interface.
<HR>
<BLOCKQUOTE>
<B>Listing 30.15. Members of </B><TT><B><FONT FACE="Courier">java.awt.peer.MenuItemPeer</FONT></B></TT><B>.
<BR>
</B>
</BLOCKQUOTE>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public interface MenuItemPeer extends
MenuComponentPeer {<BR>
&nbsp;&nbsp;void setLabel(String label)<BR>
&nbsp;&nbsp;void enable()<BR>
&nbsp;&nbsp;void disable()<BR>
}</FONT></TT>
</BLOCKQUOTE>
<HR>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">setLabel</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">MenuItemPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">void setLabel(String label)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">setLabel()</FONT></TT> method sets
the label string that will be displayed on the <TT><FONT FACE="Courier">MenuItem</FONT></TT>.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></TD><TD ><TT><FONT FACE="Courier">label</FONT></TT> is a <TT><FONT FACE="Courier">String</FONT></TT> value that will be displayed as the <TT><FONT FACE="Courier">MenuItem</FONT></TT>'s label.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">enable</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">MenuItemPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">void enable()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">enable()</FONT></TT> method enables
the <TT><FONT FACE="Courier">MenuItem</FONT></TT> for user selection.<P><CENTER>
<TABLE  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%>
<H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">disable</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">MenuItemPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">void disable()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">disable()</FONT></TT> method disables
the <TT><FONT FACE="Courier">MenuItem</FONT></TT> for user selection.<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=8%><A NAME="MenuPeer"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></A></TD><TD WIDTH=499>
<H2><FONT SIZE=5 COLOR=#FF0000>MenuPeer</FONT></H2>

</TD><TD WIDTH=8%><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Extends.gif"></FONT></TT></TD>
<TD ><FONT FACE="Courier">MenuItemPeer</FONT> </TD></TR>
</TABLE></CENTER>
<P>
<P>
The <TT><FONT FACE="Courier">MenuPeer</FONT></TT> interface extends
interface <TT><FONT FACE="Courier">java.awt.peer.MenuItemPeer</FONT></TT>.
The <TT><FONT FACE="Courier">MenuPeer</FONT></TT> interface provides
the basic structure required for menu component functionality.
<P>
Listing 30.16 shows the declarations for all of the public methods
included in the <TT><FONT FACE="Courier">java.awt.peer.MenuPeer</FONT></TT>
interface.
<HR>
<BLOCKQUOTE>
<B>Listing 30.16. Members of </B><TT><B><FONT FACE="Courier">java.awt.peer.MenuPeer</FONT></B></TT><B>.
<BR>
</B>
</BLOCKQUOTE>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public interface MenuPeer extends MenuItemPeer
{<BR>
&nbsp;&nbsp;void addSeparator()<BR>
&nbsp;&nbsp;void addItem(MenuItem item)<BR>
&nbsp;&nbsp;void delItem(int index)<BR>
}</FONT></TT>
</BLOCKQUOTE>
<HR>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">addSeparator</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">MenuPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">void addSeparator()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">addSeparator()</FONT></TT> method
adds a separator element to the <TT><FONT FACE="Courier">Menu</FONT></TT>.
A separator is an item, such as a line, which cannot be selected
by the user and will not trigger a menu selection event.<P><CENTER>
<TABLE  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%>
<H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">addItem</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">MenuPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">void addItem(MenuItem item)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">addItem()</FONT></TT> method adds
a <TT><FONT FACE="Courier">MenuItem</FONT></TT> to the <TT><FONT FACE="Courier">Menu</FONT></TT>.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></TD><TD ><TT><FONT FACE="Courier">item</FONT></TT> is a <TT><FONT FACE="Courier">MenuItem</FONT></TT> object. For more information on the <TT><FONT FACE="Courier">MenuItem</FONT></TT> class, see the 
documentation in <A HREF="ch28.htm" >Chapter 28</A>.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">delItem</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">MenuPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">void delItem(int index)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">delItem()</FONT></TT> method deletes
the menu item at the specified index.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></TD><TD ><TT><FONT FACE="Courier">index</FONT></TT> is an integer value representing the index on the menu to be deleted.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=8%><A NAME="PanelPeer"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></A></TD><TD WIDTH=499>
<H2><FONT SIZE=5 COLOR=#FF0000>PanelPeer</FONT></H2>

</TD><TD WIDTH=8%><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Extends.gif"></FONT></TT></TD>
<TD ><FONT FACE="Courier">ContainerPeer</FONT> </TD>
</TR>
</TABLE></CENTER>
<P>
<P>
The <TT><FONT FACE="Courier">PanelPeer</FONT></TT> interface extends
interface <TT><FONT FACE="Courier">java.awt.peer.ContainerPeer</FONT></TT>.
The <TT><FONT FACE="Courier">PanelPeer</FONT></TT> interface provides
the basic structure required for panel component functionality.
<P>
Listing 30.17 shows the declarations for all of the public methods
included in the <TT><FONT FACE="Courier">java.awt.peer.PanelPeer</FONT></TT>
interface.
<HR>
<BLOCKQUOTE>
<B>Listing 30.17. Members of </B><TT><B><FONT FACE="Courier">java.awt.peer.PanelPeer</FONT></B></TT><B>.
<BR>
</B>
</BLOCKQUOTE>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public interface PanelPeer extends ContainerPeer
{<BR>
}</FONT></TT>
</BLOCKQUOTE>
<HR>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=8%><A NAME="ScrollbarPeer"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></A></TD><TD WIDTH=499>
<H2><FONT SIZE=5 COLOR=#FF0000>ScrollbarPeer</FONT></H2>

</TD><TD WIDTH=8%><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Extends.gif"></FONT></TT></TD>
<TD ><FONT FACE="Courier">ComponentPeer</FONT> </TD>
</TR>
</TABLE></CENTER>
<P>
<P>
The <TT><FONT FACE="Courier">ScrollbarPeer</FONT></TT> interface
extends interface <TT><FONT FACE="Courier">java.awt.peer.ComponentPeer</FONT></TT>.
The <TT><FONT FACE="Courier">ScrollbarPeer</FONT></TT> interface
provides the basic structure required for scrollbar component
functionality.
<P>
Listing 30.18 shows the declarations for all of the public methods
included in the <TT><FONT FACE="Courier">java.awt.peer.ScrollbarPeer</FONT></TT>
interface.
<HR>
<BLOCKQUOTE>
<B>Listing 30.18. Members of </B><TT><B><FONT FACE="Courier">java.awt.peer.ScrollbarPeer</FONT></B></TT><B>.
<BR>
</B>
</BLOCKQUOTE>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public interface ScrollbarPeer extends
ComponentPeer {<BR>
&nbsp;&nbsp;void setValue(int value)<BR>
&nbsp;&nbsp;void setValues(int value, int visible, int minimum,
int maximum)<BR>
&nbsp;&nbsp;void setLineIncrement(int l)<BR>
&nbsp;&nbsp;void setPageIncrement(int l)<BR>
}</FONT></TT>
</BLOCKQUOTE>
<HR>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">setValue</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">ScrollbarPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">void setValue(int value)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">setValue()</FONT></TT> method sets
the value of the <TT><FONT FACE="Courier">Scrollbar</FONT></TT>.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></TD><TD ><TT><FONT FACE="Courier">value</FONT></TT> is an integer value representing the value (position) of the <TT><FONT FACE="Courier">Scrollbar</FONT></TT>.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">setValues</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">ScrollbarPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">void setValues(int value, int visible,
int minimum, int maximum)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">setValues()</FONT></TT> method sets
the specified properties of the scrollbar.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></TD><TD ><TT><FONT FACE="Courier">value</FONT></TT> is the new value of the scrollbar.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></TD><TD ><TT><FONT FACE="Courier">visible</FONT></TT> is the number of units to be displayed by the scrollbar.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></TD><TD ><TT><FONT FACE="Courier">minimum</FONT></TT> is the minimum value of the scrollbar.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></TD><TD ><TT><FONT FACE="Courier">maximum</FONT></TT> is the maximum value of the scrollbar.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">setLineIncrement</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">ScrollbarPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">void setLineIncrement(int l)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">setLineIncrement()</FONT></TT> method
sets the increment value represented by a user clicking on a scrollbar
line up/down widget.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></TD><TD ><TT><FONT FACE="Courier">l</FONT></TT> is an integer value representing the line increment value.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">setPageIncrement</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">ScrollbarPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">void setPageIncrement(int l)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">setPageIncrement()</FONT></TT> method
sets the increment value represented by a user clicking on a scrollbar
page up/down widget.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></TD><TD ><TT><FONT FACE="Courier">l</FONT></TT> is an integer value representing the page increment value.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=8%><A NAME="TextAreaPeer"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></A></TD><TD WIDTH=499>
<H2><FONT SIZE=5 COLOR=#FF0000>TextAreaPeer</FONT></H2>

</TD><TD WIDTH=8%><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Extends.gif"></FONT></TT></TD>
<TD ><FONT FACE="Courier">TextComponentPeer</FONT> </TD>
</TR>
</TABLE></CENTER>
<P>
<P>
The <TT><FONT FACE="Courier">TextAreaPeer</FONT></TT> interface
extends interface <TT><FONT FACE="Courier">java.awt.peer.TextComponentPeer</FONT></TT>.
The <TT><FONT FACE="Courier">TextAreaPeer</FONT></TT> interface
provides the basic structure required for text area component
functionality.
<P>
Listing 30.19 shows the declarations for all of the public methods
included in the <TT><FONT FACE="Courier">java.awt.peer.TextAreaPeer</FONT></TT>
interface.
<HR>
<BLOCKQUOTE>
<B>Listing 30.19. Members of </B><TT><B><FONT FACE="Courier">java.awt.peer.TextAreaPeer</FONT></B></TT><B>.
<BR>
</B>
</BLOCKQUOTE>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public interface TextAreaPeer extends
TextComponentPeer {<BR>
&nbsp;&nbsp;void insertText(String txt, int pos)<BR>
&nbsp;&nbsp;void replaceText(String txt, int start, int end)<BR>
&nbsp;&nbsp;Dimension preferredSize(int rows, int cols)<BR>
&nbsp;&nbsp;Dimension minimumSize(int rows, int cols)<BR>
}</FONT></TT>
</BLOCKQUOTE>
<HR>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">insertText</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">TextAreaPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">void insertText(String txt, int pos)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">insertText()</FONT></TT> method inserts
the specified text at the specified position within the <TT><FONT FACE="Courier">TextArea</FONT></TT>.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></TD><TD ><TT><FONT FACE="Courier">txt</FONT></TT> is a <TT><FONT FACE="Courier">String</FONT></TT> value representing the text to be inserted.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></TD><TD ><TT><FONT FACE="Courier">pos</FONT></TT> is an integer value representing the position within the <TT><FONT FACE="Courier">TextArea</FONT></TT> at which to insert the text.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">replaceText</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">TextAreaPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">void replaceText(String txt, int start,
int end)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">replaceText()</FONT></TT> method
replaces text at the specified positions with the new text.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></TD><TD ><TT><FONT FACE="Courier">txt</FONT></TT> is a <TT><FONT FACE="Courier">String</FONT></TT> value representing the text to be inserted into the <TT><FONT FACE="Courier">TextArea</FONT></TT>.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></TD><TD ><TT><FONT FACE="Courier">start</FONT></TT> is an integer value containing the start position of the text to be replaced.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></TD><TD ><TT><FONT FACE="Courier">end</FONT></TT> is an integer value containing the end position of the text to be replaced.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">preferredSize</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">TextAreaPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">Dimension preferredSize(int rows, int
cols)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">preferredSize()</FONT></TT> method
returns the preferred size of a <TT><FONT FACE="Courier">TextArea</FONT></TT>
of the specified  dimensions.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></TD><TD ><TT><FONT FACE="Courier">rows</FONT></TT> is the number of rows in the <TT><FONT FACE="Courier">TextArea</FONT></TT>.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></TD><TD ><TT><FONT FACE="Courier">cols</FONT></TT> is the number of columns in the <TT><FONT FACE="Courier">TextArea</FONT></TT>.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></TD><TD >A <TT><FONT FACE="Courier">Dimension</FONT></TT> object containing the preferred size of the <TT><FONT FACE="Courier">TextArea</FONT></TT>. For more information on the <TT><FONT FACE="Courier">Dimension</FONT></TT> class, 
see the documentation earlier in the chapter.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">minimumSize</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">TextAreaPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">Dimension minimumSize(int rows, int cols)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">minimumSize()</FONT></TT> method
returns the minimum size of a <TT><FONT FACE="Courier">TextArea</FONT></TT>
of the specified dimensions.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></TD><TD ><TT><FONT FACE="Courier">rows</FONT></TT> is the number of rows in the <TT><FONT FACE="Courier">TextArea</FONT></TT>.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></TD><TD ><TT><FONT FACE="Courier">cols</FONT></TT> is the number of columns in the <TT><FONT FACE="Courier">TextArea</FONT></TT>.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></TD><TD >A <TT><FONT FACE="Courier">Dimension</FONT></TT> object containing the minimum size of the <TT><FONT FACE="Courier">TextArea</FONT></TT>. For more information on the <TT><FONT FACE="Courier">Dimension</FONT></TT> class, see 
the documentation in <A HREF="ch28.htm" >Chapter 28</A>.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=8%><A NAME="TextComponentPeer"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></A></TD><TD WIDTH=499>
<H2><FONT SIZE=5 COLOR=#FF0000>TextComponentPeer</FONT></H2>

</TD><TD WIDTH=8%><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Extends.gif"></FONT></TT></TD>
<TD ><FONT FACE="Courier">ComponentPeer</FONT> </TD>
</TR>
</TABLE></CENTER>
<P>
<P>
The <TT><FONT FACE="Courier">TextComponentPeer</FONT></TT> interface
extends interface <TT><FONT FACE="Courier">java.awt.peer.ComponentPeer</FONT></TT>.
The <TT><FONT FACE="Courier">TextComponentPeer</FONT></TT> interface
provides the basic structure required for text component functionality.
<P>
Listing 30.20 shows the declarations for all of the public methods
included in the <TT><FONT FACE="Courier">java.awt.peer.TextComponentPeer</FONT></TT>
interface.
<HR>
<BLOCKQUOTE>
<B>Listing 30.20. Members of </B><TT><B><FONT FACE="Courier">java.awt.peer.TextComponentPeer</FONT></B></TT><B>.
<BR>
</B>
</BLOCKQUOTE>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public interface TextComponentPeer extends
ComponentPeer {<BR>
&nbsp;&nbsp;void setEditable(boolean editable)<BR>
&nbsp;&nbsp;String getText()<BR>
&nbsp;&nbsp;void setText(String l)<BR>
&nbsp;&nbsp;int getSelectionStart()<BR>
&nbsp;&nbsp;int getSelectionEnd()<BR>
&nbsp;&nbsp;void select(int selStart, int selEnd)<BR>
}</FONT></TT>
</BLOCKQUOTE>
<HR>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">setEditable</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">TextComponentPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">void setEditable(boolean editable)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">setEditable()</FONT></TT> method
is used to the set the <TT><FONT FACE="Courier">TextComponent</FONT></TT>'s
editable state.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></TD><TD >A Boolean value that is <TT><FONT FACE="Courier">true</FONT></TT> if the text can be edited, <TT><FONT FACE="Courier">false</FONT></TT> if not.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getText</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">TextComponentPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">String getText()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">getText()</FONT></TT> method returns
the <TT><FONT FACE="Courier">TextComponent</FONT></TT>'s displayed
text.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></TD><TD >A <TT><FONT FACE="Courier">String</FONT></TT> value representing the text contained in the <TT><FONT FACE="Courier">TextComponent</FONT></TT>.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">setText</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">TextComponentPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">void setText(String l)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">setText()</FONT></TT> method sets
the text to be displayed in the <TT><FONT FACE="Courier">TextComponent</FONT></TT>.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></TD><TD ><TT><FONT FACE="Courier">l</FONT></TT> is a <TT><FONT FACE="Courier">String</FONT></TT> value to be displayed by the <TT><FONT FACE="Courier">TextComponent</FONT></TT>.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getSelectionStart</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">TextComponentPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">int getSelectionStart()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">getSelectionStart()</FONT></TT> method
returns the position of the first selected character in the <TT><FONT FACE="Courier">TextComponent</FONT></TT>.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></TD><TD >An integer value specifying the position of the first selected character in the <TT><FONT FACE="Courier">TextComponent</FONT></TT>.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getSelectionEnd</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">TextComponentPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">int getSelectionEnd()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">getSelectionEnd()</FONT></TT> method
returns the position of the last selected character in the <TT><FONT FACE="Courier">TextComponent</FONT></TT>.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></TD><TD >An integer value specifying the position of the last selected character in the <TT><FONT FACE="Courier">TextComponent</FONT></TT>.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">select</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">TextComponentPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">void select(int selStart, int selEnd)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">select()</FONT></TT> method selects
the specified text within the <TT><FONT FACE="Courier">TextComponent</FONT></TT>.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></TD><TD ><TT><FONT FACE="Courier">selStart</FONT></TT> is an integer value representing the starting character to be selected.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></TD><TD ><TT><FONT FACE="Courier">selEnd</FONT></TT> is an integer value representing the ending character to be selected.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=8%><A NAME="TextFieldPeer"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></A></TD><TD WIDTH=499>
<H2><FONT SIZE=5 COLOR=#FF0000>TextFieldPeer</FONT></H2>

</TD><TD WIDTH=8%><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Extends.gif"></FONT></TT></TD>
<TD ><FONT FACE="Courier">TextComponentPeer</FONT> </TD>
</TR>
</TABLE></CENTER>
<P>
<P>
The <TT><FONT FACE="Courier">TextFieldPeer</FONT></TT> interface
extends interface <TT><FONT FACE="Courier">java.awt.peer.TextComponentPeer</FONT></TT>.
The <TT><FONT FACE="Courier">TextFieldPeer</FONT></TT> interface
provides the basic structure required for text field component
functionality.
<P>
Listing 30.21 shows the declarations for all of the public methods
included in the <TT><FONT FACE="Courier">java.awt.peer.TextFieldPeer</FONT></TT>
interface.
<HR>
<BLOCKQUOTE>
<B>Listing 30.21. Members of </B><TT><B><FONT FACE="Courier">java.awt.peer.TextFieldPeer</FONT></B></TT><B>.
<BR>
</B>
</BLOCKQUOTE>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public interface TextFieldPeer extends
TextComponentPeer {<BR>
&nbsp;&nbsp;void setEchoCharacter(char c)<BR>
&nbsp;&nbsp;Dimension preferredSize(int cols)<BR>
&nbsp;&nbsp;Dimension minimumSize(int cols)<BR>
}</FONT></TT>
</BLOCKQUOTE>
<HR>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">setEchoCharacter</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">TextFieldPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">void setEchoCharacter(char c)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">setEchoCharacter()</FONT></TT> method
sets the <TT><FONT FACE="Courier">Echo</FONT></TT> character to
be echoed to the screen as the user types.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></TD><TD ><TT><FONT FACE="Courier">c</FONT></TT> is a character value to be displayed no matter what character the user types.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">preferredSize</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">TextFieldPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">Dimension preferredSize(int cols)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">preferredSize()</FONT></TT> method
returns the preferred size of the <TT><FONT FACE="Courier">TextField</FONT></TT>
based on the specified number of characters.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></TD><TD ><TT><FONT FACE="Courier">cols</FONT></TT> is an integer value containing the number of characters in the text field.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></TD><TD >A <TT><FONT FACE="Courier">Dimension</FONT></TT> object containing the preferred size of the <TT><FONT FACE="Courier">TextField</FONT></TT>. For more information on the <TT><FONT FACE="Courier">Dimension</FONT></TT> class, 
see the documentation in <A HREF="ch28.htm" >Chapter 28</A>.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">minimumSize</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">TextFieldPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">Dimension minimumSize(int cols)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">minimumSize()</FONT></TT> method
returns the minimum size of the <TT><FONT FACE="Courier">TextField</FONT></TT>
based on the specified number of characters.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></TD><TD ><TT><FONT FACE="Courier">cols</FONT></TT> is an integer value containing the number of characters in the text field.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></TD><TD >A <TT><FONT FACE="Courier">Dimension</FONT></TT> object containing the minimum size of the <TT><FONT FACE="Courier">TextField</FONT></TT>. For more information on the <TT><FONT FACE="Courier">Dimension</FONT></TT> class, 
see the documentation in <A HREF="ch28.htm" >Chapter 28</A>.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=8%><A NAME="WindowPeer"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></A></TD><TD WIDTH=499>
<H2><FONT SIZE=5 COLOR=#FF0000>WindowPeer</FONT></H2>

</TD><TD WIDTH=8%><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Extends.gif"></FONT></TT></TD>
<TD ><FONT FACE="Courier">ContainerPeer</FONT> </TD>
</TR>
</TABLE></CENTER>
<P>
<P>
The <TT><FONT FACE="Courier">WindowPeer</FONT></TT> interface
extends interface <TT><FONT FACE="Courier">java.awt.peer.ContainerPeer</FONT></TT>.
The <TT><FONT FACE="Courier">WindowPeer</FONT></TT> interface
provides the basic structure required for window component functionality.
<P>
Listing 30.22 shows the declarations for all of the public methods
included in the <TT><FONT FACE="Courier">java.awt.peer.ContainerPeer</FONT></TT>
interface.
<HR>
<BLOCKQUOTE>
<B>Listing 30.22. Members of </B><TT><B><FONT FACE="Courier">java.awt.peer.WindowPeer</FONT></B></TT><B>.
<BR>
</B>
</BLOCKQUOTE>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public interface WindowPeer extends ContainerPeer
{<BR>
&nbsp;&nbsp;void toFront()<BR>
&nbsp;&nbsp;void toBack()<BR>
}</FONT></TT>
</BLOCKQUOTE>
<HR>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">toFront</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">WindowPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">void toFront()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">toFront()</FONT></TT> method moves
the <TT><FONT FACE="Courier">Window</FONT></TT> to the front of
the display.

<P><CENTER><TABLE BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%>
<H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">toBack</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Inter.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">WindowPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awtpe.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">void toBack()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">toBack()</FONT></TT> method moves
the <TT><FONT FACE="Courier">Window</FONT></TT> to the back of
the display.
<P>
<HR WIDTH="100%"></P>

<CENTER><P><A HREF="ch29.htm"><IMG SRC="http://docs.rinet.ru/JavDev/pc.gif" BORDER=0 HEIGHT=88 WIDTH=140></A><A HREF="#CONTENTS"><IMG SRC="http://docs.rinet.ru/JavDev/cc.gif" BORDER=0 HEIGHT=88 WIDTH=140></A><A HREF="index.htm"><IMG SRC="http://docs.rinet.ru/JavDev/hb.gif" BORDER=0 HEIGHT=88 WIDTH=140></A><A HREF="ch31.htm"><IMG 
SRC="http://docs.rinet.ru/JavDev/nc.gif" BORDER=0 HEIGHT=88 WIDTH=140></A></P></CENTER>

<P>
<HR WIDTH="100%"></P>

</BODY>
</HTML>



