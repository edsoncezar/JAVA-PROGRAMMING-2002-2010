<HTML>

<HEAD>
   <TITLE>Chapter 2 -- Installing Java</TITLE>
   <META NAME="GENERATOR" CONTENT="Mozilla/3.0b5aGold (WinNT; I) [Netscape]">
</HEAD>
<BODY TEXT="#000000" BGCOLOR="#FFFFFF" LINK="#0000EE" VLINK="#551A8B" ALINK="#CE2910">










<H1><FONT COLOR=#FF0000>Chapter 2</FONT></H1>
<H1><B><FONT SIZE=5 COLOR=#FF0000>Installing Java</FONT></B>
</H1>
<P>
<HR WIDTH="100%"></P>
<P>
<H3 ALIGN=CENTER><FONT COLOR="#000000"><FONT SIZE=+2>CONTENTS<A NAME="CONTENTS"></A>
</FONT></FONT></H3>

<UL>
<LI><A HREF="#GettingStartedwiththeJavaDeveloper" >Getting Started with the Java Developer's Kit</A>
<LI><A HREF="#JDKInstallationNotes" >JDK Installation Notes</A>
<UL>
<LI><A HREF="#SunSolarisInstallationNotes" >Sun Solaris Installation Notes</A>
<LI><A HREF="#Windows95andWindowsNTInstallationN" >Windows 95 and Windows NT Installation Notes</A>
<LI><A HREF="#AppleMacintoshSystem75Installation" >Apple Macintosh System 7.5 Installation Notes</A>
</UL>
<LI><A HREF="#TestingtheInstallation" >Testing the Installation</A>
<LI><A HREF="#ExploringtheJavaDevelopersKit" >Exploring the Java Developer's Kit</A>
<LI><A HREF="#DistributingtheJavaVirtualMachine" >Distributing the Java Virtual Machine</A>
<LI><A HREF="#OtherDevelopmentEnvironments" >Other Development Environments</A>
<UL>
<LI><A HREF="#SunSoftJavaWorkshopforSunSolarisan" >SunSoft Java Workshop for Sun Solaris and Microsoft Windows 95/NT</A>
<LI><A HREF="#SymantecCafõforMicrosoftWindows95N" >Symantec Caf&eacute; for Microsoft Windows 95/NT and Apple Macintosh</A>
<LI><A HREF="#BorlandLatteforMicrosoftWindows95N" >Borland Latte for Microsoft Windows 95/NT</A>
<LI><A HREF="#MicrosoftVisualJforMicrosoftWindo" >Microsoft Visual J++ for Microsoft Windows 95/NT</A>
</UL>
<LI><A HREF="#Summary" >Summary</A>
</UL>
<HR>
<P>
Before writing a single line of code, the software application
developer must first make sure that the best tools for the job
are at his or her disposal. This universal truth also applies
to Java programming. As discussed in <A HREF="ch1.htm" >Chapter 1</A>,
&quot;Introduction to Java,&quot; Java was designed from the ground
up as a cross-platform, object-oriented programming language.
These two features (cross-platform and object-oriented) combined
with the power of the Java language enable the developer to build
flexible, powerful applications that were previously difficult
or impossible to build with conventional toolsets.
<P>
Because of the huge amount of interest generated by the introduction
of Java, new tools are being introduced daily that will provide
the developer with greater flexibility and ease of use. However,
the very availability of these tools can be extremely confusing
to a new Java developer. Common questions include:
<UL>
<LI><FONT COLOR=#000000>What do I need to develop a Java application?</FONT>
<LI><FONT COLOR=#000000>What Web browsers (if any) do I need to
run my applets?</FONT>
<LI><FONT COLOR=#000000>How do I acquire these necessary Java
development tools?</FONT>
<LI><FONT COLOR=#000000>Do I need to purchase GUI development
tools (such as Symantec Caf&eacute;, Borland Latte, or Microsoft
Jakarta)?</FONT>
<LI><FONT COLOR=#000000>What do my clients need on their end to
run my Java applets?</FONT>
</UL>
<P>
This chapter attempts to answer all of these questions and provide
the reader with all of the tools necessary to build Java applications.
By the end of this chapter, you should be able to answer these
questions with ease.
<H2><A NAME="GettingStartedwiththeJavaDeveloper"><FONT SIZE=5 COLOR=#FF0000>Getting
Started with the Java Developer's Kit</FONT></A></H2>
<P>
We will assume that you, the reader, have nothing on your local
computer available for Java development. Where should you start?
In terms of getting started, becoming a Java programmer is easy.
Sun Microsystems decided some time ago to make Java an open standard.
This means that it would release its language specification for
public view and take comments and suggestions on how to improve
that language. In addition to the language specification, Sun
also provided implementations of the Java Virtual Machine for
32-bit Windows (Windows 95 and Windows NT) and Sun's Solaris operating
system. Now, instead of simply professing that Java was cross-platform
and vendor-neutral (as many other unnamed technologies have professed
for years), Sun can back up what it was saying. Soon, hundreds
of applets and applications across the Internet will be able to
run unaltered on the most popular operating platforms available.
<P>
All of this is fine for compiler writers, but how does all of
this help you, the developer? Here's the good news. Sun also decided
to give away (give, as in free) a Java Developer's Kit (JDK) that
would provide the basic tools needed for Java programming. The
JDK provides the beginning developer with all the tools needed
to begin writing powerful Java applications or applets. It contains
a compiler, an interpreter, a debugger, sample applications, and
an applet viewer that you can use to test your code.
<P>
A quick visit to Sun's JavaSoft Web site (<TT><A HREF="http://java.sun.com/">http://java.sun.com</A></TT>)
will allow you to download the JDK to your local machine. (See
Figure 2.1.)
<P>
<A HREF="http://docs.rinet.ru/JavDev/f2-1.gif" ><B>Figure 2.1 : </B><I>The JavaSoft products page on the World Wide Web.</I></A>
<P>
Figure 2.1 shows the type of information and tools that can be
retrieved from the JavaSoft Web site as of June 1996. This site
will undoubtedly have changed by the time this book is published.
Therefore, make sure to check the JavaSoft Web site to download
the latest version of the JDK! Clicking on the JDK link will take
you to a screen that will enable you to download the JDK directly
to your local machine. (At the time of this writing, the latest
version of the JDK was Version 1.0.2.) Three operating system
choices are then presented for your selection:
<OL>
<LI>Sun Solaris 2.3, 2.4, or 2.5 on SPARC-based machines or Solaris
2.5 on <I>x</I>86-based machines
<LI>Microsoft Windows NT and Windows 95
<LI>Apple Macintosh System 7.5
</OL>
<P>
The JDK is also available by FTP from <TT><FONT FACE="Courier">ftp.javasoft.com</FONT></TT>.
All of the operating system choices are available, and the JDK
can be found in the <TT><FONT FACE="Courier">\pub</FONT></TT>
directory.
<P>
Remember that the availability of the JDK for these platforms
simply means that Sun has implemented the Java Virtual Machine
and development tools for these platforms. This does not mean
that any Web browser on these platforms will now run Java applets!
Each browser vendor still must supply the &quot;hooks&quot; to
display Java applets within their individual windows.<P>
<CENTER>
<TABLE BORDERCOLOR=#000000 BORDER=1 WIDTH=80%>
<TR VALIGN=TOP><TD><B>Note</B></TD></TR>
<TR VALIGN=TOP><TD>
<BLOCKQUOTE>
Although it appears that Java may soon be running on everything from mainframes to cellular telephones, at the current time the Java Virtual Machine is available from Sun only on these three platforms. To determine whether a Java Virtual Machine is 
available for the platform of your choice, contact the operating system vendor directly.</BLOCKQUOTE>

</TD></TR>
</TABLE></CENTER>
<P>
<P>
You may wonder why Sun chose to develop only 32-bit Windows versions
of the Java Developer's Kit. Although there are several technical
reasons for the omission of 16-bit support, the primary reason
appears to be Java's reliance on a multitasking OS. Although Windows
3.1 originally was marketed as a multitasking operating system,
it quickly became apparent that it was not &quot;industrial-strength.&quot;
Java enables the programmer to break off pieces of applications
and run them as separate threads. This is handled best at runtime
by a multitasking OS. At this time, IBM has expressed support
for the development of a Java Virtual Machine (JVM) for Windows
3.1 and OS/2.
<H2><A NAME="JDKInstallationNotes"><FONT SIZE=5 COLOR=#FF0000>JDK
Installation Notes</FONT></A></H2>
<P>
Although you may be extremely eager to display your head spinning
on your World Wide Web home page, there is still a little more
setup work to be done. Because the installation instructions vary
depending on which platform the JDK is being installed on, this
section breaks these instructions up into three groups: Solaris,
Windows, and Macintosh.
<P>
I have downloaded the Windows NT version, and the resulting file
is named <TT><FONT FACE="Courier">JDK-1_0_2-win32-x86.exe</FONT></TT>.
(And to think that only a short time ago, we were limited to eight
characters for the filename!) After you run this file to decompress
it, the Java Developer's Kit will be installed on your system.
See the installation notes following to determine the necessary
steps you must undertake before actually using the JDK. After
the JDK is properly installed on your system, we will take a look
at what tools are now at your disposal.
<P>
If Java is truly a cross-platform language, why are there separate
files to download for each platform? Actual Java source code,
when compiled, does result in bytecode that can be run on any
platform with a Java Virtual Machine installed. Keep in mind,
however, that the Java Developer's Kit contains a number of executable
files (the compiler, the interpreter, the debugger, and so on)
that are compiled for your specific platform. If the resources
are available to you, download another version of the JDK (for
Macintosh, for instance) and look through the example code. You
will notice that the <TT><FONT FACE="Courier">.java</FONT></TT>
files are identical to those in the Windows and Solaris JDKs.
<P>
<CENTER>
<TABLE BORDERCOLOR=#000000 BORDER=1 WIDTH=80%>
<TR VALIGN=TOP><TD><B>Note</B></TD></TR>
<TR VALIGN=TOP><TD>
<BLOCKQUOTE>
No matter what platform you are on, it is advised that you remove all older versions of the JDK before installing the latest version.</BLOCKQUOTE>

</TD></TR>
</TABLE></CENTER>
<P>
<H3><A NAME="SunSolarisInstallationNotes">Sun Solaris Installation
Notes</A></H3>
<OL>
<LI>After you acquire the tarred version of the JDK, you must
unpack it before use. The following command will unpack the file:
<BR>
<TT><FONT FACE="Courier">/usr/bin/zcat JDK-1_0_2-solaris2-sparc.tar.Z
| tar xf -<BR>
</FONT></TT>(Keep in mind that the current filename at the time
of this writing was <TT><FONT FACE="Courier">JDK-1_0_2-solaris2-sparc.tar.Z</FONT></TT>.
Substitute the correct filename at the time you download this
file.)
<LI>A directory will be created named <TT><FONT FACE="Courier">/java</FONT></TT>.
Add the <TT><FONT FACE="Courier">java/bin</FONT></TT> directory
to your path. This directory contains the compiler and other tools
needed to build your <BR>
applications.
</OL>
<H3><A NAME="Windows95andWindowsNTInstallationN">Windows 95 and
Windows NT Installation Notes</A></H3>
<OL>
<LI>Run the self-extracting file <TT><FONT FACE="Courier">JDK-1_0_2-win32-x86.exe</FONT></TT>.
It will create a main directory <TT><FONT FACE="Courier">\java</FONT></TT>
in whichever directory you have the downloaded file stored. (Running
the file from <TT><FONT FACE="Courier">C:\</FONT></TT> will result
in the <TT><FONT FACE="Courier">C:\java</FONT></TT> directory
being created.)
<LI>Add the <TT><FONT FACE="Courier">\java\bin</FONT></TT> directory
to your path.<BR>
Windows 95: This can be done by editing the <TT><FONT FACE="Courier">PATH</FONT></TT>
variable in your <TT><FONT FACE="Courier">AUTOEXEC.BAT</FONT></TT>
file (stored in the <TT><FONT FACE="Courier">C:\</FONT></TT> root
directory). You must reboot the system for this change to take
effect.<BR>
Windows NT: You can change the path by editing the environment
variable <TT><FONT FACE="Courier">PATH</FONT></TT> in the Control
Panel &quot;System&quot; application.
</OL>
<H3><A NAME="AppleMacintoshSystem75Installation">Apple Macintosh
System 7.5 Installation Notes</A></H3>
<OL>
<LI>The file downloaded (<TT><FONT FACE="Courier">JDK-1.0.2-MacOS.sea.bin
</FONT></TT><FONT SIZE=2>or</FONT><TT><FONT FACE="Courier"> JDK-1.0.2-MacOS.sea.hqx</FONT></TT>)
must first be unpacked. Depending on which file you downloaded,
this can be done using different tools. If the file is in MacBinary
format, use Stuffit to decompress the file. If the file is in
hqx format, use DeHQX or BinHex4 to decompress the file.
<LI>Run the installation program to create a folder named <TT><FONT FACE="Courier">JDK-1.0.2-mac</FONT></TT>.
</OL>
<P>
<CENTER>
<TABLE BORDERCOLOR=#000000 BORDER=1 WIDTH=80%>
<TR VALIGN=TOP><TD><B>Note</B></TD></TR>
<TR VALIGN=TOP><TD>
<BLOCKQUOTE>
Although environment variables are not required to be set at this point, you should be aware that there are a number of environment variables that the JDK uses to compile classes. Here's a list of them:</BLOCKQUOTE>
<UL>
<LI><TT><FONT FACE="Courier">PATH</FONT></TT>-The preceding install instructions should have led you to set the <TT><FONT FACE="Courier">PATH</FONT></TT> variable correctly.
<LI><TT><FONT FACE="Courier">JAVA_HOME</FONT></TT>-This variable is used to store the <TT><FONT FACE="Courier">Java</FONT></TT> root directory.
<LI><TT><FONT FACE="Courier">CLASSPATH</FONT></TT>-Used to store the directory location of additional class files that will be needed to compile your project. On UNIX, this list is colon-separated; on the pc, this list is semicolon-separated.
</UL>

</TD></TR>
</TABLE></CENTER>
<P>
<P>
After installing, do not unzip the <TT><FONT FACE="Courier">classes.zip</FONT></TT>
file without updating the <TT><FONT FACE="Courier">CLASSPATH</FONT></TT>
environment variable. Notice that none of the <TT><FONT FACE="Courier">.class</FONT></TT>
files actually appear (outside of the <TT><FONT FACE="Courier">classes.zip</FONT></TT>
file) on your local drive. One neat feature of Java is that classes
can be read from within a ZIP file. Because of the huge amount
of potential classes on each local machine, this cuts down on
local file system usage without causing much of a performance
penalty.
<H2><A NAME="TestingtheInstallation"><FONT SIZE=5 COLOR=#FF0000>Testing
the Installation</FONT></A></H2>
<P>
The applet viewer application can be used to run the sample applications
included with the JDK. This application will be located in the
<TT><FONT FACE="Courier">\bin</FONT></TT> directory of your installation.
It is at this time that you will start to appreciate your GUI-based
development tools for languages such as C++, Visual Basic, and
Delphi. All of the tools included with the JDK are command-line
<I>only</I>. To run the applet viewer from within Windows 95/Windows
NT, go to your MS-DOS prompt, and then follow these steps:
<OL>
<LI>Change to the <TT><FONT FACE="Courier">\demo\fractal</FONT></TT>
directory. If you installed the JDK into the <TT><FONT FACE="Courier">C:\java</FONT></TT>
directory, type the following command:<BR>
<TT><FONT FACE="Courier">cd demo\fractal</FONT></TT>
<LI>The applet viewer can take as its input an .<TT><FONT FACE="Courier">HTML</FONT></TT>
source file that &quot;contains&quot; a Java applet (more information
on HTML and Java can be found in <A HREF="ch12.htm" >Chapter 12</A>,
&quot;HTML for Java Programmers&quot;). Enter the following command
to run the Fractal example:<BR>
<TT><FONT FACE="Courier">appletviewer example1.html</FONT></TT>
</OL>
<P>
You should see output to the applet viewer that looks something
like Figure 2.2.
<P>
<A HREF="http://docs.rinet.ru/JavDev/f2-2.gif" ><B>Figure 2.2 : </B><I>The applet viewer running the JDK Fractal example.</I></A>
<P>
If you still aren't convinced your installation is set up correctly,
try loading any of the sample <TT><FONT FACE="Courier">.htmL </FONT></TT>files
containing applets into a Web browser that supports Java applets.
At the time of this writing, this includes Netscape's Navigator
2.0 (see Figure 2.3) and Sun's HotJava Web browsers.
<P>
<A HREF="http://docs.rinet.ru/JavDev/f2-3.gif" ><B>Figure 2.3 : </B><I>Netscape 2.0 running the JDK Fractal example.</I></A>
<H2><A NAME="ExploringtheJavaDevelopersKit"><FONT SIZE=5 COLOR=#FF0000>Exploring
the Java Developer's Kit</FONT></A></H2>
<P>
What exactly did the JDK just put onto your local drive? Let's
explore the contents of the Java Developer's Kit more fully. Here
are the main directories that contain the JDK files:
<BLOCKQUOTE>
<TT><FONT FACE="Courier">bin\&nbsp;&nbsp;</FONT></TT>This directory
(like most development kits) contains all of the applications
to compile, link, and run Java applications and applets. The most
widely used applications within the bin directory include the
following:
</BLOCKQUOTE>
<UL>
<LI><B>java</B>&nbsp;&nbsp;This is the interpreter that is used
to run stand-alone Java applications (<A HREF="ch10.htm" >see Chapter 10</A>,
&quot;java: The Java Interpreter&quot;).
<LI><B>javac</B>&nbsp;&nbsp;This is the compiler used to convert
<TT><FONT FACE="Courier">.java</FONT></TT> source code files into
java <TT><FONT FACE="Courier">.class</FONT></TT> files (<A HREF="ch9.htm" >see Chapter 9</A>,
&quot;javac: The Java Compiler&quot;).
<LI><B>javadoc</B>&nbsp;&nbsp;JavaDoc can be used to produce documentation
for java classes (<A HREF="ch16.htm" >see Chapter 16</A>, &quot;Using
JavaDoc to Document Your Program&quot;).
<LI><B>jdb</B>&nbsp;&nbsp;This is the Java debugger. It is similar
to the UNIX-style dbx debugger and is command-line oriented (<A HREF="ch15.htm" >see Chapter 15</A>,
&quot;jdb: The Java Debugger&quot;).
<LI><B>appletviewer</B>&nbsp;&nbsp;The applet viewer tool can
be used as a test bed for java applets (<A HREF="ch11.htm" >see Chapter 11</A>,
&quot;Using the Applet Viewer&quot;).
</UL>
<P>
<TT><FONT FACE="Courier">demo\</FONT></TT>&nbsp;&nbsp;The <TT><FONT FACE="Courier">demo</FONT></TT>
directory contains a large group of sample java applets that can
provide an excellent starting point for many typical java applets.
Included in this set are the following applets:<P>
<CENTER>
<TABLE BORDERCOLOR=#000000 BORDER=1 WIDTH=80%>
<TR VALIGN=TOP><TD WIDTH=107><CENTER><I>Animator</I></CENTER></TD><TD WIDTH=130><CENTER><I>GraphLayout</I></CENTER>
</TD></TR>
<TR VALIGN=TOP><TD WIDTH=107>ArcTest</TD><TD WIDTH=130>ImageMap</TD></TR>
<TR VALIGN=TOP><TD WIDTH=107>BarChart</TD><TD WIDTH=130>JumpingBox</TD></TR>
<TR VALIGN=TOP><TD WIDTH=107>Blink</TD><TD WIDTH=130>MoleculeViewer</TD>
</TR>
<TR VALIGN=TOP><TD WIDTH=107>CardTest</TD><TD WIDTH=130>NervousText</TD>
</TR>
<TR VALIGN=TOP><TD WIDTH=107>Clock</TD><TD WIDTH=130>SimpleGraph</TD></TR>
<TR VALIGN=TOP><TD WIDTH=107>DitherTest</TD><TD WIDTH=130>SortDemo</TD></TR>
<TR VALIGN=TOP><TD WIDTH=107>DrawTest</TD><TD WIDTH=130>SpreadSheet</TD>
</TR>
<TR VALIGN=TOP><TD WIDTH=107>Fractal</TD><TD WIDTH=130>TicTacToe</TD></TR>
<TR VALIGN=TOP><TD WIDTH=107>GraphicsTest</TD><TD WIDTH=130>WireFrame</TD>
</TR>
</TABLE></CENTER>
<P>
<P>
<TT><FONT FACE="Courier">include\</FONT></TT>&nbsp;&nbsp;The <TT><FONT FACE="Courier">include</FONT></TT>
directory contains a set of C and C++ header files. These can
be used to interface java classes to the C and C++ languages.
<P>
<TT><FONT FACE="Courier">lib\</FONT></TT>&nbsp;&nbsp;The primary
file contained in this directory is the <TT><FONT FACE="Courier">classes.zip</FONT></TT>
file. This file contains all of the classes that together make
up the JDK. Here are the primary packages (more on packages can
be found in <A HREF="ch3.htm" >Chapter 3</A>, &quot;The Java Language&quot;):
<UL>
<LI><TT><FONT FACE="Courier">java.lang</FONT></TT>&nbsp;&nbsp;Contains
basic language functionality (<A HREF="ch32.htm" >see Chapter 32</A>,
&quot;Package <TT><FONT FACE="Courier">java.lang</FONT></TT>&quot;).
<LI><TT><FONT FACE="Courier">java.applet</FONT></TT>&nbsp;&nbsp;Base
class for all applets (<A HREF="ch27.htm" >see Chapter 27</A>,
&quot;Package <TT><FONT FACE="Courier">java.applet</FONT></TT>&quot;).
<LI><TT><FONT FACE="Courier">java.awt</FONT></TT>&nbsp;&nbsp;<I>AWT</I>
stands for Abstract Windowing Toolkit. This class is used for
most GUI development at this time (<A HREF="ch30.htm" >see Chapter 30</A>,
&quot;Package <TT><FONT FACE="Courier">java.awt</FONT></TT>&quot;).
<LI><TT><FONT FACE="Courier">java.io</FONT></TT>&nbsp;&nbsp;Used
for file I/O operations (<A HREF="ch31.htm" >see Chapter 31</A>,
&quot;Package <TT><FONT FACE="Courier">java.io</FONT></TT>&quot;).
<LI><TT><FONT FACE="Courier">java.net</FONT></TT>&nbsp;&nbsp;Used
for all networking operations (<A HREF="ch33.htm" >see Chapter 33</A>,
&quot;Package <TT><FONT FACE="Courier">java.net</FONT></TT>&quot;).
<LI><TT><FONT FACE="Courier">java.util</FONT></TT>&nbsp;&nbsp;Utility
package that contains a number of useful functions (<A HREF="ch34.htm" >see Chapter 34</A>,
&quot;Package <TT><FONT FACE="Courier">java.util</FONT></TT>&quot;).
</UL>
<P>
<TT><FONT FACE="Courier">rc\</FONT></TT>&nbsp;&nbsp;The <TT><FONT FACE="Courier">rc</FONT></TT>
directory contains the source files for the JDK classes. Windows
95/NT users will not see this directory, but the directory can
be restored by unzipping the <TT><FONT FACE="Courier">src.zip</FONT></TT>
file found in the root directory of the JDK.
<H2><A NAME="DistributingtheJavaVirtualMachine"><FONT SIZE=5 COLOR=#FF0000>Distributing
the Java Virtual Machine</FONT></A></H2>
<P>
Although most users think of Java applets when they think of Java,
the JDK also can be used to develop stand-alone Java applications.
All that is required on the user's machine is the Java Virtual
Machine. The following list details the minimum required files
for Windows 95/NT setup:
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">java.exe<BR>
javaw.exe<BR>
javai.dll<BR>
net.dll<BR>
awt.dll<BR>
mmedia <BR>
mfc30.dll<BR>
jpeg.dll dll<BR>
msvcrt20.dll<BR>
classes.zip</FONT></TT></BLOCKQUOTE>
<H2><A NAME="OtherDevelopmentEnvironments"><FONT SIZE=5 COLOR=#FF0000>Other
Development Environments</FONT></A></H2>
<P>
Software developers have become accustomed to fully graphical
development environments. Rapid application development (RAD)
tools such as Powersoft Powerbuilder, Microsoft Visual Basic,
and Borland Delphi have drastically increased programmer productivity
and ease of use. Then along came Java! The JDK was designed to
be a &quot;basic&quot; development toolkit that could be used
on virtually any platform on which the Java Virtual Machine existed.
For some developers, the toolset that comes prepackaged with the
JDK will be perfectly fine. However, the industry as a whole is
currently clamoring for more powerful Java tools, and where there
is money, there will be products. Although many forthcoming Java
products were still in development at the time of this writing,
several will be discussed here. Web site addresses will be given,
where possible, so you can acquire the most up-to-date information.
<P>
Not surprisingly, the most eagerly anticipated tools come from
established software development tool manufacturers Sun, Borland,
Symantec, and Microsoft. Although it remains to be seen which
kits will be more successful than others, it is important to remember
that Java development can occur on virtually every popular operating
system platform available today. This in itself is a feat that
must not be taken for granted. A developer using Sun Solaris can
instantly test his application on Windows, Macintosh, and UNIX
machines running side by side. Quite exciting! Now let's take
a look at some popular tools.
<H3><A NAME="SunSoftJavaWorkshopforSunSolarisan">SunSoft Java
Workshop for Sun Solaris and Microsoft Windows 95/NT</A></H3>
<P>
Perhaps the most novel development platform comes from the creator
of Java, Sun Microsystems. An evaluation copy can be downloaded
from Javasoft's Web site at
<BLOCKQUOTE>
<TT><A HREF="http://www.sun.com/sunsoft/Developer-products/java/Workshop/">http://www.sun.com/sunsoft/Developer-products/java/Workshop/</A></TT>
</BLOCKQUOTE>
<P>
The Java Workshop is interesting because it is entirely written
in Java. The Workshop enables the developer to organize work into
projects and compile and run Java applications using a set of
visual tools. At the current time, it has no capability to manage
database-oriented projects, and it does not allow the user to
visually edit class properties and methods. Because it was written
in Java, however, the Workshop runs almost identically across
the platforms it is available for. An example of its interface
is shown in Figure 2.4.
<P>
<A HREF="http://docs.rinet.ru/JavDev/f2-4.gif" ><B>Figure 2.4 : </B><I>SunSoft Java Workshop.</I></A>
<H3><A NAME="SymantecCafõforMicrosoftWindows95N">Symantec Caf&eacute;
for Microsoft Windows 95/NT and Apple Macintosh</A></H3>
<P>
Symantec Caf&eacute; (<TT><A HREF="http://cafe.symantec.com/">http://caf&eacute;.symantec.com</A></TT>)
was the first GUI-based development environment for Java on the
Windows platform. The development environment is based on the
popular Symantec C++ compiler but has been customized for Java
applet/application development. Features include the following:
<UL>
<LI><FONT COLOR=#000000>GUI-based debugger</FONT>
<LI><FONT COLOR=#000000>Object-oriented class editor</FONT>
<LI><FONT COLOR=#000000>Drag-and-drop resource editing</FONT>
<LI><FONT COLOR=#000000>App Express, a tool used to build default
Java applets and applications</FONT>
<LI><FONT COLOR=#000000>An optimizing Java compiler, which is
billed as providing up to 10 times faster application performanceAn
optimized Java Virtual Machine, which is billed as providing double
the performance of the JVM supplied by the JDK</FONT>
</UL>
<H3><A NAME="BorlandLatteforMicrosoftWindows95N">Borland Latte
for Microsoft Windows 95/NT</A></H3>
<P>
Borland Latte is the long-awaited, GUI-based development environment
for Java. Much of the look-and-feel of Latte (see Figure 2.5)
is based on the award-winning Windows IDE Borland Delphi. Like
Symantec's Caf&eacute;, Latte will include a GUI debugger (available
as of February 1996) and a complete GUI-based IDE. Also included
with Latte will be the Borland InterBase InterClient. This software,
written entirely in Java, will allow InterBase databases to be
connected using Java applets. Borland plans to continue to roll
out Java-based development tools to meet corporate demands in
areas such as database access and GUI development.
<P>
<A HREF="http://docs.rinet.ru/JavDev/f2-5.gif" ><B>Figure 2.5 : </B><I>Prerelease screen shot of Borland Latte.</I></A>
<H3><A NAME="MicrosoftVisualJforMicrosoftWindo">Microsoft Visual
J++ for Microsoft Windows 95/NT</A></H3>
<P>
Microsoft Visual J++ is the name for Microsoft's Java development
platform. This includes a GUI-based development environment in
addition to a Java Virtual Machine implementation for the Windows
platform. Microsoft plans to augment standard Java functionality
with its ActiveX component object technology. Although the ActiveX
framework is outside of the scope of this book, it appears that
Microsoft plans to wrap Java applets with ActiveX. This will allow
applets to be scripted using languages such as JavaScript and
VBScript, but all of these features will obviously affect the
cross-platform viability of these Java applets. Microsoft is currently
readying copies of its ActiveX-enabled browser, Internet Explorer,
for the Macintosh and UNIX platforms.
<H2><A NAME="Summary"><FONT SIZE=5 COLOR=#FF0000>Summary</FONT></A>
</H2>
<P>
The Java Developer's Kit contains all of the tools necessary to
begin any Java software development project. Of course, the World
Wide Web contains a vast amount of information and tools not mentioned
here, so any Java development project would be incomplete without
constant monitoring of the Java newsgroup (<TT><FONT FACE="Courier">comp.lang.java</FONT></TT>)
and the JavaSoft home page (<TT><FONT FACE="Courier">http:\\java.sun.com</FONT></TT>).
In addition to the JDK, a wide variety of Java development platforms
is available, each of which has features worth exploring further.
Upcoming chapters will explore the Java language as well as the
individual tools included with the Java Developer's Kit.
<P>
<HR WIDTH="100%"></P>

<CENTER><P><A HREF="ch1.htm"><IMG SRC="http://docs.rinet.ru/JavDev/pc.gif" BORDER=0 HEIGHT=88 WIDTH=140></A><A HREF="#CONTENTS"><IMG SRC="http://docs.rinet.ru/JavDev/cc.gif" BORDER=0 HEIGHT=88 WIDTH=140></A><A HREF="index.htm"><IMG SRC="http://docs.rinet.ru/JavDev/hb.gif" BORDER=0 HEIGHT=88 WIDTH=140></A><A HREF="ch3.htm"><IMG 
SRC="http://docs.rinet.ru/JavDev/nc.gif" BORDER=0 HEIGHT=88 WIDTH=140></A></P></CENTER>


<P>
<HR WIDTH="100%"></P>

</BODY>
</HTML>