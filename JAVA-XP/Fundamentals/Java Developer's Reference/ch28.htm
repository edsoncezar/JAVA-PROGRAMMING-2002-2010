
<HTML>

<HEAD>
   <TITLE>Chapter 28 -- Package java.awt</TITLE>
   <META NAME="GENERATOR" CONTENT="Mozilla/3.0b5aGold (WinNT; I) [Netscape]">
</HEAD>
<BODY TEXT="#000000" BGCOLOR="#FFFFFF" LINK="#0000EE" VLINK="#551A8B" ALINK="#CE2910">










<H1><FONT COLOR=#FF0000>Chapter 28</FONT></H1>
<H1><B><FONT SIZE=5 COLOR=#FF0000>Package </FONT><TT><FONT SIZE=6 COLOR=#FF0000 FACE="Courier">java.awt</FONT></TT></FONT></B>
</H1>
<P>
<HR WIDTH="100%"></P>
<P>
<H3 ALIGN=CENTER><FONT COLOR="#000000"><FONT SIZE=+2>CONTENTS<A NAME="CONTENTS"></A>
</FONT></FONT></H3>
<UL>
<LI><A HREF="#BorderLayout" >BorderLayout</A>
<LI><A HREF="#Button" >Button</A>
<LI><A HREF="#Canvas" >Canvas</A>
<LI><A HREF="#CardLayout" >CardLayout</A>
<LI><A HREF="#Checkbox" >Checkbox</A>
<LI><A HREF="#CheckboxGroup" >CheckboxGroup</A>
<LI><A HREF="#CheckboxMenuItem" >CheckboxMenuItem</A>
<LI><A HREF="#Choice" >Choice</A>
<LI><A HREF="#Color" >Color</A>
<LI><A HREF="#Component" >Component</A>
<LI><A HREF="#Container" >Container</A>
<LI><A HREF="#Dialog" >Dialog</A>
<LI><A HREF="#Dimension" >Dimension</A>
<LI><A HREF="#Event" >Event</A>
<LI><A HREF="#FileDialog" >FileDialog</A>
<LI><A HREF="#FlowLayout" >FlowLayout</A>
<LI><A HREF="#Font" >Font</A>
<LI><A HREF="#FontMetrics" >FontMetrics</A>
<LI><A HREF="#Frame" >Frame</A>
<LI><A HREF="#Graphics" >Graphics</A>
<LI><A HREF="#GridBagConstraints" >GridBagConstraints</A>
<LI><A HREF="#GridBagLayout" >GridBagLayout</A>
<LI><A HREF="#GridLayout" >GridLayout</A>
<LI><A HREF="#Image" >Image</A>
</UL>
<HR>
<P>
The <TT><FONT FACE="Courier">java.awt</FONT></TT> package contains
what is known as the Java Abstract Windowing Toolkit. The classes
within this package make up the pre-built graphical user interface
components that are available to Java developers through the Java
Developer's Kit. Classes defined within this package include such
useful components as colors, fonts, and widgets, such as buttons
and scrollbars. This package also defines two interfaces, <TT><FONT FACE="Courier">LayoutManager</FONT></TT>
and <TT><FONT FACE="Courier">MenuContainer</FONT></TT>, as well
as the exception <TT><FONT FACE="Courier">AWTException</FONT></TT>
and the error <TT><FONT FACE="Courier">AWTError</FONT></TT>. The
<TT><FONT FACE="Courier">java.awt</FONT></TT> package also contains
two subpackages: <TT><FONT FACE="Courier">java.awt.image</FONT></TT>
and <TT><FONT FACE="Courier">java.awt.peer</FONT></TT>. This chapter
documents all public instance variables and methods of each subpackage,
class, interface, exception, and error in the <TT><FONT FACE="Courier">java.awt</FONT></TT>
package. Because the <TT><FONT FACE="Courier">java.awt</FONT></TT>
package is so large, Table 28.1 shows a complete list of its contents,
and Figure 28.1 shows the hierarchy of the contents of that package.
<P>
<A HREF="http://docs.rinet.ru/JavDev/f28-1.gif" ><B>Figure 28.1:</B> <I>Contents of package</I> java.awt.</A>
<P>
<CENTER><B>Table 28.1. Contents of package </B><TT><B><FONT FACE="Courier">java.awt</FONT></B></TT><B>.</B></CENTER>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=80%>
<TR VALIGN=TOP><TD WIDTH=202><I>Class Index</I></TD><TD WIDTH=152><I>&nbsp;</I>
</TD><TD WIDTH=152><I>Interface Index</I></TD></TR>
<TR VALIGN=TOP><TD WIDTH=202><TT><FONT FACE="Courier">BorderLayout</FONT></TT>
</TD><TD WIDTH=152><TT><FONT FACE="Courier">GridBagLayout</FONT></TT>
</TD><TD WIDTH=152><TT><FONT FACE="Courier">LayoutManager</FONT></TT>
</TD></TR>
<TR VALIGN=TOP><TD WIDTH=202><TT><FONT FACE="Courier">Button</FONT></TT>
</TD><TD WIDTH=152><TT><FONT FACE="Courier">GridLayout</FONT></TT>
</TD><TD WIDTH=152><TT><FONT FACE="Courier">MenuContainer</FONT></TT>
</TD></TR>
<TR VALIGN=TOP><TD WIDTH=202><TT><FONT FACE="Courier">Canvas</FONT></TT>
</TD><TD WIDTH=152><TT><FONT FACE="Courier">Image</FONT></TT>
</TD><TD WIDTH=152>&nbsp;</TD></TR>
<TR VALIGN=TOP><TD WIDTH=202><TT><FONT FACE="Courier">CardLayout</FONT></TT>
</TD><TD WIDTH=152><TT><FONT FACE="Courier">Insets</FONT></TT>
</TD><TD WIDTH=152>&nbsp;</TD></TR>
<TR VALIGN=TOP><TD WIDTH=202><TT><FONT FACE="Courier">Checkbox</FONT></TT>
</TD><TD WIDTH=152><TT><FONT FACE="Courier">Label</FONT></TT>
</TD><TD WIDTH=152>&nbsp;</TD></TR>
<TR VALIGN=TOP><TD WIDTH=202><TT><FONT FACE="Courier">CheckboxGroup</FONT></TT>
</TD><TD WIDTH=152><TT><FONT FACE="Courier">List</FONT></TT></TD>
<TD WIDTH=152>&nbsp;</TD></TR>
<TR VALIGN=TOP><TD WIDTH=202><TT><FONT FACE="Courier">CheckboxMenuItem</FONT></TT>
</TD><TD WIDTH=152><TT><FONT FACE="Courier">MediaTracker</FONT></TT>
</TD><TD WIDTH=152>&nbsp;</TD></TR>
<TR VALIGN=TOP><TD WIDTH=202><TT><FONT FACE="Courier">Choice</FONT></TT>
</TD><TD WIDTH=152><TT><FONT FACE="Courier">Menu</FONT></TT></TD>
<TD WIDTH=152>&nbsp;</TD></TR>
<TR VALIGN=TOP><TD WIDTH=202><TT><FONT FACE="Courier">Color</FONT></TT></TD>
<TD WIDTH=152><TT><FONT FACE="Courier">MenuBar</FONT></TT></TD>
<TD WIDTH=152>&nbsp;</TD></TR>
<TR VALIGN=TOP><TD WIDTH=202><TT><FONT FACE="Courier">Component</FONT></TT>
</TD><TD WIDTH=152><TT><FONT FACE="Courier">MenuComponent</FONT></TT>
</TD><TD WIDTH=152>&nbsp;</TD></TR>
<TR VALIGN=TOP><TD WIDTH=202><TT><FONT FACE="Courier">Container</FONT></TT>
</TD><TD WIDTH=152><TT><FONT FACE="Courier">MenuItem</FONT></TT>
</TD><TD WIDTH=152>&nbsp;</TD></TR>
<TR VALIGN=TOP><TD WIDTH=202><TT><FONT FACE="Courier">Dialog</FONT></TT>
</TD><TD WIDTH=152><TT><FONT FACE="Courier">Panel</FONT></TT>
</TD><TD WIDTH=152>&nbsp;</TD></TR>
<TR VALIGN=TOP><TD WIDTH=202><TT><FONT FACE="Courier">Dimension</FONT></TT>
</TD><TD WIDTH=152><TT><FONT FACE="Courier">Point</FONT></TT>
</TD><TD WIDTH=152>&nbsp;</TD></TR>
<TR VALIGN=TOP><TD WIDTH=202><TT><FONT FACE="Courier">Event</FONT></TT></TD>
<TD WIDTH=152><TT><FONT FACE="Courier">Polygon</FONT></TT></TD>
<TD WIDTH=152>&nbsp;</TD></TR>
<TR VALIGN=TOP><TD WIDTH=202><TT><FONT FACE="Courier">FileDialog</FONT></TT>
</TD><TD WIDTH=152><TT><FONT FACE="Courier">Rectangle</FONT></TT>
</TD><TD WIDTH=152>&nbsp;</TD></TR>
<TR VALIGN=TOP><TD WIDTH=202><TT><FONT FACE="Courier">FlowLayout</FONT></TT>
</TD><TD WIDTH=152><TT><FONT FACE="Courier">Scrollbar</FONT></TT>
</TD><TD WIDTH=152>&nbsp;</TD></TR>
<TR VALIGN=TOP><TD WIDTH=202><TT><FONT FACE="Courier">Font</FONT></TT></TD>
<TD WIDTH=152><TT><FONT FACE="Courier">TextArea</FONT></TT></TD>
<TD WIDTH=152>&nbsp;</TD></TR>
<TR VALIGN=TOP><TD WIDTH=202><TT><FONT FACE="Courier">FontMetrics</FONT></TT>
</TD><TD WIDTH=152><TT><FONT FACE="Courier">TextComponent</FONT></TT>
</TD><TD WIDTH=152>&nbsp;</TD></TR>
<TR VALIGN=TOP><TD WIDTH=202><TT><FONT FACE="Courier">Frame</FONT></TT></TD>
<TD WIDTH=152><TT><FONT FACE="Courier">TextField</FONT></TT></TD>
<TD WIDTH=152>&nbsp;</TD></TR>
<TR VALIGN=TOP><TD WIDTH=202><TT><FONT FACE="Courier">Graphics</FONT></TT>
</TD><TD WIDTH=152><TT><FONT FACE="Courier">Toolkit</FONT></TT>
</TD><TD WIDTH=152>&nbsp;</TD></TR>
<TR VALIGN=TOP><TD WIDTH=202><TT><FONT FACE="Courier">GridBagConstraints</FONT></TT>
</TD><TD WIDTH=152><TT><FONT FACE="Courier">Window</FONT></TT>
</TD><TD WIDTH=152><FONT FACE="Courier">&nbsp;</FONT></TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=80%>
<TR VALIGN=TOP><TD WIDTH=265><I>Exception Index</I></TD><TD WIDTH=4%0><I>Error Index</I>
</TD></TR>
<TR VALIGN=TOP><TD WIDTH=265><TT><FONT FACE="Courier">AWTException</FONT></TT>
</TD><TD WIDTH=4%0><TT><FONT FACE="Courier">AWTError</FONT></TT>
</TD></TR>
</TABLE></CENTER>
<P>
<FONT SIZE=2></FONT><P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=8%><A NAME="BorderLayout"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></A></TD><TD WIDTH=499>
<H2><FONT SIZE=5 COLOR=#FF0000>BorderLayout</FONT></H2>

</TD><TD WIDTH=8%><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Extends.gif"></FONT></TT></TD>
<TD ><FONT FACE="Courier">Object</FONT></TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<IMG SRC="http://docs.rinet.ru/JavDev/Implem.gif"></TD><TD ><TT><FONT FACE="Courier">LayoutManager</FONT></TT>
</TD></TR>
</TABLE></CENTER>
<P>
<P>
The class hierarchy for the <TT><FONT FACE="Courier">BorderLayout</FONT></TT>
class derives from the class <TT><FONT FACE="Courier">java.lang.Object</FONT></TT>.
(See Listing 28.1.) A <TT><FONT FACE="Courier">BorderLayout</FONT></TT>
lays out components on a panel by implementing the <TT><FONT FACE="Courier">LayoutManager</FONT></TT>
interface. Components are laid out using members named <TT><FONT FACE="Courier">North</FONT></TT>,
<TT><FONT FACE="Courier">South</FONT></TT>, <TT><FONT FACE="Courier">East</FONT></TT>,
<TT><FONT FACE="Courier">West</FONT></TT>, and <TT><FONT FACE="Courier">Center</FONT></TT>.
<TT><FONT FACE="Courier">BorderLayout</FONT></TT>'s overall derivation
is shown in Figure 28.1.
<HR>
<BLOCKQUOTE>
<B>Listing 28.1. Public members of </B><TT><B><FONT FACE="Courier">java.awt.BorderLayout</FONT></B></TT><B>.
<BR>
</B>
</BLOCKQUOTE>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public class BorderLayout implements
LayoutManager {<BR>
&nbsp;&nbsp;public BorderLayout()<BR>
&nbsp;&nbsp;public BorderLayout(int <I>hgap</I>, int <I>vgap</I>)
<BR>
&nbsp;&nbsp;public void addLayoutComponent(String <I>name</I>,
Component <I>comp</I>)<BR>
&nbsp;&nbsp;public void removeLayoutComponent(Component <I>comp</I>)
<BR>
&nbsp;&nbsp;public Dimension minimumLayoutSize(Container <I>target</I>)
<BR>
&nbsp;&nbsp;public Dimension preferredLayoutSize(Container <I>target</I>)
<BR>
&nbsp;&nbsp;public void layoutContainer(Container <I>target</I>)
<BR>
&nbsp;&nbsp;public String toString()<BR>
}</FONT></TT>
</BLOCKQUOTE>
<HR>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/const.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">BorderLayout</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">BorderLayout</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public BorderLayout()</FONT></TT>
</BLOCKQUOTE>
<P>
This <TT><FONT FACE="Courier">BorderLayout</FONT></TT> constructor
constructs a <TT><FONT FACE="Courier">BorderLayout</FONT></TT>
layout manager.<P>
<CENTER><TABLE  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%>
<H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/const.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">BorderLayout</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">BorderLayout</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public BorderLayout(int <I>hgap</I>,
int <I>vgap</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
This <TT><FONT FACE="Courier">BorderLayout</FONT></TT> constructor
constructs a <TT><FONT FACE="Courier">BorderLayout</FONT></TT>
layout manager using the <TT><I><FONT FACE="Courier">hgap</FONT></I></TT>
and <TT><I><FONT FACE="Courier">vgap</FONT></I></TT> values to
set the horizontal and vertical gap sizes.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">hgap</FONT></I></TT> is an integer value used to set the horizontal gap size.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">vgap</FONT></I></TT> is an integer value used to set the vertical gap size.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">addLayoutComponent</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">BorderLayout</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void addLayoutComponent(String
<I>name</I>, Component <I>comp</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">addLayoutComponent</FONT></TT> adds a
component to the <TT><FONT FACE="Courier">BorderLayout</FONT></TT>
according to that component's name (<TT><FONT FACE="Courier">North</FONT></TT>,
<TT><FONT FACE="Courier">South</FONT></TT>, <TT><FONT FACE="Courier">East</FONT></TT>,
<TT><FONT FACE="Courier">West</FONT></TT>, or <TT><FONT FACE="Courier">Center</FONT></TT>).
The component's preferred size is used for all layout types except
<TT><FONT FACE="Courier">Center</FONT></TT>.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">name</FONT></I></TT> is a string value that must correspond to one of the following names: <TT><FONT FACE="Courier">North</FONT></TT>, <TT><FONT FACE="Courier">South</FONT></TT>, <TT><FONT FACE="Courier">East</FONT></TT>, 
<TT><FONT FACE="Courier">West</FONT></TT>, or <TT><FONT FACE="Courier">Center</FONT></TT>.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">comp</FONT></I></TT> is a component object to be added to this layout manager.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">removeLayoutComponent</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">BorderLayout</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void removeLayoutComponent(Component
<I>comp</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">removeLayoutComponent</FONT></TT> removes
the specified component from the layout manager.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">comp</FONT></I></TT> is the component object to be removed.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">minimumLayoutSize</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">BorderLayout</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public Dimension minimumLayoutSize(Container
<I>target</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">minimumLayoutSize</FONT></TT> returns
the minimum <TT><FONT FACE="Courier">Dimension</FONT></TT> needed
to lay out the components contained in the <TT><I><FONT FACE="Courier">target</FONT></I></TT>
parameter. Note that this function only determines the required
size based on visible components.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">target</FONT></I></TT> is a <TT><FONT FACE="Courier">Container</FONT></TT> class containing components to be laid out. This class could be a <TT><FONT FACE="Courier">Frame</FONT></TT>, <TT><FONT 
FACE="Courier">Window</FONT></TT>, or any other class derived from the <TT><FONT FACE="Courier">Container</FONT></TT> class.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">preferredLayoutSize</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">BorderLayout</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public Dimension preferredLayoutSize(Container
<I>target</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">preferredLayoutSize</FONT></TT> returns
the preferred <TT><FONT FACE="Courier">Dimension</FONT></TT> needed
to lay out the components contained in the <TT><I><FONT FACE="Courier">target</FONT></I></TT>
parameter. This <TT><FONT FACE="Courier">Dimension</FONT></TT>
is based on the individual component's  preferred sizes. Note
that this function only determines the required size based on
visible  components.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">target</FONT></I></TT> is a <TT><FONT FACE="Courier">Container</FONT></TT> class containing components to be laid out. This class could be a <TT><FONT FACE="Courier">Frame</FONT></TT>, <TT><FONT 
FACE="Courier">Window</FONT></TT>, or any other class derived from the <TT><FONT FACE="Courier">Container</FONT></TT> class.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">layoutContainer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">BorderLayout</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void layoutContainer(Container
<I>target</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">layoutContainer</FONT></TT> lays out
the components contained in the <TT><I><FONT FACE="Courier">target</FONT></I></TT>
<TT><FONT FACE="Courier">Container</FONT></TT> parameter. This
method reshapes the components in the <TT><FONT FACE="Courier">Container</FONT></TT>
based on the requirements of the <TT><FONT FACE="Courier">BorderLayout</FONT></TT>
itself.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">target</FONT></I></TT> is a <TT><FONT FACE="Courier">Container</FONT></TT> class containing components to be laid out. This class could be a <TT><FONT FACE="Courier">Frame</FONT></TT>, <TT><FONT 
FACE="Courier">Window</FONT></TT>, or any other class derived from the <TT><FONT FACE="Courier">Container</FONT></TT> class.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">toString</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">BorderLayout</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public String toString()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">toString</FONT></TT> returns a string
representation of the <TT><FONT FACE="Courier">BorderLayout</FONT></TT>
class.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >A <TT><FONT FACE="Courier">String</FONT></TT> value containing the <TT><FONT FACE="Courier">BorderLayout</FONT></TT> class's name plus its <TT><I><FONT FACE="Courier">hgap</FONT></I></TT> and <TT><I><FONT FACE="Courier">vgap</FONT></I></TT> values 
(see the <TT><FONT FACE="Courier">BorderLayout()</FONT></TT> constructor).
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Overr.gif"></FONT></TT>
</TD><TD ><FONT FACE="Courier">toString()</FONT> in class <TT><FONT FACE="Courier">Object</FONT></TT>.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=8%><A NAME="Button"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></A></TD><TD WIDTH=499>
<H2><FONT SIZE=5 COLOR=#FF0000>Button</FONT></H2>

</TD><TD WIDTH=8%><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Extends.gif"></FONT></TT></TD>
<TD ><FONT FACE="Courier">Component</FONT></TD></TR>
</TABLE></CENTER>
<P>
<P>
The class hierarchy for the <TT><FONT FACE="Courier">Button</FONT></TT>
class derives from the class <TT><FONT FACE="Courier">java.awt.Component</FONT></TT>.
(See Listing 28.2.) A <TT><FONT FACE="Courier">Button</FONT></TT>
can be placed on any type of layout because it derives directly
from <TT><FONT FACE="Courier">Component</FONT></TT>. <TT><FONT FACE="Courier">Button</FONT></TT>'s
overall derivation is shown in Figure 28.1.
<HR>
<BLOCKQUOTE>
<B>Listing 28.2. Public members of </B><TT><B><FONT FACE="Courier">java.awt.Button</FONT></B></TT><B>.
<BR>
</B>
</BLOCKQUOTE>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public class Button extends Component
{<BR>
&nbsp;&nbsp;public Button()<BR>
&nbsp;&nbsp;public Button(String <I>label</I>)<BR>
&nbsp;&nbsp;public synchronized void addNotify()<BR>
&nbsp;&nbsp;public String getLabel()<BR>
&nbsp;&nbsp;public void setLabel(String <I>label</I>)<BR>
}</FONT></TT>
</BLOCKQUOTE>
<HR>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/const.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">Button</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Button</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public Button()</FONT></TT>
</BLOCKQUOTE>
<P>
This <TT><FONT FACE="Courier">Button</FONT></TT> constructor constructs
a simple button with no text label.<P>
<CENTER><TABLE  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%>
<H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/const.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">Button</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Button</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public Button(String <I>label</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
This <TT><FONT FACE="Courier">Button</FONT></TT> constructor constructs
a simple button with a text label.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">Label</FONT></I></TT> is a <TT><FONT FACE="Courier">String</FONT></TT> value used to set the button's label.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">addNotify</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Button</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public synchronized void addNotify()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">addNotify</FONT></TT> sets the peer of
the button using the function <TT><FONT FACE="Courier">getToolkit().createButton()</FONT></TT>.
Using peer interfaces allows you to change the user interface
of the button without changing its functionality.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Overr.gif"></FONT></TT></TD>
<TD ><FONT FACE="Courier">addNotify()</FONT> in class <TT><FONT FACE="Courier">Component</FONT></TT>.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getLabel</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Button</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public String getLabel()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">getLabel</FONT></TT> returns the button's
label string.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >A <TT><FONT FACE="Courier">String</FONT></TT> value representing the button's label string.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">setLabel</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Button</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void setLabel(String <I>label</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">setLabel</FONT></TT> modifies the button's
label string.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">label</FONT></I></TT> is a <TT><FONT FACE="Courier">String</FONT></TT> value representing the button's new label string.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=8%><A NAME="Canvas"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></A></TD><TD WIDTH=499>
<H2><FONT SIZE=5 COLOR=#FF0000>Canvas</FONT></H2>

</TD><TD WIDTH=8%><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Extends.gif"></FONT></TT>

</TD><TD >
<FONT FACE="Courier">Component</FONT>


</TD></TR>
</TABLE></CENTER>
<P>
<P>
The class hierarchy for the <TT><FONT FACE="Courier">Canvas</FONT></TT>
class derives from the class <TT><FONT FACE="Courier">java.awt.Component</FONT></TT>.
(See Listing 28.3.) A <TT><FONT FACE="Courier">Canvas</FONT></TT>
is used as a drawing surface for GUI applications. <TT><FONT FACE="Courier">Canvas</FONT></TT>'s
overall derivation is shown in Figure 28.1.
<HR>
<BLOCKQUOTE>
<B>Listing 28.3. Public members of </B><TT><B><FONT FACE="Courier">java.awt.Canvas</FONT></B></TT><B>.
<BR>
</B>
</BLOCKQUOTE>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public class Canvas extends Component
{<BR>
&nbsp;&nbsp;public synchronized void addNotify()<BR>
&nbsp;&nbsp;public void paint(Graphics <I>g</I>)<BR>
}</FONT></TT>
</BLOCKQUOTE>
<HR>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">addNotify</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Canvas</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public synchronized void addNotify()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">addNotify</FONT></TT> sets the peer of
the <TT><FONT FACE="Courier">Canvas</FONT></TT> using the function
<TT><FONT FACE="Courier">getToolkit().createCanvas()</FONT></TT>.
Using peer interfaces allows you to change the user interface
of the canvas without changing its functionality.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Overr.gif"></FONT></TT></TD>
<TD ><FONT FACE="Courier">addNotify()</FONT> in class <TT><FONT FACE="Courier">Component</FONT></TT>.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">paint</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Canvas</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void paint(Graphics <I>g</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">paint()</FONT></TT> method paints
the <TT><FONT FACE="Courier">Graphics</FONT></TT> canvas (specified
by the <TT><I><FONT FACE="Courier">g</FONT></I></TT> parameter)
using the default background color, which is determined by calling
<TT><FONT FACE="Courier">getBackground()</FONT></TT>.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Overr.gif"></FONT></TT></TD>
<TD ><FONT FACE="Courier">paint()</FONT> in class <TT><FONT FACE="Courier">Component</FONT></TT>.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=8%><A NAME="CardLayout"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></A></TD><TD WIDTH=499>
<H2><FONT SIZE=5 COLOR=#FF0000>CardLayout</FONT></H2>

</TD><TD WIDTH=8%><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Extends.gif"></FONT></TT>


</TD><TD >
<FONT FACE="Courier">Object</FONT>


</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%>
<IMG SRC="http://docs.rinet.ru/JavDev/Implem.gif">

</TD><TD >
LayoutManager

</TD></TR>
</TABLE></CENTER>
<P>
<P>
The class hierarchy for the <TT><FONT FACE="Courier">CardLayout</FONT></TT>
class derives from the class <TT><FONT FACE="Courier">java.lang.Object</FONT></TT>.
(See Listing 28.4.) The <TT><FONT FACE="Courier">CardLayout</FONT></TT>
class is a <TT><FONT FACE="Courier">LayoutManager</FONT></TT>
that allows the addition of cards, only one of which can be visible
at any given time. The user is allowed to flip through the cards.
<TT><FONT FACE="Courier">CardLayout</FONT></TT>'s overall derivation
is shown in Figure 28.1.
<HR>
<BLOCKQUOTE>
<B>Listing 28.4. Public members of </B><TT><B><FONT FACE="Courier">java.awt.CardLayout</FONT></B></TT><B>.
<BR>
</B>
</BLOCKQUOTE>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public class CardLayout implements LayoutManager
{<BR>
&nbsp;&nbsp;public CardLayout()<BR>
&nbsp;&nbsp;public CardLayout(int <I>hgap</I>, int <I>vgap</I>)
<BR>
&nbsp;&nbsp;public void addLayoutComponent(String <I>name</I>,
Component <I>comp</I>)<BR>
&nbsp;&nbsp;public void removeLayoutComponent(Component <I>comp</I>)
<BR>
&nbsp;&nbsp;public Dimension preferredLayoutSize(Container <I>target</I>)
<BR>
&nbsp;&nbsp;public Dimension minimumLayoutSize(Container <I>target</I>)
<BR>
&nbsp;&nbsp;public void layoutContainer(Container <I>parent</I>)
<BR>
&nbsp;&nbsp;public void first(Container <I>parent</I>)<BR>
&nbsp;&nbsp;public void next(Container <I>parent</I>)<BR>
<BR>
&nbsp;&nbsp;public void previous(Container <I>parent</I>)<BR>
&nbsp;&nbsp;public void last(Container <I>parent</I>)<BR>
&nbsp;&nbsp;public void show(Container <I>parent</I>, String <I>name</I>)
<BR>
&nbsp;&nbsp;public String toString()<BR>
}</FONT></TT>
</BLOCKQUOTE>
<HR>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/const.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">CardLayout</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">CardLayout</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public CardLayout()</FONT></TT>
</BLOCKQUOTE>
<P>
This <TT><FONT FACE="Courier">CardLayout</FONT></TT> constructor
creates a new <TT><FONT FACE="Courier">CardLayout</FONT></TT>
layout manager.<P>
<CENTER><TABLE  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%>
<H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/const.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">CardLayout</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">CardLayout</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public CardLayout(int <I>hgap</I>, int
<I>vgap</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
This <TT><FONT FACE="Courier">CardLayout</FONT></TT> constructor
constructs a <TT><FONT FACE="Courier">CardLayout</FONT></TT> layout
manager using the <TT><I><FONT FACE="Courier">hgap</FONT></I></TT>
and <TT><I><FONT FACE="Courier">vgap</FONT></I></TT> values to
set the horizontal and vertical gap sizes.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">Hgap</FONT></I></TT> is an integer value used to set the horizontal gap size.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">vgap</FONT></I></TT> is an integer value used to set the vertical gap size.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">addLayoutComponent</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">CardLayout</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void addLayoutComponent(String
<I>name</I>, Component <I>comp</I>)</FONT></TT>
</BLOCKQUOTE>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">name</FONT></I></TT> is a string value that corresponds to the component's name.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">comp</FONT></I></TT> is a component object to be added to this layout manager.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">removeLayoutComponent</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">CardLayout</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void removeLayoutComponent(Component
<I>comp</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">removeLayoutComponent</FONT></TT> removes
the specified component from the layout manager.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">comp</FONT></I></TT> is the component object to be removed.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">minimumLayoutSize</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">CardLayout</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public Dimension minimumLayoutSize(Container
<I>target</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">minimumLayoutSize</FONT></TT> returns
the minimum <TT><FONT FACE="Courier">Dimension</FONT></TT> needed
to lay out the components contained in the <TT><I><FONT FACE="Courier">target</FONT></I></TT>
parameter. Note that this function only determines the required
size based on visible components.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">target</FONT></I></TT> is a <TT><FONT FACE="Courier">Container</FONT></TT> class containing components to be laid out. This class could be a <TT><FONT FACE="Courier">Frame</FONT></TT>, <TT><FONT 
FACE="Courier">Window</FONT></TT>, or any other class derived from the <TT><FONT FACE="Courier">Container</FONT></TT> class.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">preferredLayoutSize</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">CardLayout</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public Dimension preferredLayoutSize(Container
<I>target</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">preferredLayoutSize</FONT></TT> returns
the preferred <TT><FONT FACE="Courier">Dimension</FONT></TT> needed
to lay out the components contained in the <TT><I><FONT FACE="Courier">target</FONT></I></TT>
parameter. This <TT><FONT FACE="Courier">Dimension</FONT></TT>
is based on the individual component's  preferred sizes. Note
that this function only determines the required size based on
visible  components.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">target</FONT></I></TT> is a <TT><FONT FACE="Courier">Container</FONT></TT> class containing components to be laid out. This class could be a <TT><FONT FACE="Courier">Frame</FONT></TT>, <TT><FONT 
FACE="Courier">Window</FONT></TT>, or any other class derived from the <TT><FONT FACE="Courier">Container</FONT></TT> class.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">layoutContainer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">CardLayout</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void layoutContainer(Container
<I>parent</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">layoutContainer</FONT></TT> lays out
the components contained in the <TT><I><FONT FACE="Courier">parent</FONT></I></TT>
<TT><FONT FACE="Courier">Container</FONT></TT> parameter. This
method reshapes the components in the <TT><FONT FACE="Courier">Container</FONT></TT>
based on the requirements of the <TT><FONT FACE="Courier">BorderLayout</FONT></TT>
itself.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">parent</FONT></I></TT> is a <TT><FONT FACE="Courier">Container</FONT></TT> class containing components to be laid out. This class could be a <TT><FONT FACE="Courier">Frame</FONT></TT>, <TT><FONT 
FACE="Courier">Window</FONT></TT>, or any other class derived from the <TT><FONT FACE="Courier">Container</FONT></TT> class.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">first</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">CardLayout</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void first(Container <I>parent</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">first()</FONT></TT> method shows
the first component in <TT><FONT FACE="Courier">CardLayout</FONT></TT>
(the first card).
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">parent</FONT></I></TT> is the parent <TT><FONT FACE="Courier">Container</FONT></TT> class containing the components to be flipped through.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">next</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">CardLayout</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void next(Container <I>parent</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">next()</FONT></TT> method shows the
next component in <TT><FONT FACE="Courier">CardLayout</FONT></TT>
(the next card).
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">parent</FONT></I></TT> is the parent <TT><FONT FACE="Courier">Container</FONT></TT> class containing the components to be flipped through.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">previous</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">CardLayout</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void previous(Container <I>parent</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">previous()</FONT></TT> method shows
the previous component in <TT><FONT FACE="Courier">CardLayout</FONT></TT>
(the previous card).
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">parent</FONT></I></TT> is the parent <TT><FONT FACE="Courier">Container</FONT></TT> class containing the components to be flipped through.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">last</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">CardLayout</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void last(Container <I>parent</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">last()</FONT></TT> method shows the
last component in <TT><FONT FACE="Courier">CardLayout</FONT></TT>
(the last card).
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">parent</FONT></I></TT> is the parent <TT><FONT FACE="Courier">Container</FONT></TT> class containing the components to be flipped through.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">show</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">CardLayout</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void show(Container <I>parent</I>,
String <I>name</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">show()</FONT></TT> method flips to
the component specified in the <TT><I><FONT FACE="Courier">name</FONT></I></TT>
parameter.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">parent</FONT></I></TT> is the parent <TT><FONT FACE="Courier">Container</FONT></TT> class containing the components to be flipped through.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">name</FONT></I></TT> is a string value representing the name of the component to be displayed.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">toString</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">CardLayout</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public String toString()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">toString</FONT></TT> returns a string
representation of the <TT><FONT FACE="Courier">CardLayout</FONT></TT>
class.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >A <TT><FONT FACE="Courier">String</FONT></TT> value containing the <TT><FONT FACE="Courier">CardLayout</FONT></TT> class's name plus its <TT><I><FONT FACE="Courier">hgap</FONT></I></TT> and <TT><I><FONT FACE="Courier">vgap</FONT></I></TT> values (see 
the <TT><FONT FACE="Courier">CardLayout()</FONT></TT> constructor).
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Overr.gif"></FONT></TT>
</TD><TD ><FONT FACE="Courier">toString()</FONT> in class <TT><FONT FACE="Courier">Object</FONT></TT>.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=8%><A NAME="Checkbox"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></A></TD><TD WIDTH=499>
<H2><FONT SIZE=5 COLOR=#FF0000>Checkbox</FONT></H2>

</TD><TD WIDTH=8%><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Extends.gif"></FONT></TT>


</TD><TD >
<FONT FACE="Courier">Component</FONT>

</TD></TR>
</TABLE></CENTER>
<P>
<P>
The class hierarchy for the <TT><FONT FACE="Courier">Checkbox</FONT></TT>
class derives from the class <TT><FONT FACE="Courier">java.awt.Component</FONT></TT>.
(See Listing 28.5.) A <TT><FONT FACE="Courier">Checkbox</FONT></TT>
is a user interface component that represents a <TT><FONT FACE="Courier">true</FONT></TT>/<TT><FONT FACE="Courier">false</FONT></TT>
(or <TT><FONT FACE="Courier">on</FONT></TT>/<TT><FONT FACE="Courier">off</FONT></TT>)
value. <TT><FONT FACE="Courier">Checkbox</FONT></TT>'s overall
derivation is shown in Figure 28.1.
<HR>
<BLOCKQUOTE>
<B>Listing 28.5. Public members of </B><TT><B><FONT FACE="Courier">java.awt.Checkbox</FONT></B></TT><B>.
<BR>
</B>
</BLOCKQUOTE>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public class Checkbox extends Component
{<BR>
&nbsp;&nbsp;public Checkbox()<BR>
&nbsp;&nbsp;public Checkbox(String <I>label</I>)<BR>
&nbsp;&nbsp;public Checkbox(String <I>label</I>, CheckboxGroup
<I>group</I>, boolean <I>state</I>)<BR>
&nbsp;&nbsp;public synchronized void addNotify()<BR>
&nbsp;&nbsp;public String getLabel()<BR>
&nbsp;&nbsp;public void setLabel(String <I>label</I>)<BR>
&nbsp;&nbsp;public boolean getState()<BR>
&nbsp;&nbsp;public void setState(boolean <I>state</I>)<BR>
&nbsp;&nbsp;public CheckboxGroup getCheckboxGroup()<BR>
&nbsp;&nbsp;public void setCheckboxGroup(CheckboxGroup <I>g</I>)
<BR>
}</FONT></TT>
</BLOCKQUOTE>
<HR>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/const.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">Checkbox</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Checkbox</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public Checkbox()</FONT></TT>
</BLOCKQUOTE>
<P>
This <TT><FONT FACE="Courier">Checkbox</FONT></TT> constructor
constructs the simplest of all checkboxes: one with no label,
no group, and a false state value.<BR>
<P><CENTER><TABLE  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/const.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">Checkbox</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Checkbox</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public Checkbox(String <I>label</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
This <TT><FONT FACE="Courier">Checkbox</FONT></TT> constructor
constructs a checkbox using the <TT><I><FONT FACE="Courier">label</FONT></I></TT>
parameter to set the checkbox's label. This checkbox belongs to
no group and is set to a false state value.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">label</FONT></I></TT> is a string value representing the <TT><FONT FACE="Courier">Checkbox</FONT></TT>'s label.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/const.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">Checkbox</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Checkbox</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public Checkbox(String <I>label</I>,
CheckboxGroup <I>group</I>, boolean <I>state</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
This <TT><FONT FACE="Courier">Checkbox</FONT></TT> constructor
constructs a checkbox including the label, group, and initial
value.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">label</FONT></I></TT> is a string value representing the <TT><FONT FACE="Courier">Checkbox</FONT></TT>'s label.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">group</FONT></I></TT> is a <TT><FONT FACE="Courier">CheckboxGroup</FONT></TT> object that this <TT><FONT FACE="Courier">Checkbox</FONT></TT> is a member of. (For more information on <TT><FONT 
FACE="Courier">CheckboxGroup</FONT></TT>s, see the documentation for the <TT><FONT FACE="Courier">CheckboxGroup</FONT></TT> class later in this chapter.)
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">state</FONT></I></TT> is the initial state value for this <TT><FONT FACE="Courier">Checkbox</FONT></TT>.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">addNotify</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Checkbox</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public synchronized void addNotify()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">addNotify</FONT></TT> sets the peer of
the <TT><FONT FACE="Courier">Checkbox</FONT></TT> using the function
<TT><FONT FACE="Courier">getToolkit().createCheckbox()</FONT></TT>.
Using peer interfaces allows you to change the user interface
of the <TT><FONT FACE="Courier">Checkbox</FONT></TT> without changing
its functionality.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Overr.gif"></FONT></TT></TD>
<TD ><FONT FACE="Courier">addNotify()</FONT> in class <TT><FONT FACE="Courier">Component</FONT></TT>.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getLabel</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Checkbox</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public String getLabel()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">getLabel</FONT></TT> returns the <TT><FONT FACE="Courier">Checkbox</FONT></TT>'s
label string.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >A <TT><FONT FACE="Courier">String</FONT></TT> value representing the <TT><FONT FACE="Courier">Checkbox</FONT></TT>'s label string.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">setLabel</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Checkbox</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void setLabel(String <I>label</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">setLabel</FONT></TT> modifies the <TT><FONT FACE="Courier">Checkbox</FONT></TT>'s
label string.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">label</FONT></I></TT> is a <TT><FONT FACE="Courier">String</FONT></TT> value representing the <TT><FONT FACE="Courier">Checkbox</FONT></TT>'s new label string.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getState</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Checkbox</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public boolean getState()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">getState</FONT></TT> returns the <TT><FONT FACE="Courier">Checkbox</FONT></TT>'s
current state value.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >A Boolean value representing the <TT><FONT FACE="Courier">Checkbox</FONT></TT>'s current state.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">setState</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Checkbox</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void setState(boolean <I>state</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">setState</FONT></TT> sets the <TT><FONT FACE="Courier">Checkbox</FONT></TT>
to the value represented by the <TT><I><FONT FACE="Courier">state</FONT></I></TT>
parameter.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">state</FONT></I></TT> is a Boolean value containing the new value of the <TT><FONT FACE="Courier">Checkbox</FONT></TT>'s state.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getCheckboxGroup</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Checkbox</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public CheckboxGroup getCheckboxGroup()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">getCheckboxGroup()</FONT></TT> method
returns the <TT><FONT FACE="Courier">CheckboxGroup</FONT></TT>
that this <TT><FONT FACE="Courier">Checkbox</FONT></TT> is a member
of.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >A <TT><FONT FACE="Courier">CheckboxGroup</FONT></TT> class that this <TT><FONT FACE="Courier">Checkbox</FONT></TT> is a member of. (For more information on <TT><FONT FACE="Courier">CheckboxGroup</FONT></TT>s, see the documentation for the <TT><FONT 
FACE="Courier">CheckboxGroup</FONT></TT> class later in this chapter.)
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">setCheckboxGroup</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Checkbox</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void setCheckboxGroup(CheckboxGroup
<I>g</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">setCheckboxGroup()</FONT></TT> method
adds this <TT><FONT FACE="Courier">Checkbox</FONT></TT> to a <TT><FONT FACE="Courier">CheckboxGroup</FONT></TT>.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">g</FONT></I></TT> is a <TT><FONT FACE="Courier">CheckboxGroup</FONT></TT> class that this <TT><FONT FACE="Courier">Checkbox</FONT></TT> is to be added to. (For more information on <TT><FONT 
FACE="Courier">CheckboxGroup</FONT></TT>s, see the documentation for the <TT><FONT FACE="Courier">CheckboxGroup</FONT></TT> class later in this chapter.)
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=8%><A NAME="CheckboxGroup"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></A></TD><TD WIDTH=499>
<H2><FONT SIZE=5 COLOR=#FF0000>CheckboxGroup</FONT></H2>

</TD><TD WIDTH=8%><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Extends.gif"></FONT></TT>


</TD><TD >
<FONT FACE="Courier">Object</FONT>

</TD></TR>
</TABLE></CENTER>
<P>
<P>
The class hierarchy for the <TT><FONT FACE="Courier">CheckboxGroup</FONT></TT>
class derives from the class <TT><FONT FACE="Courier">java.lang.Object</FONT></TT>.
(See Listing 28.6.) A <TT><FONT FACE="Courier">CheckboxGroup</FONT></TT>
groups a set of <TT><FONT FACE="Courier">Checkbox</FONT></TT>
classes. When <TT><FONT FACE="Courier">Checkbox</FONT></TT>es
are created within a <TT><FONT FACE="Courier">CheckboxGroup</FONT></TT>,
only one <TT><FONT FACE="Courier">Checkbox</FONT></TT> can be
selected at one time. <TT><FONT FACE="Courier">CheckboxGroup</FONT></TT>'s
overall derivation is shown in Figure 28.1.
<HR>
<BLOCKQUOTE>
<B>Listing 28.6. Public members of </B><TT><B><FONT FACE="Courier">java.awt.CheckboxGroup</FONT></B></TT><B>.
<BR>
</B>
</BLOCKQUOTE>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public class CheckboxGroup {<BR>
&nbsp;&nbsp;public CheckboxGroup()<BR>
&nbsp;&nbsp;public Checkbox getCurrent()<BR>
&nbsp;&nbsp;public synchronized void setCurrent(Checkbox <I>box</I>)
<BR>
&nbsp;&nbsp;public String toString()<BR>
}</FONT></TT>
</BLOCKQUOTE>
<HR>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/const.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">CheckboxGroup</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">CheckboxGroup</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public CheckboxGroup()</FONT></TT>
</BLOCKQUOTE>
<P>
This <TT><FONT FACE="Courier">CheckboxGroup</FONT></TT> constructor
constructs a <TT><FONT FACE="Courier">CheckboxGroup</FONT></TT>
instance with no checkbox  members.<P>
<CENTER><TABLE  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%>
<H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getCurrent</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">CheckboxGroup</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public Checkbox getCurrent()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">getCurrent()</FONT></TT> method returns
the current <TT><FONT FACE="Courier">Checkbox</FONT></TT>.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >A <TT><FONT FACE="Courier">Checkbox</FONT></TT> object representing the currently selected <TT><FONT FACE="Courier">Checkbox</FONT></TT>.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">setCurrent</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">CheckboxGroup</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public synchronized void setCurrent(Checkbox
<I>box</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">setCurrent()</FONT></TT> method sets
the current <TT><FONT FACE="Courier">Checkbox</FONT></TT> in this
<TT><FONT FACE="Courier">CheckboxGroup</FONT></TT>.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">box</FONT></I></TT> is the <TT><FONT FACE="Courier">Checkbox</FONT></TT> object that is to be made current.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">toString</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">CheckboxGroup</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public String toString()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">toString()</FONT></TT> returns a string
containing <TT><FONT FACE="Courier">CheckboxGroup</FONT></TT>
information.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >A <TT><FONT FACE="Courier">String</FONT></TT> value containing the <TT><FONT FACE="Courier">CheckboxGroup</FONT></TT>'s name as well as the name of the currently selected <TT><FONT FACE="Courier">Checkbox</FONT></TT>.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Overr.gif"></FONT></TT>
</TD><TD ><FONT FACE="Courier">toString()</FONT> in class <TT><FONT FACE="Courier">Object</FONT></TT>.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=8%><A NAME="CheckboxMenuItem"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></A></TD><TD WIDTH=499>
<H2><FONT SIZE=5 COLOR=#FF0000>CheckboxMenuItem</FONT></H2>

</TD><TD WIDTH=8%><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Extends.gif"></FONT></TT>


</TD><TD >
<FONT FACE="Courier">MenuItem</FONT>


</TD></TR>
</TABLE></CENTER>
<P>
<P>
The class hierarchy for the <TT><FONT FACE="Courier">CheckboxMenuItem</FONT></TT>
class derives from the class <TT><FONT FACE="Courier">java.awt.MenuItem</FONT></TT>.
(See Listing 28.7.) A <TT><FONT FACE="Courier">CheckboxMenuItem</FONT></TT>
is a user interface component that can be added to a menu to represent
a Boolean value selection. <TT><FONT FACE="Courier">CheckboxMenuItem</FONT></TT>'s
overall derivation is shown in Figure 28.1.
<HR>
<BLOCKQUOTE>
<B>Listing 28.7. Public members of </B><TT><B><FONT FACE="Courier">java.awt.CheckboxMenuItem</FONT></B></TT><B>.
<BR>
</B>
</BLOCKQUOTE>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public class CheckboxMenuItem extends
MenuItem {<BR>
&nbsp;&nbsp;public CheckboxMenuItem(String <I>label</I>)<BR>
&nbsp;&nbsp;public synchronized void addNotify()<BR>
&nbsp;&nbsp;public boolean getState()<BR>
&nbsp;&nbsp;public void setState(boolean <I>t</I>)<BR>
&nbsp;&nbsp;public String paramString()<BR>
}</FONT></TT>
</BLOCKQUOTE>
<HR>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/const.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">CheckboxMenuItem</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">CheckboxMenuItem</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public CheckboxMenuItem(String <I>label</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
This <TT><FONT FACE="Courier">CheckboxMenuItem</FONT></TT> constructor
creates a <TT><FONT FACE="Courier">CheckboxMenuItem</FONT></TT>
with a text label containing the string passed in.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">label</FONT></I></TT> is a string value representing the label of the <TT><FONT FACE="Courier">CheckboxMenuItem</FONT></TT> to be displayed.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">addNotify</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">CheckboxMenuItem</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public synchronized void addNotify()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">addNotify</FONT></TT> sets the peer of
the <TT><FONT FACE="Courier">CheckboxMenuItem</FONT></TT> using
the function <TT><FONT FACE="Courier">getToolkit(). createCheckboxMenuItem()</FONT></TT>.
Using peer interfaces allows you to change the user interface
of the <TT><FONT FACE="Courier">CheckboxMenuItem</FONT></TT> without
changing its functionality.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Overr.gif"></FONT></TT></TD>
<TD ><FONT FACE="Courier">addNotify()</FONT> in class <TT><FONT FACE="Courier">Component</FONT></TT>.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getState</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">CheckboxMenuItem</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public boolean getState()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">getState()</FONT></TT> returns the state
value of the <TT><FONT FACE="Courier">CheckboxMenuItem</FONT></TT>'s
checkbox.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >A Boolean value representing the <TT><FONT FACE="Courier">CheckboxMenuItem</FONT></TT>'s checkbox state value.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">setState</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">CheckboxMenuItem</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void setState(boolean <I>t</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">setState()</FONT></TT> sets the <TT><FONT FACE="Courier">CheckboxMenuItem</FONT></TT>'s
checkbox state value.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">t</FONT></I></TT> is a Boolean value representing the <TT><FONT FACE="Courier">CheckboxMenuItem</FONT></TT>'s checkbox state value.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">paramString</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">CheckboxMenuItem</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public String paramString()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">paramString()</FONT></TT> returns a string
containing <TT><FONT FACE="Courier">CheckboxMenuItem</FONT></TT>
information.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >A string value containing the <TT><FONT FACE="Courier">CheckboxMenuItem</FONT></TT>'s label as well as the state value of the <TT><FONT FACE="Courier">CheckboxMenuItem</FONT></TT>'s checkbox.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Overr.gif"></FONT></TT>
</TD><TD ><FONT FACE="Courier">paramString()</FONT> in class <TT><FONT FACE="Courier">MenuItem</FONT></TT>.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=8%><A NAME="Choice"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></A></TD><TD WIDTH=499>
<H2><FONT SIZE=5 COLOR=#FF0000>Choice</FONT></H2>

</TD><TD WIDTH=8%><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Extends.gif"></FONT></TT>


</TD><TD >
<FONT FACE="Courier">Component</FONT>

</TD></TR>
</TABLE></CENTER>
<P>
<P>
The class hierarchy for the <TT><FONT FACE="Courier">Choice</FONT></TT>
class derives from the class <TT><FONT FACE="Courier">java.awt.Component</FONT></TT>.
(See Listing 28.8.) A <TT><FONT FACE="Courier">Choice</FONT></TT>
is a user interface component that displays a pop-up menu. The
current selection is displayed as the pop-up menu's title. <TT><FONT FACE="Courier">Choice</FONT></TT>'s
overall derivation is shown in Figure 28.1.
<HR>
<BLOCKQUOTE>
<B>Listing 28.8. Public members of </B><TT><B><FONT FACE="Courier">java.awt.Choice</FONT></B></TT><B>.
<BR>
</B>
</BLOCKQUOTE>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public class Choice extends Component
{<BR>
&nbsp;&nbsp;public Choice()<BR>
&nbsp;&nbsp;public synchronized void addNotify()<BR>
&nbsp;&nbsp;public int countItems()<BR>
&nbsp;&nbsp;public String getItem(int <I>index</I>)<BR>
&nbsp;&nbsp;public synchronized void addItem(String <I>item</I>)
<BR>
&nbsp;&nbsp;public String getSelectedItem()<BR>
&nbsp;&nbsp;public int getSelectedIndex()<BR>
&nbsp;&nbsp;public synchronized void select(int <I>pos</I>)<BR>
&nbsp;&nbsp;public void select(String <I>str</I>)<BR>
}</FONT></TT>
</BLOCKQUOTE>
<HR>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/const.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">Choice</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Choice</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public Choice()</FONT></TT>
</BLOCKQUOTE>
<P>
This <TT><FONT FACE="Courier">Choice</FONT></TT> constructor creates
a default <TT><FONT FACE="Courier">Choice</FONT></TT> object that
contains no information.<P>
<CENTER><TABLE  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%>
<H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">addNotify</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Choice</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public synchronized void addNotify()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">addNotify</FONT></TT> sets the peer of
the <TT><FONT FACE="Courier">Choice</FONT></TT> using the function
<TT><FONT FACE="Courier">getToolkit().createChoice()</FONT></TT>.
Using peer interfaces allows you to change the user interface
of the <TT><FONT FACE="Courier">Choice</FONT></TT> without changing
its functionality.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Overr.gif"></FONT></TT></TD>
<TD ><FONT FACE="Courier">addNotify()</FONT> in class <TT><FONT FACE="Courier">Component</FONT></TT>.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">countItems</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Choice</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public int countItems()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">countItems()</FONT></TT> returns the
number of items (or choices) that are available in this <TT><FONT FACE="Courier">Choice</FONT></TT>
object. See the <TT><FONT FACE="Courier">addItem()</FONT></TT>
method later in this section for information on <TT><FONT FACE="Courier">Choice</FONT></TT>
items.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >An integer value containing the number of items stored in this <TT><FONT FACE="Courier">Choice</FONT></TT> object.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getItem</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Choice</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public String getItem(int <I>index</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">getItem()</FONT></TT> method returns
the choice string at the index represented by the index value
passed in.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">index</FONT></I></TT> is an integer value representing the index of the string item to be returned.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT>
</TD><TD >A <TT><FONT FACE="Courier">String</FONT></TT> value representing the string at the index passed into this method. See the <TT><FONT FACE="Courier">addItem()</FONT></TT> method for information on <TT><FONT FACE="Courier">Choice</FONT></TT> items.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">addItem</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Choice</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public synchronized void addItem(String
<I>item</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">addItem()</FONT></TT> adds a <TT><FONT FACE="Courier">String</FONT></TT>
to a <TT><FONT FACE="Courier">Choice</FONT></TT> object's internal
list. The currently selected item in that list is displayed in
the <TT><FONT FACE="Courier">Choice</FONT></TT> object's pop-up
menu.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">item</FONT></I></TT> is a <TT><FONT FACE="Courier">String</FONT></TT> object containing a string to be added to the choice list.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Throws.gif"></FONT></TT>
</TD><TD >A <TT><FONT FACE="Courier">NullPointerException</FONT></TT> if the string item to be added is null.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getSelectedItem</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Choice</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public String getSelectedItem()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">getSelectedItem()</FONT></TT> returns
the string value of the currently selected item. See the <TT><FONT FACE="Courier">select()</FONT></TT>
method later in this section for information on selecting <TT><FONT FACE="Courier">Choice</FONT></TT>
items.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >A <TT><FONT FACE="Courier">String</FONT></TT> value containing the currently selected item's string.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getSelectedIndex</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Choice</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public int getSelectedIndex()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">getSelectedIndex()</FONT></TT> returns
the index of the currently selected item. See the <TT><FONT FACE="Courier">select()</FONT></TT>
method for information on selecting <TT><FONT FACE="Courier">Choice</FONT></TT>
items.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >An integer value containing the index of the currently selected item.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">select</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Choice</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public synchronized void select(int <I>pos</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
This <TT><FONT FACE="Courier">select()</FONT></TT> method selects
the item at the position represented by the <TT><I><FONT FACE="Courier">pos</FONT></I></TT>
parameter.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">pos</FONT></I></TT> is an integer value representing the position of the item to be selected.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Throws.gif"></FONT></TT>
</TD><TD >An <TT><FONT FACE="Courier">IllegalArgumentException</FONT></TT> if the position value passed in is invalid.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">select</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Choice</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void select(String <I>str</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
This <TT><FONT FACE="Courier">select()</FONT></TT> method selects
the item represented by the <TT><I><FONT FACE="Courier">str</FONT></I></TT>
parameter.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">str</FONT></I></TT> is a <TT><FONT FACE="Courier">String</FONT></TT> value representing the string value of the choice to be selected.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=8%><A NAME="Color"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></A></TD><TD WIDTH=499>
<H2><FONT SIZE=5 COLOR=#FF0000>Color</FONT></H2>

</TD><TD WIDTH=8%><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Extends.gif"></FONT></TT>


</TD><TD >
<FONT FACE="Courier">Object</FONT>


</TD></TR>
</TABLE></CENTER>
<P>
<P>
The class hierarchy for the <TT><FONT FACE="Courier">Color</FONT></TT>
class derives from the class <TT><FONT FACE="Courier">java.awt.Object</FONT></TT>.
(See Listing 28.9.) The <TT><FONT FACE="Courier">Color </FONT></TT>1
class is provided to encapsulate RGB (Red-Green-Blue) color values.
<TT><FONT FACE="Courier">Color</FONT></TT>'s overall derivation
is shown in Figure 28.1.
<HR>
<BLOCKQUOTE>
<B>Listing 28.9. Public members of </B><TT><B><FONT FACE="Courier">java.awt.Color</FONT></B></TT><B>.
<BR>
</B>
</BLOCKQUOTE>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public final class Color {<BR>
&nbsp;&nbsp;public final static Color white<BR>
&nbsp;&nbsp;public final static Color lightGray<BR>
&nbsp;&nbsp;public final static Color gray<BR>
&nbsp;&nbsp;public final static Color darkGray<BR>
&nbsp;&nbsp;public final static Color black<BR>
&nbsp;&nbsp;public final static Color red<BR>
&nbsp;&nbsp;public final static Color pink<BR>
&nbsp;&nbsp;public final static Color orange<BR>
&nbsp;&nbsp;public final static Color yellow<BR>
&nbsp;&nbsp;public final static Color green<BR>
&nbsp;&nbsp;public final static Color magenta<BR>
&nbsp;&nbsp;public final static Color cyan<BR>
&nbsp;&nbsp;public final static Color blue<BR>
&nbsp;&nbsp;public Color(int <I>r</I>, int <I>g</I>, int <I>b</I>)
<BR>
&nbsp;&nbsp;public Color(int <I>rgb</I>)<BR>
&nbsp;&nbsp;public Color(float <I>r</I>, float <I>g</I>, float
<I>b</I>)<BR>
&nbsp;&nbsp;public int getRed()<BR>
&nbsp;&nbsp;public int getGreen()<BR>
&nbsp;&nbsp;public int getBlue()<BR>
&nbsp;&nbsp;public int getRGB()<BR>
&nbsp;&nbsp;public Color brighter()<BR>
&nbsp;&nbsp;public Color darker()<BR>
&nbsp;&nbsp;public int hashCode()<BR>
&nbsp;&nbsp;public boolean equals(Object <I>obj</I>)<BR>
&nbsp;&nbsp;public String toString()<BR>
&nbsp;&nbsp;public static Color getColor(String <I>nm</I>)<BR>
&nbsp;&nbsp;public static Color getColor(String <I>nm</I>, Color
<I>v</I>)<BR>
&nbsp;&nbsp;public static Color getColor(String <I>nm</I>, int
<I>v</I>)<BR>
&nbsp;&nbsp;public static int HSBtoRGB(float <I>hue</I>, float
<I>saturation</I>, float <I>brightness</I>)<BR>
&nbsp;&nbsp;public static float[] RGBtoHSB(int r, int <I>g</I>,
int <I>b</I>, float[] <I>hsbvals</I>)<BR>
&nbsp;&nbsp;public static Color getHSBColor(float <I>h</I>, float
<I>s</I>, float <I>b</I>)<BR>
}</FONT></TT>
</BLOCKQUOTE>
<HR>

<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=589><B>Public Static Values</B></TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public final static Color white</FONT></B></TT>
</BLOCKQUOTE>
<P>
Static value representing the color white.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public final static Color lightGray</FONT></B></TT>
</BLOCKQUOTE>
<P>
Static value representing the color light gray.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public final static Color gray</FONT></B></TT>
</BLOCKQUOTE>
<P>
Static value representing the color gray.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public final static Color darkGray</FONT></B></TT>
</BLOCKQUOTE>
<P>
Static value representing the color dark gray.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public final static Color black</FONT></B></TT>
</BLOCKQUOTE>
<P>
Static value representing the color black.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public final static Color red</FONT></B></TT>
</BLOCKQUOTE>
<P>
Static value representing the color red.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public final static Color pink</FONT></B></TT>
</BLOCKQUOTE>
<P>
Static value representing the color pink.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public final static Color orange</FONT></B></TT>
</BLOCKQUOTE>
<P>
Static value representing the color orange.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public final static Color yellow</FONT></B></TT>
</BLOCKQUOTE>
<P>
Static value representing the color yellow.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public final static Color green</FONT></B></TT>
</BLOCKQUOTE>
<P>
Static value representing the color green.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public final static Color magenta</FONT></B></TT>
</BLOCKQUOTE>
<P>
Static value representing the color magenta.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public final static Color cyan</FONT></B></TT>
</BLOCKQUOTE>
<P>
Static value representing the color cyan.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public final static Color blue</FONT></B></TT>
</BLOCKQUOTE>
<P>
Static value representing the color blue.<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%>
<H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/const.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">Color</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Color</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public Color(int <I>r</I>, int <I>g</I>,
int <I>b</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
This <TT><FONT FACE="Courier">Color</FONT></TT> constructor accepts
as arguments individual red, green, and blue color values. These
values must be in the range 0-255 and are used to build a 24-bit
color value using the following method:
<BLOCKQUOTE>
The red value represents bits 16-23.
</BLOCKQUOTE>
<BLOCKQUOTE>
The green value represents bits 8-15.
</BLOCKQUOTE>
<BLOCKQUOTE>
The blue value represents bits 0-7.
</BLOCKQUOTE>
<P>
This <TT><FONT FACE="Courier">Color</FONT></TT> constructor determines
the closest color to the value supported by the current output
device.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">r</FONT></I></TT> is the red color value.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">g</FONT></I></TT> is the green color value.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">b</FONT></I></TT> is the blue color value.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/const.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">Color</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Color</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public Color(int <I>rgb</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
This <TT><FONT FACE="Courier">Color</FONT></TT> constructor creates
a <TT><FONT FACE="Courier">Color</FONT></TT> object based on the
RGB color value passed in.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">rgb</FONT></I></TT> is an integer value containing the red, green, and blue color values that are used to create this <TT><FONT FACE="Courier">Color</FONT></TT> object.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/const.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">Color</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Color</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public Color(float <I>r</I>, float <I>g</I>,
float <I>b</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
This <TT><FONT FACE="Courier">Color</FONT></TT> constructor creates
a <TT><FONT FACE="Courier">Color</FONT></TT> object based on the
color values passed in. This constructor is similar to the <TT><FONT FACE="Courier">Color</FONT></TT>
constructor that accepts integer red, green, and blue inputs 
except that this <TT><FONT FACE="Courier">Color</FONT></TT> constructor
accepts <TT><FONT FACE="Courier">float</FONT></TT> values. These
values must be in the range  0-1.0 and are used to build a 24-bit
color value using the following method:
<BLOCKQUOTE>
The red value * 255 represents bits 16-23.
</BLOCKQUOTE>
<BLOCKQUOTE>
The green value * 255 represents bits 8-15.
</BLOCKQUOTE>
<BLOCKQUOTE>
The blue value * 255 represents bits 0-7.
</BLOCKQUOTE>
<P>
This <TT><FONT FACE="Courier">Color</FONT></TT> constructor determines
the closest color to the value supported by the current output
device.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">r</FONT></I></TT> is the red color value.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">g</FONT></I></TT> is the green color value.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">b</FONT></I></TT> is the blue color value.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getRed</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Color</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public int getRed()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">getRed()</FONT></TT> method returns
the red component of this <TT><FONT FACE="Courier">Color</FONT></TT>.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >An integer value representing this <TT><FONT FACE="Courier">Color</FONT></TT>'s red component.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getGreen</FONT></TT></H4>

</TD><TD WIDTH=8%></TD><TD WIDTH=20%><H4><FONT FACE="Courier">Color</FONT></H4>

</TD><TD WIDTH=8%></TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public int getGreen()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">getGreen()</FONT></TT> method returns
the green component of this <TT><FONT FACE="Courier">Color</FONT></TT>.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >An integer value representing this <TT><FONT FACE="Courier">Color</FONT></TT>'s green component.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getBlue</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Color</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public int getBlue()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">getBlue()</FONT></TT> method returns
the blue component of this <TT><FONT FACE="Courier">Color</FONT></TT>.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >An integer value representing this <TT><FONT FACE="Courier">Color</FONT></TT>'s blue component.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getRGB</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Color</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public int getRGB()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">getRGB()</FONT></TT> method returns
the RGB value of this <TT><FONT FACE="Courier">Color</FONT></TT>.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >An integer value representing this <TT><FONT FACE="Courier">Color</FONT></TT>'s RGB value in the default RGB color model.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">brighter</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Color</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public Color brighter()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">brighter()</FONT></TT> method brightens
this <TT><FONT FACE="Courier">Color</FONT></TT> by modifying the
RGB color value. This method increases the individual red, green,
and blue color components by a factor of approxi- mately 1.4.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >A <TT><FONT FACE="Courier">Color</FONT></TT> object representing a brighter version of the current color.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">darker</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Color</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public Color darker()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">darker()</FONT></TT> method darkens
this <TT><FONT FACE="Courier">Color</FONT></TT> by modifying the
RGB color value. This method decreases the individual red, green,
and blue color components by a factor of approxi- mately 1.4.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >A <TT><FONT FACE="Courier">Color</FONT></TT> object representing a darker version of the current color.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">hashCode</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Color</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public int hashCode()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">hashCode()</FONT></TT> returns this <TT><FONT FACE="Courier">Color</FONT></TT>'s
hash code. This is useful when storing <TT><FONT FACE="Courier">Color</FONT></TT>s
in a hash table.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >An integer value representing this <TT><FONT FACE="Courier">Color</FONT></TT>'s hash code.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Overr.gif"></FONT></TT>
</TD><TD ><FONT FACE="Courier">hashCode()</FONT> in class <TT><FONT FACE="Courier">Object</FONT></TT>.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">equals</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Color</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public boolean equals(Object <I>obj</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">equals()</FONT></TT> method compares
the <TT><FONT FACE="Courier">Object</FONT></TT> parameter with
this <TT><FONT FACE="Courier">Color</FONT></TT> object. It returns
a Boolean value representing the result of this comparison.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">obj</FONT></I></TT> is an <TT><FONT FACE="Courier">Object</FONT></TT> object to be compared with this <TT><FONT FACE="Courier">Color</FONT></TT>.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT>
</TD><TD >A Boolean value representing the result of the comparison of the <TT><FONT FACE="Courier">Object</FONT></TT> parameter to this <TT><FONT FACE="Courier">Color</FONT></TT>.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Overr.gif"></FONT></TT>
</TD><TD ><FONT FACE="Courier">equals()</FONT> in class <TT><FONT FACE="Courier">Object</FONT></TT>.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">toString</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Color</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public String toString()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">toString()</FONT></TT>returns a string
representation of the <TT><FONT FACE="Courier">Color</FONT></TT>
class.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >A <TT><FONT FACE="Courier">String</FONT></TT> value containing the <TT><FONT FACE="Courier">Color</FONT></TT> class's name plus its red, green, and blue values (see the <TT><FONT FACE="Courier">Color()</FONT></TT> constructors).
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Overr.gif"></FONT></TT>
</TD><TD ><FONT FACE="Courier">toString()</FONT> in class <TT><FONT FACE="Courier">Object</FONT></TT>.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getColor</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Color</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public static Color getColor(String <I>nm</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">getColor()</FONT></TT> returns the specified
color property based on the name that is passed in.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">nm</FONT></I></TT> is the name of the color property.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT>
</TD><TD >A <TT><FONT FACE="Courier">Color</FONT></TT> value representing the desired color property.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getColor</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Color</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public static Color getColor(String <I>nm</I>,
Color <I>v</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">getColor()</FONT></TT> returns the specified
<TT><FONT FACE="Courier">Color</FONT></TT> property of the specified
color.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">nm</FONT></I></TT> is the name of the color property.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">v</FONT></I></TT> is the specified color to be examined.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT>
</TD><TD >A <TT><FONT FACE="Courier">Color</FONT></TT> value representing the desired color property.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getColor</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Color</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public static Color getColor(String <I>nm</I>,
int <I>v</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">getColor()</FONT></TT> returns the specified
<TT><FONT FACE="Courier">Color</FONT></TT> property of the color
value that is passed in.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">nm</FONT></I></TT> is the name of the color property.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">v</FONT></I></TT> is the color value.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT>
</TD><TD >A <TT><FONT FACE="Courier">Color</FONT></TT> value representing the desired color property.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">HSBtoRGB</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Color</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public static int HSBtoRGB(float <I>hue</I>,
float <I>saturation</I>, float <I>brightness</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
HSB stands for hue, saturation, and brightness. To convert from
an HSB value to an RGB value, simply call this function with the
appropriate arguments.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">hue</FONT></I></TT> is the color's hue component.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">saturation</FONT></I></TT> is the color's saturation component.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">brightness</FONT></I></TT> is the color's brightness component.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT>
</TD><TD >An RGB value that corresponds to the HSB inputs.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">RGBtoHSB</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Color</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public static float[] RGBtoHSB(int <I>r</I>,
int <I>g</I>, int <I>b</I>, float[] <I>hsbvals</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
HSB stands for hue, saturation, and brightness. To convert from
an RGB value to an HSB value, simply call this function with the
appropriate arguments.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">r</FONT></I></TT> is the color's red component.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">g</FONT></I></TT> is the color's green component.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">b</FONT></I></TT> is the color's blue component.
</TD></TR>
</TABLE></CENTER>
<P>
<P>
<TT><I><FONT FACE="Courier">hsbvals</FONT></I></TT> is an array
that stores the HSB result values.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%>
<P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT>
</TD><TD >An array containing the resultant HSB values.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getHSBColor</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Color</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public static Color getHSBColor(float
<I>h</I>, float <I>s</I>, float <I>b</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">getHSBColor()</FONT></TT> method
returns a <TT><FONT FACE="Courier">Color</FONT></TT> object representing
the RGB value of the input HSB parameters.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">h</FONT></I></TT> is the color's hue component.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">s</FONT></I></TT> is the color's saturation component.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">b</FONT></I></TT> is the color's brightness component.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT>
</TD><TD >A <TT><FONT FACE="Courier">Color</FONT></TT> object representing the RGB value of the input hue, saturation, and brightness.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=8%><A NAME="Component"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></A></TD><TD WIDTH=499>
<H2><FONT SIZE=5 COLOR=#FF0000>Component</FONT></H2>

</TD><TD WIDTH=8%><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Extends.gif"></FONT></TT>


</TD><TD >
<FONT FACE="Courier">Object</FONT>


</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%>
<IMG SRC="http://docs.rinet.ru/JavDev/Implem.gif">

</TD><TD >
ImageObserver

</TD></TR>
</TABLE></CENTER>
<P>
<P>
The class hierarchy for the <TT><FONT FACE="Courier">Component</FONT></TT>
class derives from the class <TT><FONT FACE="Courier">java.lang.Object</FONT></TT>.
(See Listing 28.10.) The <TT><FONT FACE="Courier">Component</FONT></TT>
class represents a generic user interface component. All AWT UI
components derive from the <TT><FONT FACE="Courier">Component</FONT></TT>
class. <TT><FONT FACE="Courier">Component</FONT></TT>'s overall
derivation is shown in Fig-ure 28.1.
<HR>
<BLOCKQUOTE>
<B>Listing 28.10. Public members of </B><TT><B><FONT FACE="Courier">java.awt.Component</FONT></B></TT><B>.
<BR>
</B>
</BLOCKQUOTE>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public abstract class Component implements
ImageObserver {<BR>
&nbsp;&nbsp;public Container getParent()<BR>
&nbsp;&nbsp;public ComponentPeer getPeer()<BR>
&nbsp;&nbsp;public Toolkit getToolkit()<BR>
&nbsp;&nbsp;public boolean isValid()<BR>
&nbsp;&nbsp;public boolean isVisible()<BR>
&nbsp;&nbsp;public boolean isShowing()<BR>
&nbsp;&nbsp;public boolean isEnabled()<BR>
&nbsp;&nbsp;public Point location()<BR>
&nbsp;&nbsp;public Dimension size()<BR>
&nbsp;&nbsp;public Rectangle bounds()<BR>
&nbsp;&nbsp;public synchronized void enable()<BR>
&nbsp;&nbsp;public void enable(boolean <I>cond</I>)<BR>
&nbsp;&nbsp;public synchronized void disable()<BR>
&nbsp;&nbsp;public synchronized void show()<BR>
&nbsp;&nbsp;public void show(boolean <I>cond</I>)<BR>
&nbsp;&nbsp;public synchronized void hide()<BR>
&nbsp;&nbsp;public Color getForeground()<BR>
&nbsp;&nbsp;public synchronized void setForeground(Color <I>c</I>)
<BR>
&nbsp;&nbsp;public Color getBackground()<BR>
&nbsp;&nbsp;public synchronized void setBackground(Color <I>c</I>)
<BR>
&nbsp;&nbsp;public Font getFont()<BR>
&nbsp;&nbsp;public synchronized void setFont(Font <I>f</I>)<BR>
&nbsp;&nbsp;public synchronized ColorModel getColorModel()<BR>
&nbsp;&nbsp;public void move(int <I>x</I>, int <I>y</I>)<BR>
&nbsp;&nbsp;public void resize(int <I>width</I>, int <I>height</I>)
<BR>
&nbsp;&nbsp;public void resize(Dimension <I>d</I>)<BR>
&nbsp;&nbsp;public synchronized void reshape(int <I>x</I>, int
<I>y</I>, int <I>width</I>, int <I>height</I>)<BR>
&nbsp;&nbsp;public Dimension preferredSize()<BR>
&nbsp;&nbsp;public Dimension minimumSize()<BR>
&nbsp;&nbsp;public void layout()<BR>
&nbsp;&nbsp;public void validate()<BR>
&nbsp;&nbsp;public void invalidate()<BR>
&nbsp;&nbsp;public Graphics getGraphics()<BR>
&nbsp;&nbsp;public FontMetrics getFontMetrics(Font <I>font</I>)
<BR>
&nbsp;&nbsp;public void paint(Graphics <I>g</I>)<BR>
&nbsp;&nbsp;public void update(Graphics <I>g</I>)<BR>
&nbsp;&nbsp;public void paintAll(Graphics <I>g</I>)<BR>
&nbsp;&nbsp;public void repaint()<BR>
&nbsp;&nbsp;public void repaint(long <I>tm</I>)<BR>
&nbsp;&nbsp;public void repaint(int <I>x</I>, int <I>y</I>, int
<I>width</I>, int <I>height</I>)<BR>
&nbsp;&nbsp;public void repaint(long <I>tm</I>, int <I>x</I>,
int <I>y</I>, int <I>width</I>, int <I>height</I>)<BR>
&nbsp;&nbsp;public void print(Graphics <I>g</I>)<BR>
&nbsp;&nbsp;public void printAll(Graphics <I>g</I>)<BR>
&nbsp;&nbsp;public boolean imageUpdate(Image <I>img</I>, int <I>flags</I>,
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int
<I>x</I>, int <I>y</I>, int <I>w</I>, int <I>h</I>)<BR>
&nbsp;&nbsp;public Image createImage(ImageProducer <I>producer</I>)
<BR>
&nbsp;&nbsp;public Image createImage(int <I>width</I>, int <I>height
<BR>
&nbsp;&nbsp;</I>public boolean prepareImage(Image <I>image</I>,
ImageObserver <I>observer</I>)<BR>
&nbsp;&nbsp;public boolean prepareImage(Image <I>image</I>, int
<I>width</I>, int <I>height</I>,<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ImageObserver
<I>observer</I>)<BR>
&nbsp;&nbsp;public int checkImage(Image <I>image</I>, ImageObserver
<I>observer</I>)<BR>
&nbsp;&nbsp;public int checkImage(Image <I>image</I>, int <I>width</I>,
int <I>height</I>,<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ImageObserver
<I>observer</I>)<BR>
&nbsp;&nbsp;public synchronized boolean inside(int <I>x</I>, int
<I>y</I>)<BR>
&nbsp;&nbsp;public Component locate(int <I>x</I>, int <I>y</I>)
<BR>
&nbsp;&nbsp;public void deliverEvent(Event <I>e</I>)<BR>
&nbsp;&nbsp;public boolean postEvent(Event <I>e</I>)<BR>
&nbsp;&nbsp;public boolean handleEvent(Event <I>evt</I>)<BR>
&nbsp;&nbsp;public boolean mouseDown(Event <I>evt</I>, int <I>x</I>,
int <I>y</I>)<BR>
&nbsp;&nbsp;public boolean mouseDrag(Event <I>evt</I>, int <I>x</I>,
int <I>y</I>)<BR>
&nbsp;&nbsp;public boolean mouseUp(Event <I>evt</I>, int <I>x</I>,
int <I>y</I>)<BR>
&nbsp;&nbsp;public boolean mouseMove(Event <I>evt</I>, int <I>x</I>,
int <I>y</I>)<BR>
&nbsp;&nbsp;public boolean mouseEnter(Event <I>evt</I>, int <I>x</I>,
int <I>y</I>)<BR>
&nbsp;&nbsp;public boolean mouseExit(Event <I>evt</I>, int <I>x</I>,
int <I>y</I>)<BR>
&nbsp;&nbsp;public boolean keyDown(Event <I>evt</I>, int <I>key</I>)
<BR>
&nbsp;&nbsp;public boolean keyUp(Event <I>evt</I>, int <I>key</I>)
<BR>
&nbsp;&nbsp;public boolean action(Event <I>evt</I>, Object <I>what</I>)
<BR>
&nbsp;&nbsp;public void addNotify()<BR>
&nbsp;&nbsp;public synchronized void removeNotify()<BR>
&nbsp;&nbsp;public boolean gotFocus(Event <I>evt</I>, Object <I>what</I>)
<BR>
&nbsp;&nbsp;public boolean lostFocus(Event <I>evt</I>, Object
<I>what</I>)<BR>
&nbsp;&nbsp;public void requestFocus()<BR>
&nbsp;&nbsp;public void nextFocus()<BR>
&nbsp;&nbsp;public String toString()<BR>
&nbsp;&nbsp;public void list()<BR>
&nbsp;&nbsp;public void list(PrintStream <I>out</I>)<BR>
&nbsp;&nbsp;public void list(PrintStream <I>out</I>, int <I>indent</I>)
<BR>
}</FONT></TT>
</BLOCKQUOTE>
<HR>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getParent</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public Container getParent()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">getParent()</FONT></TT> returns this
component's parent (a <TT><FONT FACE="Courier">Container</FONT></TT>
class).
<P><CENTER><TABLE WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%4></TD><TD >A <TT><FONT FACE="Courier">Container</FONT></TT> class representing the component's parent. For more information on <TT><FONT FACE="Courier"> Container</FONT></TT>s, see the documentation for the <TT><FONT 
FACE="Courier">Container</FONT></TT> class later in this chapter.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">GetPeer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public ComponentPeer getPeer()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">getPeer()</FONT></TT> returns this component's
peer (a <TT><FONT FACE="Courier">ComponentPeer</FONT></TT> interface).
<P><CENTER><TABLE WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >A <TT><FONT FACE="Courier">ComponentPeer</FONT></TT> interface representing the component's peer. For more information on <TT><FONT FACE="Courier">ComponentPeer</FONT></TT>s, see the documentation for the <TT><FONT 
FACE="Courier">ComponentPeer</FONT></TT> interface later in this chapter.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getToolkit</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public Toolkit getToolkit()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">getToolkit()</FONT></TT> returns the
toolkit of this component. The toolkit creates the peer for the
component.
<P><CENTER><TABLE WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >A <TT><FONT FACE="Courier">Toolkit</FONT></TT> class. A toolkit is required to bind the abstract AWT classes to a native toolkit implementation. For more information on the <TT><FONT FACE="Courier">Toolkit</FONT></TT> class, see the documentation for 
the <TT><FONT FACE="Courier">Toolkit</FONT></TT> class later in this chapter.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">isValid</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public boolean isValid()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">isValid()</FONT></TT> determines whether
this component is valid. A <TT><FONT FACE="Courier">Component</FONT></TT>
is considered to be invalid when it is first shown on the screen.
<P><CENTER><TABLE WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >A Boolean value representing the valid state of this component.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">isVisible</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public boolean isVisible()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">isVisible()</FONT></TT> determines whether
this component is visible. A <TT><FONT FACE="Courier">Component</FONT></TT>
is by default visible until told otherwise. A <TT><FONT FACE="Courier">Component</FONT></TT>
can be visible yet not show on the screen if the component's container
is invisible.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >A Boolean value representing the visible state of this component.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">isShowing</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public boolean isShowing()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">isShowing()</FONT></TT> determines whether
this component is shown on the screen. A <TT><FONT FACE="Courier">Component</FONT></TT>
can be visible yet not show on the screen if the component's container
is invisible.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >A Boolean value representing the show state of this component.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">isEnabled</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public boolean isEnabled()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">isEnabled()</FONT></TT> determines whether
this component is currently enabled. By default, components are
enabled until told otherwise.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >A Boolean value representing the enabled state of this component.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">location</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public Point location()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">location()</FONT></TT> returns the location
of this component in its parent's coordinate space. Note that
the <TT><FONT FACE="Courier">Point</FONT></TT> object returned
contains the top-left corner coordinates of this component.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >A <TT><FONT FACE="Courier">Point</FONT></TT> object containing the location of the component.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">size</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public Dimension size()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">size()</FONT></TT> returns the current
size of the component.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >A <TT><FONT FACE="Courier">Dimension</FONT></TT> object containing the size of the component.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">bounds</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public Rectangle bounds()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">bounds()</FONT></TT> returns the bounding
rectangle of the component.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >A <TT><FONT FACE="Courier">Rectangle</FONT></TT> object containing the boundaries for the component.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">enable</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public synchronized void enable()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">enable()</FONT></TT> method enables
a component. When a component is disabled, it might be grayed
out or simply not respond to user input.<P><CENTER><TABLE  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%>
<H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">enable</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void enable(boolean <I>cond</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
This <TT><FONT FACE="Courier">enable()</FONT></TT> method conditionally
enables a component. When a component is disabled, it might be
grayed out or simply not respond to user inputs.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><I>cond</I> is a Boolean value representing the new enabled state of the component.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">disable</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public synchronized void disable()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">disable()</FONT></TT> method disables
a component. When a component is disabled, it might be grayed
out or simply not respond to user inputs.<P><CENTER><TABLE  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%>
<H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">show</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public synchronized void show()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">show()</FONT></TT> shows the component.<P><CENTER><TABLE  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%>
<H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">show</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void show(boolean <I>cond</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
This <TT><FONT FACE="Courier">show()</FONT></TT> method conditionally
shows the component. If the input parameter is <TT><FONT FACE="Courier">true</FONT></TT>,
the component is shown. If the input parameter is <TT><FONT FACE="Courier">false</FONT></TT>,
the component is hidden.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">cond</FONT></I></TT> is a Boolean value representing the new visible state of the component.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">hide</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public synchronized void hide()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">hide()</FONT></TT> method hides the
component from view.<P><CENTER><TABLE  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%>
<H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getForeground</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public Color getForeground()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">getForeground()</FONT></TT> returns the
foreground color of the component. If the component's foreground
color has not been set, the foreground color of its parent is
returned.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >A <TT><FONT FACE="Courier">Color</FONT></TT> object representing the foreground color of this component.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">setForeground</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public synchronized void setForeground(Color
<I>c</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">setForeground()</FONT></TT> sets the
foreground color of the component.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">c</FONT></I></TT> is the new foreground color of this component.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getBackground</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public Color getBackground()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">getBackground()</FONT></TT> returns the
background color of the component. If the component's background
color has not been set, the background color of its parent is
returned.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >A <TT><FONT FACE="Courier">Color</FONT></TT> object representing the background color of this component.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">setBackground</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public synchronized void setBackground(Color
<I>c</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">setBackground()</FONT></TT> sets the
background color of the component.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">c</FONT></I></TT> is the new background color of this component.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getFont</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public Font getFont()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">getFont()</FONT></TT> returns the font
of the component. If the component's font has not been set, the
font of its parent is returned.<P><CENTER><TABLE  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%>
<H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">setFont</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public synchronized void setFont(Font
<I>f</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">setFont()</FONT></TT> sets the font of
the component.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">f </FONT></I></TT> is the new font of this component
</TD></TR>
</TABLE></CENTER>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getColorModel</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public synchronized ColorModel getColorModel()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">getColorModel()</FONT></TT> gets the
color model that displays this component on an output device.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >A <TT><FONT FACE="Courier">ColorModel</FONT></TT> object representing the color model used by this component.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">move</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void move(int <I>x</I>, int <I>y</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">move()</FONT></TT> method moves a
component to a new location within its parent's coordinate space.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">x</FONT></I></TT> is the new x coordinate of the component within its parent's coordinate space.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">y</FONT></I></TT> is the new y coordinate of the component within its parent's coordinate space.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">resize</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void resize(int <I>width</I>,
int <I>height</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">resize()</FONT></TT> resizes the component
to the specified width and height.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">width</FONT></I></TT> is the new width size of the component.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">height</FONT></I></TT> is the new height size of the component.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">resize</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void resize(Dimension <I>d</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">resize()</FONT></TT> resizes the component
to the specified dimension.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">d</FONT></I></TT> is a <TT><FONT FACE="Courier">Dimension</FONT></TT> object representing the new size of the component.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">reshape</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public synchronized void reshape(int
<I>x</I>, int <I>y</I>, int <I>width</I>, int <I>height</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">reshape()</FONT></TT> completely changes
the bounding box of the component by changing its size and location.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">x</FONT></I></TT> is the new x coordinate of the component within its parent's coordinate space.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">y</FONT></I></TT> is the new y coordinate of the component within its parent's coordinate space.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">width</FONT></I></TT> is the new width size of the component.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">height</FONT></I></TT> is the new height size of the component.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">preferredSize</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public Dimension preferredSize()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">preferredSize()</FONT></TT> method
returns the preferred size of the component.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >A <TT><FONT FACE="Courier">Dimension</FONT></TT> object representing the preferred size of the component.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">minimumSize</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public Dimension minimumSize()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">minimumSize()</FONT></TT> returns the
minimum size of the component.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >A <TT><FONT FACE="Courier">Dimension</FONT></TT> object representing the minimum size of the component.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">layout</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void layout()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">layout()</FONT></TT> method is called
when the component needs to be laid out.<P><CENTER><TABLE  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%>
<H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">validate</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void validate()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">validate()</FONT></TT> validates a component
by calling its <TT><FONT FACE="Courier">layout()</FONT></TT> method.<P><CENTER><TABLE  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%>
<H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">invalidate</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void invalidate()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">invalidate()</FONT></TT> invalidates
a component, forcing the component and all parents above it to
be laid out.<P><CENTER><TABLE BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%>
<H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getGraphics</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public Graphics getGraphics()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">getGraphics()</FONT></TT> returns a <TT><FONT FACE="Courier">Graphics</FONT></TT>
context for the component. If the component is not currently on
the screen, this function returns null.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >A <TT><FONT FACE="Courier">Graphics</FONT></TT> object representing the component's graphics context.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getFontMetrics</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public FontMetrics getFontMetrics(Font
<I>font</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">getFontMetrics()</FONT></TT> returns
the current <TT><FONT FACE="Courier">FontMetrics</FONT></TT> for
a specified font. If the component is not currently on the screen,
this function returns null.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">font</FONT></I></TT> is a <TT><FONT FACE="Courier">Font</FONT></TT> object to be examined.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT>
</TD><TD >A <TT><FONT FACE="Courier">FontMetrics</FONT></TT> object representing the component's <TT><FONT FACE="Courier">FontMetrics</FONT></TT>.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">paint</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void paint(Graphics <I>g</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">paint()</FONT></TT> method paints
the component on the screen using the <TT><FONT FACE="Courier">Graphics</FONT></TT>
context parameter.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">g</FONT></I></TT> is the <TT><FONT FACE="Courier">Graphics</FONT></TT> context that the component paints itself onto.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">update</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void update(Graphics <I>g</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">update()</FONT></TT> method repaints
the component in response to a call to the <TT><FONT FACE="Courier">repaint()</FONT></TT>
method. For more information on the <TT><FONT FACE="Courier">repaint()</FONT></TT>
method, see the documentation later in this chapter. 
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">g</FONT></I></TT> is the <TT><FONT FACE="Courier">Graphics</FONT></TT> context that the component paints itself onto.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">paintAll</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void paintAll(Graphics <I>g</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">paintAll()</FONT></TT> method paints
the component along with all its subcomponents.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">g</FONT></I></TT> is the <TT><FONT FACE="Courier">Graphics</FONT></TT> context that the component paints itself onto.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">repaint</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void repaint()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">repaint()</FONT></TT> forces a component
to repaint itself. Calling this function results in a call to
<TT><FONT FACE="Courier"> update()</FONT></TT>. For more information
on the <TT><FONT FACE="Courier">update()</FONT></TT> method, see
the documentation earlier in this chapter.<P><CENTER><TABLE  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%>
<H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">repaint</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void repaint(long <I>tm</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
This <TT><FONT FACE="Courier">repaint()</FONT></TT> method forces
a component to repaint itself in <TT><I><FONT FACE="Courier">tm</FONT></I></TT>
milliseconds.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">tm</FONT></I></TT> is the time, in milliseconds, that the component has to repaint itself from the time this method is called.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">repaint</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void repaint(int <I>x</I>, int
<I>y</I>, int <I>width</I>, int <I>height</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
This <TT><FONT FACE="Courier">repaint()</FONT></TT> method forces
the component to repaint part of its surface area based on the
input coordinates.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">x</FONT></I></TT> is the x coordinate marking the surface area to be repainted.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">y</FONT></I></TT> is the y coordinate marking the surface area to be repainted.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">width</FONT></I></TT> is the width of the surface area to be repainted.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">height</FONT></I></TT> is the height of the surface area to be repainted.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">repaint</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void repaint(long <I>tm</I>, int
<I>x</I>, int <I>y</I>, int <I>width</I>, int <I>height</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
This <TT><FONT FACE="Courier">repaint()</FONT></TT> method forces
the component to repaint part of its surface area based on the
input coordinates at a specified time in the future.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">tm</FONT></I></TT> is the time, in milliseconds, from the time this method is called that the component has to repaint itself.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">x</FONT></I></TT> is the x coordinate marking the surface area to be repainted.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">y</FONT></I></TT> is the y coordinate marking the surface area to be repainted.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">width</FONT></I></TT> is the width of the surface area to be repainted.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">height</FONT></I></TT> is the height of the surface area to be repainted.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">print</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void print(Graphics <I>g</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">print()</FONT></TT> prints the component
using the <TT><FONT FACE="Courier">Graphics</FONT></TT> context.
The default implementation of this method calls <TT><FONT FACE="Courier">paint()</FONT></TT>.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">g</FONT></I></TT> is the <TT><FONT FACE="Courier">Graphics</FONT></TT> context to be printed on.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">printAll</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void printAll(Graphics <I>g</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">printAll()</FONT></TT> prints the component
and all of its subcomponents using the <TT><FONT FACE="Courier">Graphics</FONT></TT>
context.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">g</FONT></I></TT> is the <TT><FONT FACE="Courier">Graphics</FONT></TT> context to be printed on.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">imageUpdate</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public boolean imageUpdate(Image <I>img</I>,
int <I>flags</I>, int <I>x</I>, int <I>y</I>, int <I>w</I>, int
<I>h</I>)</FONT></TT>
</BLOCKQUOTE>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><FONT FACE="Courier">imageUpdate()</FONT> repaints the component when the specified image has changed.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">img</FONT></I></TT> is an <TT><FONT FACE="Courier">Image</FONT></TT> object to be examined for changes.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">flags</FONT></I></TT> contains imaging flags such as <TT><FONT FACE="Courier">FRAMEBITS</FONT></TT>, <TT><FONT FACE="Courier">ALLBITS</FONT></TT>, and <TT><FONT FACE="Courier">SOMEBITS</FONT></TT> (see documentation 
for the <TT><FONT FACE="Courier">ImageObserver</FONT></TT> interface later in this chapter).
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">x</FONT></I></TT> is the x coordinate marking the surface area to be repainted.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">y</FONT></I></TT> is the y coordinate marking the surface area to be repainted.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">width</FONT></I></TT> is the width of the surface area to be repainted.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">height</FONT></I></TT> is the height of the surface area to be repainted.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT>
</TD><TD >A Boolean value that is true if the image has changed, false if it hasn't.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">createImage</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public Image createImage(ImageProducer
<I>producer</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">createImage()</FONT></TT> creates an
<TT><FONT FACE="Courier">Image</FONT></TT> using the specified
<TT><FONT FACE="Courier">ImageProducer</FONT></TT>.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">producer</FONT></I></TT> is an <TT><FONT FACE="Courier">ImageProducer</FONT></TT> interface that produces a new image.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT>
</TD><TD >An <TT><FONT FACE="Courier">Image</FONT></TT> object.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">createImage</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public Image createImage(int <I>width</I>,
int <I>height</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
This <TT><FONT FACE="Courier">createImage()</FONT></TT> creates
an off-screen image object using the specified width and height.
This image object can be used for things like double-buffering.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">width</FONT></I></TT> is the width of the <TT><FONT FACE="Courier">Image</FONT></TT> object to be created.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">height</FONT></I></TT> is the height of the <TT><FONT FACE="Courier">Image</FONT></TT> object to be created.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT>
</TD><TD >An <TT><FONT FACE="Courier">Image</FONT></TT> object.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">prepareImage</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public boolean prepareImage(Image <I>image</I>,
ImageObserver <I>observer</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">prepareImage()</FONT></TT> prepares an
<TT><FONT FACE="Courier">Image</FONT></TT> for rendering on this
component. Because the <TT><FONT FACE="Courier">Image</FONT></TT>
is downloaded using a separate thread, the <TT><FONT FACE="Courier">ImageObserver</FONT></TT>
interface is notified when the <TT><FONT FACE="Courier">Image</FONT></TT>
is ready to be rendered.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">image</FONT></I></TT> is an <TT><FONT FACE="Courier">Image</FONT></TT> object that is rendered on this component.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">observer</FONT></I></TT> is an <TT><FONT FACE="Courier">Observer</FONT></TT> interface that is notified when the <TT><FONT FACE="Courier">Image</FONT></TT> is ready to be rendered.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT>
</TD><TD >A Boolean value that is true if the <TT><FONT FACE="Courier">Image</FONT></TT> has been prepared, false if it hasn't.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">prepareImage</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public boolean prepareImage(Image <I>image</I>,
int <I>width</I>, int <I>height</I>, ImageObserver &Acirc;<I>observer</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
This <TT><FONT FACE="Courier">prepareImage()</FONT></TT> method
is similar to the <TT><FONT FACE="Courier">prepareImage()</FONT></TT>
method documented previously except that this method scales the
<TT><FONT FACE="Courier">Image</FONT></TT> based on the width
and height parameters.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">image</FONT></I></TT> is an <TT><FONT FACE="Courier">Image</FONT></TT> object that is rendered on this component.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">width</FONT></I></TT> is the width of the image to be rendered.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">height</FONT></I></TT> is the height of the image to be rendered.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">observer</FONT></I></TT> is an <TT><FONT FACE="Courier">Observer</FONT></TT> interface that is notified when the <TT><FONT FACE="Courier">Image</FONT></TT> is ready to be rendered.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT>
</TD><TD >A Boolean value that is true if the <TT><FONT FACE="Courier">Image</FONT></TT> has been prepared, false if it hasn't.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">checkImage</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public int checkImage(Image <I>image</I>,
ImageObserver <I>observer</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">checkImage()</FONT></TT> checks the status
of the construction of the <TT><FONT FACE="Courier">Image</FONT></TT>
to be rendered.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">image</FONT></I></TT> is an <TT><FONT FACE="Courier">Image</FONT></TT> object that is rendered on this component.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">observer</FONT></I></TT> is an <TT><FONT FACE="Courier">Observer</FONT></TT> interface that is notified when the <TT><FONT FACE="Courier">Image</FONT></TT> is ready to be rendered.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT>
</TD><TD >An integer value that is the Boolean <TT><FONT FACE="Courier">OR</FONT></TT> of the <TT><FONT FACE="Courier">ImageObserver</FONT></TT> flags for the data that is currently available (see the documentation for the <TT><FONT 
FACE="Courier">ImageObserver</FONT></TT> interface later in this chapter).
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">checkImage</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public int checkImage(Image <I>image</I>,
int <I>width</I>, int <I>height</I>, ImageObserver &Acirc;<I>observer</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
This <TT><FONT FACE="Courier">checkImage()</FONT></TT> method
checks the status of the construction of a scaled representation
of this image.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">image</FONT></I></TT> is an <TT><FONT FACE="Courier">Image</FONT></TT> object that is rendered on this component.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">width</FONT></I></TT> is the width of the image to be checked.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">height</FONT></I></TT> is the height of the image to be checked.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">observer</FONT></I></TT> is an <TT><FONT FACE="Courier">Observer</FONT></TT> interface that is notified when the <TT><FONT FACE="Courier">Image</FONT></TT> is ready to be rendered.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT>
</TD><TD >An integer value that is the Boolean <TT><FONT FACE="Courier">OR</FONT></TT> of the <TT><FONT FACE="Courier">ImageObserver</FONT></TT> flags for the data that is currently available (see the documentation for the <TT><FONT 
FACE="Courier">ImageObserver</FONT></TT> interface later in this chapter).
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">inside</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public synchronized boolean inside(int
<I>x</I>, int <I>y</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">inside()</FONT></TT> method determines
whether the x and y coordinates are within the bounding rectangle
of the component.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">x</FONT></I></TT> is the x coordinate to be examined.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">y</FONT></I></TT> is the y coordinate to be examined.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT>
</TD><TD >A Boolean value representing the result of the coordinates check.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">locate</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public Component locate(int <I>x</I>,
int <I>y</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">locate()</FONT></TT> returns the <TT><FONT FACE="Courier">Component</FONT></TT>
at the specified x and y coordinates.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">x</FONT></I></TT> is the x coordinate to be examined.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">y</FONT></I></TT> is the y coordinate to be examined.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT>
</TD><TD >The <TT><FONT FACE="Courier">Component</FONT></TT> that is found at the specified x and y coordinates.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">deliverEvent</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void deliverEvent(Event <I>e</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">deliverEvent()</FONT></TT> delivers
an event to the component or one of its subcomponents.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">e</FONT></I></TT> is an <TT><FONT FACE="Courier">Event</FONT></TT> object encapsulating the event.
</TD></TR>
</TABLE></CENTER>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">postEvent</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public boolean postEvent(Event <I>e</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">postEvent()</FONT></TT> posts an event
to the component resulting in a call to <TT><FONT FACE="Courier">handleEvent()</FONT></TT>.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">e</FONT></I></TT> is an <TT><FONT FACE="Courier">Event</FONT></TT> object encapsulating the event.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT>
</TD><TD >A Boolean value that is true if the event was handled and false if it wasn't.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">handleEvent</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public boolean handleEvent(Event <I>evt</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">handleEvent()</FONT></TT> handles individual
events by the component.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">evt</FONT></I></TT> is an <TT><FONT FACE="Courier">Event</FONT></TT> object encapsulating the event.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT>
</TD><TD >A Boolean value that is true if the event was handled and false if it wasn't.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">mouseDown</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public boolean mouseDown(Event <I>evt</I>,
int <I>x</I>, int <I>y</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">mouseDown()</FONT></TT> method is
called if the mouse is down.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">evt</FONT></I></TT> is an <TT><FONT FACE="Courier">Event</FONT></TT> object encapsulating the event.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">x</FONT></I></TT> is the x coordinate of the mouse-down click point.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">y</FONT></I></TT> is the y coordinate of the mouse-down click point.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT>
</TD><TD >A Boolean value that is true if the event was handled and false if it wasn't.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">mouseDrag</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public boolean mouseDrag(Event <I>evt</I>,
int <I>x</I>, int <I>y</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">mouseDrag()</FONT></TT> method is
called if the mouse is dragged.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">evt</FONT></I></TT> is an <TT><FONT FACE="Courier">Event</FONT></TT> object encapsulating the event.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">x</FONT></I></TT> is the x coordinate of the current mouse point coordinate.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">y</FONT></I></TT> is the y coordinate of the current mouse point coordinate.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT>
</TD><TD >A Boolean value that is true if the event was handled and false if it wasn't.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">mouseUp</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public boolean mouseUp(Event <I>evt</I>,
int <I>x</I>, int <I>y</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">mouseUp()</FONT></TT> method is called
when the mouse button is released.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">evt</FONT></I></TT> is an <TT><FONT FACE="Courier">Event</FONT></TT> object encapsulating the event.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">x</FONT></I></TT> is the x coordinate of the mouse up point.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">y</FONT></I></TT> is the y coordinate of the mouse up point.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT>
</TD><TD >A Boolean value that is true if the event was handled and false if it wasn't.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">mouseMove</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public boolean mouseMove(Event <I>evt</I>,
int <I>x</I>, int <I>y</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">mouseMove()</FONT></TT> method is
called if the mouse is moved.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">evt</FONT></I></TT> is an <TT><FONT FACE="Courier">Event</FONT></TT> object encapsulating the event.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">x</FONT></I></TT> is the x coordinate of the current mouse point coordinate.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">y</FONT></I></TT> is the y coordinate of the current mouse point coordinate.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT>
</TD><TD >A Boolean value that is true if the event was handled and false if it wasn't.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">mouseEnter</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public boolean mouseEnter(Event <I>evt</I>,
int <I>x</I>, int <I>y</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">mouseEnter()</FONT></TT> method is
called if the mouse enters the component.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">evt</FONT></I></TT> is an <TT><FONT FACE="Courier">Event</FONT></TT> object encapsulating the event.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">x</FONT></I></TT> is the x coordinate of the current mouse point coordinate.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">y</FONT></I></TT> is the y coordinate of the current mouse point coordinate.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT>
</TD><TD >A Boolean value that is true if the event was handled and false if it wasn't.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">mouseExit</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public boolean mouseExit(Event <I>evt</I>,
int <I>x</I>, int <I>y</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">mouseExit()</FONT></TT> method is
called if the mouse exits the component.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">evt</FONT></I></TT> is an <TT><FONT FACE="Courier">Event</FONT></TT> object encapsulating the event.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">x</FONT></I></TT> is the x coordinate of the mouse exit point.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">y</FONT></I></TT> is the y coordinate of the mouse exit point.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT>
</TD><TD >A Boolean value that is true if the event was handled and false if it wasn't.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">keyDown</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public boolean keyDown(Event <I>evt</I>,
int <I>key</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">keyDown()</FONT></TT> method is called
when a key is pressed.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">evt</FONT></I></TT> is an <TT><FONT FACE="Courier">Event</FONT></TT> object encapsulating the event.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">key</FONT></I></TT> is an integer value representing the code of the key that was pressed.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT>
</TD><TD >A Boolean value that is true if the event was handled and false if it wasn't.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">keyUp</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public boolean keyUp(Event <I>evt</I>,
int <I>key</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">keyUp()</FONT></TT> method is called
when a key is released.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">evt</FONT></I></TT> is an <TT><FONT FACE="Courier">Event</FONT></TT> object encapsulating the event.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">key</FONT></I></TT> is an integer value representing the code of the key that was pressed.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT>
</TD><TD >A Boolean value that is true if the event was handled and false if it wasn't.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">action</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public boolean action(Event <I>evt</I>,
Object <I>what</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">action()</FONT></TT> method is called
if an action occurs within the component. For more information
on handling actions, see the <TT><FONT FACE="Courier">handleEvent()</FONT></TT>
method.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">evt</FONT></I></TT> is an <TT><FONT FACE="Courier">Event</FONT></TT> object encapsulating the event.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">what</FONT></I></TT> is an object representing the action that is occurring.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT>
</TD><TD >A Boolean value that is true if the event was handled and false if it wasn't.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">addNotify</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void addNotify()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">addNotify()</FONT></TT> notifies a component
to create a peer object.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >none</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">removeNotify</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public synchronized void removeNotify()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">removeNotify()</FONT></TT> notifies a
component to destroy the peer object.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >none</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">gotFocus</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public boolean gotFocus(Event <I>evt</I>,
Object <I>what</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">gotFocus()</FONT></TT> method is
called when the component receives the input focus.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">evt</FONT></I></TT> is an <TT><FONT FACE="Courier">Event</FONT></TT> object encapsulating the event.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">what</FONT></I></TT> is an object representing the action that is occurring.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT>
</TD><TD >A Boolean value that is true if the event was handled and false if it wasn't.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">lostFocus</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public boolean lostFocus(Event <I>evt</I>,
Object <I>what</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">lostFocus()</FONT></TT> method is
called when the component loses the input focus.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">evt</FONT></I></TT> is an <TT><FONT FACE="Courier">Event</FONT></TT> object encapsulating the event.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">what</FONT></I></TT> is an object representing the action that is occurring.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT>
</TD><TD >A Boolean value that is true if the event was handled and false if it wasn't.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">requestFocus</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void requestFocus()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">requestFocus()</FONT></TT> method
requests the current input focus. If this method is successful,
<TT><FONT FACE="Courier">gotFocus()</FONT></TT> is then called.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD >none</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">nextFocus</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void nextFocus()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">nextFocus()</FONT></TT> method switches
the focus to the next component. The next component can be determined
by examining the tab order of the components on a form.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD >none</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">toString</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public String toString()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">toString</FONT></TT> returns a string
representation of the <TT><FONT FACE="Courier">Component</FONT></TT>
class.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD >A <TT><FONT FACE="Courier">String</FONT></TT> value containing the <TT><FONT FACE="Courier">Component</FONT></TT> class's name plus its x, y, height, and width values (see the <TT><FONT FACE="Courier">Component()</FONT></TT> constructors).
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Overr.gif"></FONT></TT>
</TD><TD ><FONT FACE="Courier">toString()</FONT> in class <TT><FONT FACE="Courier">Object</FONT></TT>.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">list</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void list()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">list()</FONT></TT> method prints
a listing of the component to the print stream.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >none</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">list</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void list(PrintStream <I>out</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
This <TT><FONT FACE="Courier">list()</FONT></TT> method prints
a listing of the component to the specified output stream.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">out</FONT></I></TT> is a <TT><FONT FACE="Courier">PrintStream</FONT></TT> object.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">list</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Component</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void list(PrintStream <I>out</I>,
int <I>indent</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
This <TT><FONT FACE="Courier">list()</FONT></TT> method prints
a listing of the component to the specified output stream at the
specified indention.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">out</FONT></I></TT> is a <TT><FONT FACE="Courier">PrintStream</FONT></TT> object.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">indent</FONT></I></TT> is an integer value representing the amount to be indented.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=8%><A NAME="Container"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></A></TD><TD WIDTH=499>
<H2><FONT SIZE=5 COLOR=#FF0000>Container</FONT></H2>

</TD><TD WIDTH=8%><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Extends.gif"></FONT></TT>


</TD><TD >
<FONT FACE="Courier">Component</FONT>


</TD></TR>
</TABLE></CENTER>
<P>
<P>
The class hierarchy for the <TT><FONT FACE="Courier">Container</FONT></TT>
class derives from the class <TT><FONT FACE="Courier">java.awt.Component</FONT></TT>.
(See Listing 28.11.) A <TT><FONT FACE="Courier">Container</FONT></TT>
class is defined as a class that can contain other components.
<TT><FONT FACE="Courier">Container</FONT></TT>'s overall derivation
is shown in Figure 28.1.
<HR>
<BLOCKQUOTE>
<B>Listing 28.11. Public members of </B><TT><B><FONT FACE="Courier">java.awt.Container</FONT></B></TT><B>.
<BR>
</B>
</BLOCKQUOTE>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public abstract class Container extends
Component {<BR>
&nbsp;&nbsp;public int countComponents()<BR>
&nbsp;&nbsp;public synchronized Component getComponent(int <I>n</I>)
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;</FONT></TT><FONT FACE="ZapfDingbats">&Acirc;</FONT><TT><FONT FACE="Courier">throws
ArrayIndexOutOfBoundsException<BR>
&nbsp;&nbsp;public synchronized Component[] getComponents()<BR>
&nbsp;&nbsp;public Insets insets()<BR>
&nbsp;&nbsp;public Component add(Component <I>comp</I>)<BR>
&nbsp;&nbsp;public synchronized Component add(Component <I>comp</I>,
int <I>pos</I>)<BR>
&nbsp;&nbsp;public synchronized Component add(String <I>name</I>,
Component <I>comp</I>)<BR>
&nbsp;&nbsp;public synchronized void remove(Component <I>comp</I>)
<BR>
&nbsp;&nbsp;public synchronized void removeAll()<BR>
&nbsp;&nbsp;public LayoutManager getLayout()<BR>
&nbsp;&nbsp;public void setLayout(LayoutManager <I>mgr</I>)<BR>
&nbsp;&nbsp;public synchronized void layout()<BR>
&nbsp;&nbsp;public synchronized void validate()<BR>
&nbsp;&nbsp;public synchronized Dimension preferredSize()<BR>
&nbsp;&nbsp;public synchronized Dimension minimumSize()<BR>
&nbsp;&nbsp;public void paintComponents(Graphics <I>g</I>)<BR>
&nbsp;&nbsp;public void printComponents(Graphics <I>g</I>)<BR>
&nbsp;&nbsp;public void deliverEvent(Event <I>e</I>)<BR>
&nbsp;&nbsp;public Component locate(int <I>x</I>, int <I>y</I>)
<BR>
&nbsp;&nbsp;public synchronized void addNotify()<BR>
&nbsp;&nbsp;public synchronized void removeNotify()<BR>
&nbsp;&nbsp;public void list(PrintStream <I>out</I>, int <I>indent</I>)
<BR>
}</FONT></TT>
</BLOCKQUOTE>
<HR>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">countComponents</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Container</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public int countComponents()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">countComponents()</FONT></TT> returns
the number of components contained within the container.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >An integer value representing the number of components within the container.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getComponent</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Container</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public synchronized Component getComponent(int
<I>n</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">getComponent()</FONT></TT> method
returns the component at the specified index.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">n</FONT></I></TT> is an integer value representing the index of where to retrieve a component.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT>
</TD><TD >A <TT><FONT FACE="Courier">Component</FONT></TT> object within the <TT><FONT FACE="Courier">Container</FONT></TT>.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Throws.gif"></FONT></TT>
</TD><TD >An <TT><FONT FACE="Courier">ArrayIndexOutOfBoundsException</FONT></TT> if the component does not exist.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getComponents</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Container</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public synchronized Component[] getComponents()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">getComponents()</FONT></TT> returns an
array of <TT><FONT FACE="Courier">Component</FONT></TT> objects
contained within the <TT><FONT FACE="Courier">Container</FONT></TT>.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >An array of <TT><FONT FACE="Courier">Component</FONT></TT>s contained within the container.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">insets</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Container</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public Insets insets()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">insets()</FONT></TT> method returns
the borders of this container.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >An <TT><FONT FACE="Courier">Insets</FONT></TT> object representing the insets of the container. For more information, see the documentation for the <TT><FONT FACE="Courier">Insets</FONT></TT> class later in this chapter.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">add</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Container</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public Component add(Component <I>comp</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">add()</FONT></TT> method adds a <TT><FONT FACE="Courier">Component</FONT></TT>
to the container at the end of the container's array of components.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">comp</FONT></I></TT> is the component to be added.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT>
</TD><TD >The <TT><FONT FACE="Courier">Component</FONT></TT> object that was added to the container's list.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">add</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Container</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public synchronized Component add(Component
<I>comp</I>, int <I>pos</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
This <TT><FONT FACE="Courier">add()</FONT></TT> method adds a
<TT><FONT FACE="Courier">Component</FONT></TT> to the container
at the specified index in the container's array of components.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">comp</FONT></I></TT> is the component to be added.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">pos</FONT></I></TT> is the position where the component is to be added.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT>
</TD><TD >The <TT><FONT FACE="Courier">Component</FONT></TT> object that was added to the container's list.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">add</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Container</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public synchronized Component add(String
<I>name</I>, Component <I>comp</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
This <TT><FONT FACE="Courier">add()</FONT></TT> method adds a
component using the <TT><FONT FACE="Courier">Component</FONT></TT>
argument and that <TT><FONT FACE="Courier">Component</FONT></TT>'s
name.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">name</FONT></I></TT> is a <TT><FONT FACE="Courier">String</FONT></TT> representing the name of the component.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">comp</FONT></I></TT> is the component to be added.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT>
</TD><TD >The <TT><FONT FACE="Courier">Component</FONT></TT> object that was added to the container's list.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">remove</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Container</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public synchronized void remove(Component
<I>comp</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">remove()</FONT></TT> method removes
the specified component from the <TT><FONT FACE="Courier">Container</FONT></TT>'s
list.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">comp</FONT></I></TT> is the component to be removed.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">removeAll</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Container</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public synchronized void removeAll()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">removeAll()</FONT></TT> method removes
all components within <TT><FONT FACE="Courier">Container</FONT></TT>.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >none</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getLayout</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Container</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public LayoutManager getLayout()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">getLayout()</FONT></TT> returns this
<TT><FONT FACE="Courier">Container</FONT></TT>'s <TT><FONT FACE="Courier">LayoutManager</FONT></TT>.
For more information on the <TT><FONT FACE="Courier">LayoutManager</FONT></TT>
interface, see the <TT><FONT FACE="Courier">LayoutManager</FONT></TT>
documentation later in this chapter.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >A <TT><FONT FACE="Courier">LayoutManager</FONT></TT> interface representing the <TT><FONT FACE="Courier">Container</FONT></TT>'s <TT><FONT FACE="Courier">LayoutManager</FONT></TT>.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">setLayout</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Container</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void setLayout(LayoutManager <I>mgr</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">setLayout()</FONT></TT> sets the current
<TT><FONT FACE="Courier">LayoutManager</FONT></TT> of the <TT><FONT FACE="Courier">Container</FONT></TT>.
For more information on the <TT><FONT FACE="Courier">LayoutManager</FONT></TT>
interface, see the <TT><FONT FACE="Courier">LayoutManager</FONT></TT>
documentation later in this chapter.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">mgr</FONT></I></TT> is the <TT><FONT FACE="Courier">LayoutManager</FONT></TT> that controls the layouts of this <TT><FONT FACE="Courier">Container</FONT></TT>'s components.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">layout</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Container</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public synchronized void layout()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">layout()</FONT></TT> method is called
to perform a layout on this component.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >none</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">validate</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Container</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public synchronized void validate()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">validate()</FONT></TT> method refreshes
the <TT><FONT FACE="Courier">Container</FONT></TT> and all the
components within it by validating the <TT><FONT FACE="Courier">Container</FONT></TT>
and all of its components.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >none</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">preferredSize</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Container</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public synchronized Dimension preferredSize()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">preferredSize()</FONT></TT> returns the
preferred size of this <TT><FONT FACE="Courier">Container</FONT></TT>.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >A <TT><FONT FACE="Courier">Dimension</FONT></TT> object representing the preferred size of this <TT><FONT FACE="Courier">Container</FONT></TT>. For more information on the <TT><FONT FACE="Courier">Dimension</FONT></TT> class, see the documentation 
later in this chapter.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">minimumSize</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Container</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public synchronized Dimension minimumSize()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">minimumSize()</FONT></TT> returns the
minimum size of this <TT><FONT FACE="Courier">Container</FONT></TT>.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >A <TT><FONT FACE="Courier">Dimension</FONT></TT> object representing the minimum size of this <TT><FONT FACE="Courier">Container</FONT></TT>. For more information on the <TT><FONT FACE="Courier">Dimension</FONT></TT> class, see the documentation later 
in this chapter.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">paintComponents</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Container</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void paintComponents(Graphics
<I>g</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">paintComponents()</FONT></TT> method
paints each of the components within the container.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">g</FONT></I></TT> is the <TT><FONT FACE="Courier">Graphics</FONT></TT> context that the <TT><FONT FACE="Courier">Container</FONT></TT>'s components are painted on.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">printComponents</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Container</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void printComponents(Graphics
<I>g</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">printComponents()</FONT></TT> method
prints each of the components within the container.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">g</FONT></I></TT> is the <TT><FONT FACE="Courier">Graphics</FONT></TT> context that the <TT><FONT FACE="Courier">Container</FONT></TT>'s components are printed on.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">deliverEvent</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Container</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void deliverEvent(Event <I>e</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">deliverEvent()</FONT></TT> locates the
appropriate component within the container that the event applies
to and delivers the event to that component.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">e</FONT></I></TT> is the event to be delivered.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">locate</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Container</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public Component locate(int <I>x</I>,
int <I>y</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">locate()</FONT></TT> method locates
and returns the component that lies at the specified x and y coordinates
within the container.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">x</FONT></I></TT> is the x coordinate of the component to be located.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">y</FONT></I></TT> is the y coordinate of the component to be located.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">addNotify</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Container</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public synchronized void addNotify()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">addNotify()</FONT></TT> notifies the
container to create a peer interface. This method also notifies
each of the container's components to do likewise.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >none</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">removeNotify</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Container</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public synchronized void removeNotify()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">removeNotify()</FONT></TT> notifies the
container to remove its peer. This method also notifies each of
the container's components to do likewise.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >none</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">list</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Container</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void list(PrintStream <I>out</I>,
int <I>indent</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">list()</FONT></TT> method prints
a list for each component within the container to the specified
output stream at the specified indentation.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">out</FONT></I></TT> is a <TT><FONT FACE="Courier">PrintStream</FONT></TT> object.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">indent</FONT></I></TT> is an integer amount representing the value to indent the list.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=8%><A NAME="Dialog"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></A></TD><TD WIDTH=499>
<H2><FONT SIZE=5 COLOR=#FF0000>Dialog</FONT></H2>

</TD><TD WIDTH=8%><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Extends.gif"></FONT></TT>


</TD><TD >
<FONT FACE="Courier">Window</FONT>


</TD></TR>
</TABLE></CENTER>
<P>
<P>
The class hierarchy for the <TT><FONT FACE="Courier">Dialog</FONT></TT>
class derives from the class <TT><FONT FACE="Courier">java.awt.Window</FONT></TT>.
(See Listing 28.12.) The <TT><FONT FACE="Courier">Dialog</FONT></TT>
class creates a window that can be closed by the user. Dialogs
are usually temporary windows that are used for entering information.
<TT><FONT FACE="Courier">Dialog</FONT></TT>'s overall derivation
is shown in Figure 28.1.
<HR>
<BLOCKQUOTE>
<B>Listing 28.12. Public members of </B><TT><B><FONT FACE="Courier">java.awt.Dialog</FONT></B></TT><B>.
<BR>
</B>
</BLOCKQUOTE>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public class Dialog extends Window {
<BR>
&nbsp;&nbsp;public Dialog(Frame <I>parent</I>, boolean <I>modal</I>)
<BR>
&nbsp;&nbsp;public Dialog(Frame <I>parent</I>, String <I>title</I>,
boolean <I>modal</I>)<BR>
&nbsp;&nbsp;public synchronized void addNotify()<BR>
&nbsp;&nbsp;public boolean isModal()<BR>
&nbsp;&nbsp;public String getTitle()<BR>
&nbsp;&nbsp;public void setTitle(String <I>title</I>)<BR>
&nbsp;&nbsp;public boolean isResizable()<BR>
&nbsp;&nbsp;public void setResizable(boolean <I>resizable</I>)
<BR>
}</FONT></TT>
</BLOCKQUOTE>
<HR>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/const.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">Dialog</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Dialog</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public Dialog(Frame <I>parent</I>, boolean
<I>modal</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
This <TT><FONT FACE="Courier">Dialog()</FONT></TT> constructor
constructs a <TT><FONT FACE="Courier">Dialog</FONT></TT> object
from a parent <TT><FONT FACE="Courier">Frame</FONT></TT> object.
This <TT><FONT FACE="Courier">Dialog</FONT></TT> is initially
invisible.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">Parent</FONT></I></TT> is the parent frame of the <TT><FONT FACE="Courier">Dialog</FONT></TT>.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">Modal</FONT></I></TT> is a Boolean value designating this dialog to be either modal or nonmodal. If a dialog is modal, it blocks out all user input to other objects and retains the sole focus on the screen.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/const.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">Dialog</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Dialog</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public Dialog(Frame <I>parent</I>, String
<I>title</I>, boolean <I>modal</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
This <TT><FONT FACE="Courier">Dialog()</FONT></TT> constructor
constructs a <TT><FONT FACE="Courier">Dialog</FONT></TT> object
with a title from a parent <TT><FONT FACE="Courier">Frame</FONT></TT>
object. This <TT><FONT FACE="Courier">Dialog</FONT></TT> is initially
invisible.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">Parent</FONT></I></TT> is the parent frame of the <TT><FONT FACE="Courier">Dialog</FONT></TT>.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">Title</FONT></I></TT> is a <TT><FONT FACE="Courier">String</FONT></TT> value representing the title to be displayed for this <TT><FONT FACE="Courier">Dialog</FONT></TT>.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">Modal</FONT></I></TT> is a Boolean value designating this dialog to be either modal or nonmodal. If a dialog is modal, it blocks out all user input to other objects and retains the sole focus on the screen.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">AddNotify</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Dialog</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public synchronized void addNotify()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">addNotify()</FONT></TT> method creates
the <TT><FONT FACE="Courier">Dialog</FONT></TT>'s peer. Using
a peer interface allows you to change the <TT><FONT FACE="Courier">Dialog</FONT></TT>'s
appearance without changing its functionality.<P><CENTER><TABLE  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%>
<H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">IsModal</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Dialog</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public boolean isModal()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">isModal()</FONT></TT> returns the modal
status of the dialog.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >A Boolean value representing the <TT><FONT FACE="Courier">Dialog</FONT></TT>'s modal status. If this is true, the dialog is modal. If false, the dialog is nonmodal.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">GetTitle</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Dialog</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public String getTitle()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">getTitle()</FONT></TT> returns the dialog's
title string.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >A <TT><FONT FACE="Courier">String</FONT></TT> value representing the title string of the dialog.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">SetTitle</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Dialog</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void setTitle(String <I>title</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">setTitle()</FONT></TT> method sets
the <TT><FONT FACE="Courier">Dialog</FONT></TT>'s title string.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">Title</FONT></I></TT> is a <TT><FONT FACE="Courier">String</FONT></TT> value representing the <TT><FONT FACE="Courier">Dialog</FONT></TT>'s new title.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">IsResizable</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Dialog</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public boolean isResizable()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">isResizable()</FONT></TT> method
is called to determine whether this dialog can be resized.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >A Boolean value that is true if the dialog is resizable and false if it is not.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">SetResizable</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Dialog</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void setResizable(boolean <I>resizable</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">setResizable()</FONT></TT> method
changes whether a dialog can be resized.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">Resizable</FONT></I></TT> is a Boolean value that is true if the dialog is to be resizable and false if not.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=8%><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></TD><TD WIDTH=499><H2><A NAME="Dimension"><FONT SIZE=5 COLOR=#FF0000>Dimension</FONT></A>
</H2>

</TD><TD WIDTH=8%><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Extends.gif"></FONT></TT></TD>
<TD ><FONT FACE="Courier">Object</FONT></TD></TR>
</TABLE></CENTER>
<P>
<P>
The class hierarchy for the <TT><FONT FACE="Courier">Dimension</FONT></TT>
class derives from the class <TT><FONT FACE="Courier">java.lang.Object</FONT></TT>.
(See Listing 28.13.) A <TT><FONT FACE="Courier">Dimension</FONT></TT>
class encapsulates an object's height and width. <TT><FONT FACE="Courier">Dimension</FONT></TT>'s
overall derivation is shown in Figure 28.1.
<HR>
<BLOCKQUOTE>
<B>Listing 28.13. Public members of </B><TT><B><FONT FACE="Courier">java.awt.Dimension</FONT></B></TT><B>.
<BR>
</B>
</BLOCKQUOTE>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public class Dimension {<BR>
&nbsp;&nbsp;public int <I>width</I>;<BR>
&nbsp;&nbsp;public int <I>height</I>;<BR>
&nbsp;&nbsp;public Dimension()<BR>
&nbsp;&nbsp;public Dimension(Dimension <I>d</I>)<BR>
&nbsp;&nbsp;public Dimension(int <I>width</I>, int <I>height</I>)
<BR>
&nbsp;&nbsp;public String toString()<BR>
}</FONT></TT>
</BLOCKQUOTE>
<HR>

<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=589><B>Public Instance Variables</B></TD></TR>
</TABLE></CENTER>
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public int <I><B>width</B></I></FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><I><FONT FACE="Courier">width</FONT></I></TT> instance
variable contains the integer value representing the <TT><FONT FACE="Courier">Dimension</FONT></TT>'s
width value.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public int <I><B>height</B></I></FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><I><FONT FACE="Courier">height</FONT></I></TT> instance
variable contains the integer value representing the <TT><FONT FACE="Courier">Dimension</FONT></TT>'s
height value.<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%>
<H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/const.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">Dimension</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Dimension</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public Dimension()</FONT></TT>
</BLOCKQUOTE>
<P>
This <TT><FONT FACE="Courier">Dimension()</FONT></TT> constructor
constructs an empty <TT><FONT FACE="Courier">Dimension</FONT></TT>
object (zero width and zero height, by default).<P><CENTER><TABLE  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%>
<H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/const.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">Dimension</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Dimension</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public Dimension(Dimension <I>d</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
This <TT><FONT FACE="Courier">Dimension()</FONT></TT> constructor
constructs a <TT><FONT FACE="Courier">Dimension</FONT></TT> object
from an existing <TT><FONT FACE="Courier">Dimension</FONT></TT>
object.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">d</FONT></I></TT> is a <TT><FONT FACE="Courier">Dimension</FONT></TT> object whose values are used to create the new <TT><FONT FACE="Courier">Dimension</FONT></TT>.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/const.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">Dimension</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Dimension</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public Dimension(int <I>width</I>, int
<I>height</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
This <TT><FONT FACE="Courier">Dimension()</FONT></TT> constructor
constructs a <TT><FONT FACE="Courier">Dimension</FONT></TT> object
based on the width and height input parameters.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">width</FONT></I></TT> is an integer value representing the width of the new <TT><FONT FACE="Courier">Dimension</FONT></TT>.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">height</FONT></I></TT> is an integer value representing the height of the new <TT><FONT FACE="Courier">Dimension</FONT></TT>.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">toString</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Dimension</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public String toString()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">toString()</FONT></TT> method returns
a <TT><FONT FACE="Courier">String</FONT></TT> representation of
this <TT><FONT FACE="Courier">Dimension</FONT></TT> object.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >A <TT><FONT FACE="Courier">String</FONT></TT> containing this <TT><FONT FACE="Courier">Dimension</FONT></TT>'s height and width values.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=8%><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></TD><TD WIDTH=499><H2><A NAME="Event"><FONT SIZE=5 COLOR=#FF0000>Event</FONT></A></H2>

</TD><TD WIDTH=8%><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Extends.gif"></FONT></TT></TD>
<TD ><FONT FACE="Courier">Object</FONT></TD></TR>
</TABLE></CENTER>
<P>
<P>
The class hierarchy for the <TT><FONT FACE="Courier">Event</FONT></TT>
class derives from the class <TT><FONT FACE="Courier">java.lang.Object</FONT></TT>.
(See Listing 28.14.) The <TT><FONT FACE="Courier">Event</FONT></TT>
class encapsulates GUI events in a platform-independent manner.
<TT><FONT FACE="Courier">Event</FONT></TT>'s overall derivation
is shown in Figure 28.1.
<HR>
<BLOCKQUOTE>
<B>Listing 28.14. Public members of </B><TT><B><FONT FACE="Courier">java.awt.Event</FONT></B></TT><B>.
<BR>
</B>
</BLOCKQUOTE>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public class Event {<BR>
&nbsp;&nbsp;public static final int SHIFT_MASK<BR>
&nbsp;&nbsp;public static final int CTRL_MASK<BR>
&nbsp;&nbsp;public static final int META_MASK<BR>
&nbsp;&nbsp;public static final int ALT_MASK<BR>
&nbsp;&nbsp;public static final int HOME<BR>
&nbsp;&nbsp;public static final int END<BR>
&nbsp;&nbsp;public static final int PGUP<BR>
&nbsp;&nbsp;public static final int PGDN<BR>
&nbsp;&nbsp;public static final int UP<BR>
&nbsp;&nbsp;public static final int DOWN<BR>
&nbsp;&nbsp;public static final int LEFT<BR>
&nbsp;&nbsp;public static final int RIGHT<BR>
&nbsp;&nbsp;public static final int f1<BR>
&nbsp;&nbsp;public static final int f2<BR>
&nbsp;&nbsp;public static final int f3<BR>
&nbsp;&nbsp;public static final int f4<BR>
&nbsp;&nbsp;public static final int f5<BR>
&nbsp;&nbsp;public static final int f6<BR>
&nbsp;&nbsp;public static final int f7<BR>
&nbsp;&nbsp;public static final int f8<BR>
&nbsp;&nbsp;public static final int f9<BR>
&nbsp;&nbsp;public static final int f10<BR>
&nbsp;&nbsp;public static final int f11<BR>
&nbsp;&nbsp;public static final int f12<BR>
&nbsp;&nbsp;public static final int WINDOW_DESTROY<BR>
&nbsp;&nbsp;public static final int WINDOW_EXPOSE<BR>
&nbsp;&nbsp;public static final int WINDOW_ICONIFY<BR>
&nbsp;&nbsp;public static final int WINDOW_DEICONIFY<BR>
&nbsp;&nbsp;public static final int WINDOW_MOVED<BR>
&nbsp;&nbsp;public static final int KEY_PRESS<BR>
&nbsp;&nbsp;public static final int KEY_RELEASE<BR>
&nbsp;&nbsp;public static final int KEY_ACTION<BR>
&nbsp;&nbsp;public static final int KEY_ACTION_RELEASE<BR>
&nbsp;&nbsp;public static final int MOUSE_DOWN<BR>
&nbsp;&nbsp;public static final int MOUSE_UP<BR>
&nbsp;&nbsp;public static final int MOUSE_MOVE<BR>
&nbsp;&nbsp;public static final int MOUSE_ENTER<BR>
&nbsp;&nbsp;public static final int MOUSE_EXIT<BR>
&nbsp;&nbsp;public static final int MOUSE_DRAG<BR>
&nbsp;&nbsp;public static final int SCROLL_LINE_UP<BR>
&nbsp;&nbsp;public static final int SCROLL_LINE_DOWN<BR>
&nbsp;&nbsp;public static final int SCROLL_PAGE_UP<BR>
&nbsp;&nbsp;public static final int SCROLL_PAGE_DOWN<BR>
&nbsp;&nbsp;public static final int SCROLL_ABSOLUTE<BR>
&nbsp;&nbsp;public static final int LIST_SELECT<BR>
&nbsp;&nbsp;public static final int LIST_DESELECT<BR>
&nbsp;&nbsp;public static final int ACTION_EVENT<BR>
&nbsp;&nbsp;public static final int LOAD_FILE<BR>
&nbsp;&nbsp;public static final int SAVE_FILE<BR>
&nbsp;&nbsp;public static final int GOT_FOCUS<BR>
&nbsp;&nbsp;public static final int LOST_FOCUS<BR>
&nbsp;&nbsp;public Object <I>target</I>;<BR>
&nbsp;&nbsp;public long <I>when</I>;<BR>
&nbsp;&nbsp;public int <I>id</I>;<BR>
&nbsp;&nbsp;public int <I>x</I>;<BR>
&nbsp;&nbsp;public int <I>y</I>;<BR>
&nbsp;&nbsp;public int <I>key</I>;<BR>
&nbsp;&nbsp;public int <I>modifiers</I>;<BR>
&nbsp;&nbsp;public int <I>clickCount</I>;<BR>
&nbsp;&nbsp;public Object <I>arg</I>;<BR>
&nbsp;&nbsp;public Event <I>evt</I>;<BR>
&nbsp;&nbsp;public Event(Object <I>target</I>, long <I>when</I>,
int <I>id</I>, int <I>x</I>, int <I>y</I>, int <I>key</I>,<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
int <I>modifiers</I>, Object <I>arg</I>)<BR>
&nbsp;&nbsp;public Event(Object <I>target</I>, long <I>when</I>,
int <I>id</I>, int <I>x</I>, int <I>y</I>, int <I>key</I>, int
</FONT></TT>
</BLOCKQUOTE>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">&nbsp;&nbsp;</FONT></TT><FONT FACE="ZapfDingbats">&Acirc;</FONT><TT><I><FONT FACE="Courier">modifiers</FONT></I><FONT FACE="Courier">)
<BR>
&nbsp;&nbsp;public Event(Object <I>target</I>, int <I>id</I>,
Object <I>arg</I>)<BR>
&nbsp;&nbsp;public void translate(int <I>x</I>, int <I>y</I>)
<BR>
&nbsp;&nbsp;public boolean shiftDown()<BR>
&nbsp;&nbsp;public boolean controlDown()<BR>
&nbsp;&nbsp;public boolean metaDown()<BR>
&nbsp;&nbsp;public String toString()<BR>
}</FONT></TT>
</BLOCKQUOTE>
<HR>

<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=589><B>Public Static Values</B></TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int SHIFT_MASK</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">SHIFT_MASK</FONT></TT> value represents
the Shift Modifier constant.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int CTRL_MASK</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">CTRL_MASK</FONT></TT> value represents
the Control Modifier constant.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int META_MASK</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">META_MASK</FONT></TT> value represents
the Meta Modifier constant.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int ALT_MASK</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">ALT_MASK</FONT></TT> value represents
the Alt Modifier constant.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int HOME</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">HOME</FONT></TT> value represents
the Home key.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int END</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">END</FONT></TT> value represents
the End key.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int PGUP</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">PGUP</FONT></TT> value represents
the Page Up key.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int PGDN</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">PGDN</FONT></TT> value represents
the Page Down key.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int UP</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">UP</FONT></TT> value represents the
Up Arrow key.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int DOWN</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">DOWN</FONT></TT> value represents
the Down Arrow key.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int LEFT</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">LEFT</FONT></TT> value represents
the Left Arrow key.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int RIGHT</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">RIGHT</FONT></TT> value represents
the Right Arrow key.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int f1</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">f1</FONT></TT> value represents the
f1 key.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int f2</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">f2</FONT></TT> value represents the
f2 key.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int f3</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">f3</FONT></TT> value represents the
f3 key.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int f4</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">f4</FONT></TT> value represents the
f4 key.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int f5</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">f5</FONT></TT> value represents the
f5 key.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int f6</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">f6</FONT></TT> value represents the
f6 key.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int f7</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">f7</FONT></TT> value represents the
f7 key.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int f8</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">f8</FONT></TT> value represents the
f8 key.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int f9</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">f9</FONT></TT> value represents the
f9 key.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int f10</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">f10</FONT></TT> value represents
the f10 key.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int f11</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">f11</FONT></TT> value represents
the f11 key.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int f12</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">f12</FONT></TT> value represents
the f12 key.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int WINDOW_DESTROY</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">WINDOW_DESTROY</FONT></TT> value
represents the destroy window event.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int WINDOW_EXPOSE</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">WINDOW_EXPOSE</FONT></TT> value represents
the expose window event.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int WINDOW_ICONIFY</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">WINDOW_ICONIFY</FONT></TT> value
represents the iconify window event.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int WINDOW_DEICONIFY</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">DEICONIFY_WINDOW</FONT></TT> value
represents the deiconify window event.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int WINDOW_MOVED</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">WINDOW_MOVED</FONT></TT> value represents
the window moved event.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int KEY_PRESS</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">KEY_PRESS</FONT></TT> value represents
the key press event.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int KEY_RELEASE</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">KEY_RELEASE</FONT></TT> value represents
the key release event.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int KEY_ACTION</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">KEY_ACTION</FONT></TT> value represents
the key action keyboard event.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int KEY_ACTION_RELEASE</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">KEY_ACTION_RELEASE</FONT></TT> value
represents the key action release keyboard event.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int MOUSE_DOWN</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">MOUSE_DOWN</FONT></TT> value represents
the mouse down event.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int MOUSE_UP</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">MOUSE_UP</FONT></TT> value represents
the mouse up event.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int MOUSE_MOVE</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">MOUSE_MOVE</FONT></TT> value represents
the mouse move event.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int MOUSE_ENTER</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">MOUSE_ENTER</FONT></TT> value represents
the mouse enter event.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int MOUSE_EXIT</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">MOUSE_EXIT</FONT></TT> value represents
the mouse exit event.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int MOUSE_DRAG</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">MOUSE_DRAG</FONT></TT> value represents
the mouse drag event.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int SCROLL_LINE_UP</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">SCROLL_LINE_UP</FONT></TT> value
represents the line up scroll event.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int SCROLL_LINE_DOWN</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">SCROLL_LINE_DOWN</FONT></TT> value
represents the line down scroll event.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int SCROLL_PAGE_UP</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">SCROLL_PAGE_UP</FONT></TT> value
represents the page up scroll event.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int SCROLL_PAGE_DOWN</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">SCROLL_PAGE_DOWN</FONT></TT> value
represents the page down scroll event.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int SCROLL_ABSOLUTE</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">SCROLL_ABSOLUTE</FONT></TT> value
represents the absolute scroll event.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int LIST_SELECT</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">LIST_SELECT</FONT></TT> value represents
the select list event.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int LIST_DESELECT</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">LIST_DESELECT</FONT></TT> value represents
the deselect list event.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int ACTION_EVENT</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">ACTION_EVENT</FONT></TT> value represents
an action event.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int LOAD_FILE</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">LOAD_FILE</FONT></TT> value represents
a file load event.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int SAVE_FILE</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">SAVE_FILE</FONT></TT> value represents
a file save event.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int GOT_FOCUS</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">GOT_FOCUS</FONT></TT> value represents
a got focus event.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int LOST_FOCUS</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">LOST_FOCUS</FONT></TT> value represents
a lost focus event.<BR>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=0><P>
<B>Public Instance Variables</B></TD></TR>
</TABLE></CENTER>
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public Object</FONT></B><FONT FACE="Courier">
<I><B>target</B></I></FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><I><FONT FACE="Courier">target</FONT></I></TT> instance
variable represents the object that is the target of the event.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public long</FONT></B><FONT FACE="Courier">
<I><B>when</B></I></FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><I><FONT FACE="Courier">when</FONT></I></TT> instance
variable represents the timestamp of the event.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public int</FONT></B><FONT FACE="Courier">
<I><B>id</B></I></FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><I><FONT FACE="Courier">id</FONT></I></TT> instance variable
represents the type of the event.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public int</FONT></B><FONT FACE="Courier">
<I><B>x</B></I></FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><I><FONT FACE="Courier">x</FONT></I></TT> instance variable
represents the x coordinate of the event.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public int</FONT></B><FONT FACE="Courier">
<I><B>y</B></I></FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><I><FONT FACE="Courier">y</FONT></I></TT> instance variable
represents the y coordinate of the event.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public int</FONT></B><FONT FACE="Courier">
<I><B>key</B></I></FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><I><FONT FACE="Courier">key</FONT></I></TT> instance variable
represents the key that was pressed to trigger the keyboard event
(see the key values listed previously).
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public int</FONT></B><FONT FACE="Courier">
<I><B>modifiers</B></I></FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><I><FONT FACE="Courier">modifiers</FONT></I></TT> instance
variable represents the state of the modifier keys.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public int</FONT></B><FONT FACE="Courier">
<I><B>clickCount</B></I></FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><I><FONT FACE="Courier">clickCount</FONT></I></TT> instance
variable represents the number of clicks during the mouse down
event. If this event wasn't triggered by a mouse down action,
this value is <TT><FONT FACE="Courier">0</FONT></TT>. It is <TT><FONT FACE="Courier">1</FONT></TT>
for a single click and <TT><FONT FACE="Courier">2</FONT></TT>
for a double click.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public Object</FONT></B><FONT FACE="Courier">
<I><B>arg</B></I></FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><I><FONT FACE="Courier">arg</FONT></I></TT> instance variable
represents an arbitrary argument.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public Event</FONT></B><FONT FACE="Courier">
<I><B>evt</B></I></FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><I><FONT FACE="Courier">evt</FONT></I></TT> instance variable
represents the next event. This is useful when multiple events
are stored in an array or linked list.<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%>
<H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/const.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">Event</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Event</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public Event(Object <I>target</I>, long
<I>when</I>, int <I>id</I>, int <I>x</I>, int <I>y</I>, int <I>key</I>,
<BR>
</FONT></TT><FONT FACE="ZapfDingbats">&Acirc;</FONT><TT><FONT FACE="Courier">
int <I>modifiers</I>, Object <I>arg</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
This <TT><FONT FACE="Courier">Event()</FONT></TT>constructor constructs
an event using the target, current time, event ID, location, key
pressed, modifiers, and some argument.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">target</FONT></I></TT> is the target object for the event.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">when</FONT></I></TT> is the timestamp for the event.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">id</FONT></I></TT> is the event type.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">x</FONT></I></TT> is the x coordinate of the event.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">y</FONT></I></TT> is the y coordinate of the event.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">key</FONT></I></TT> is the key pressed that triggered a keyboard event.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">modifiers</FONT></I></TT> is the state of the modifier keys.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">arg</FONT></I></TT> is an arbitrary argument.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/const.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">Event</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Event</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public Event(Object <I>target</I>, long
<I>when</I>, int <I>id</I>, int <I>x</I>, int <I>y</I>,<BR>
</FONT></TT><FONT FACE="ZapfDingbats">&Acirc;</FONT><TT><FONT FACE="Courier">
int <I>key</I>, int <I>modifiers</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
This <TT><FONT FACE="Courier">Event()</FONT></TT> constructor
constructs an event using the target, current time, event ID,
location, key pressed, and modifiers.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">target</FONT></I></TT> is the target object for the event.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">when</FONT></I></TT> is the timestamp for the event.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">id</FONT></I></TT> is the event type.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">x</FONT></I></TT> is the x coordinate of the event.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">y</FONT></I></TT> is the y coordinate of the event.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">key</FONT></I></TT> is the key pressed that triggered a keyboard event.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">modifiers</FONT></I></TT> contains the state of the modifier keys.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/const.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">Event</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Event</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public Event(Object <I>target</I>, int
<I>id</I>, Object <I>arg</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
This <TT><FONT FACE="Courier">Event()</FONT></TT> constructor
constructs an event using the target, event ID, and some argument.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">target</FONT></I></TT> is the target object for the event.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">id</FONT></I></TT> is the event type.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">arg</FONT></I></TT> is an arbitrary argument.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">translate</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Event</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void translate(int <I>x</I>, int
<I>y</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">translate()</FONT></TT> method translates
coordinates for a given component. If the object sending this
event has targeted a certain component, this method translates
the coordinates to make sense for that particular component.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">x</FONT></I></TT> is the x coordinate.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">y</FONT></I></TT> is the y coordinate.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">shiftDown</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Event</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public boolean shiftDown()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">shiftDown()</FONT></TT> method returns
the current state of the Shift key.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >A Boolean value that is true if the Shift key is down and false if it is up.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">controlDown</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Event</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public boolean controlDown()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">controlDown()</FONT></TT> method
returns the current state of the Control key.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >A Boolean value that is true if the Control key is down and false if it is up.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">metaDown</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Event</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public boolean metaDown()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">metaDown()</FONT></TT> method returns
the current state of the Meta key.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >A Boolean value that is true if the Meta key is down and false if it is up.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">toString</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Event</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public String toString()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">toString()</FONT></TT> method returns
the string representation of the current event.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >A <TT><FONT FACE="Courier">String</FONT></TT> value containing information on the event, including the <TT><I><FONT FACE="Courier">id</FONT></I></TT>, <TT><I><FONT FACE="Courier">x</FONT></I></TT>, <TT><I><FONT FACE="Courier">y</FONT></I></TT>, 
<TT><I><FONT FACE="Courier">key</FONT></I></TT>, <TT><I><FONT FACE="Courier">shiftDown</FONT></I></TT>, <TT><I><FONT FACE="Courier">controlDown</FONT></I></TT>, and <TT><I><FONT FACE="Courier">metaDown</FONT></I></TT> values.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=8%><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></TD><TD WIDTH=499><H2><A NAME="FileDialog"><FONT SIZE=5 COLOR=#FF0000>FileDialog</FONT></A>
</H2>

</TD><TD WIDTH=8%><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Extends.gif"></FONT></TT>


</TD><TD >
<FONT FACE="Courier">Dialog</FONT>


</TD></TR>
</TABLE></CENTER>
<P>
<P>
The class hierarchy for the <TT><FONT FACE="Courier">FileDialog</FONT></TT>
class derives from the class <TT><FONT FACE="Courier">java.awt.Dialog</FONT></TT>.
(See Listing 28.15.) A <TT><FONT FACE="Courier">FileDialog</FONT></TT>
is presented for a user to select a file. This dialog is a modal
dialog; therefore, the calling thread is blocked until this dialog
exits. <TT><FONT FACE="Courier">FileDialog</FONT></TT>'s overall
derivation is shown in Figure 28.1.
<HR>
<BLOCKQUOTE>
<B>Listing 28.15. Public members of </B><TT><B><FONT FACE="Courier">java.awt.FileDialog</FONT></B></TT><B>.
<BR>
</B>
</BLOCKQUOTE>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public class FileDialog extends Dialog
{<BR>
&nbsp;&nbsp;public static final int LOAD<BR>
&nbsp;&nbsp;public static final int SAVE<BR>
&nbsp;&nbsp;public FileDialog(Frame <I>parent</I>, String <I>title</I>)
<BR>
&nbsp;&nbsp;public FileDialog(Frame <I>parent</I>, String <I>title</I>,
int <I>mode</I>)<BR>
&nbsp;&nbsp;public synchronized void addNotify()<BR>
&nbsp;&nbsp;public int getMode()<BR>
&nbsp;&nbsp;public String getDirectory()<BR>
&nbsp;&nbsp;public void setDirectory(String <I>dir</I>)<BR>
&nbsp;&nbsp;public String getFile()<BR>
&nbsp;&nbsp;public void setFile(String <I>file</I>)<BR>
&nbsp;&nbsp;public void setFilenameFilter(FilenameFilter filter)
<BR>
&nbsp;&nbsp;public FilenameFilter getFilenameFilter()<BR>
}</FONT></TT>
</BLOCKQUOTE>
<HR>

<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=583><B>Public Static Values</B></TD></TR>
</TABLE></CENTER>
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int LOAD</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">LOAD</FONT></TT> static value represents
the file load variable.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int SAVE</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">SAVE</FONT></TT> static value represents
the file save variable.<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%>
<H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/const.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">FileDialog</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">FileDialog</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public FileDialog(Frame <I>parent</I>,
String <I>title</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
This <TT><FONT FACE="Courier">FileDialog()</FONT></TT> constructor
constructs a file dialog using a parent frame and a title string.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">Parent</FONT></I></TT> is the parent frame of the <TT><FONT FACE="Courier">FileDialog</FONT></TT>.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">Title</FONT></I></TT> is a <TT><FONT FACE="Courier">String</FONT></TT> containing the dialog's title.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/const.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">FileDialog</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">FileDialog</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public FileDialog(Frame <I>parent</I>,
String <I>title</I>, int <I>mode</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
This <TT><FONT FACE="Courier">FileDialog()</FONT></TT> constructor
constructs a file dialog using a parent frame, a title string,
and a mode value representing either a <TT><FONT FACE="Courier">LOAD</FONT></TT>
or <TT><FONT FACE="Courier">SAVE</FONT></TT> dialog.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">Parent</FONT></I></TT> is the parent frame of the <TT><FONT FACE="Courier">FileDialog</FONT></TT>.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">Title</FONT></I></TT> is a <TT><FONT FACE="Courier">String</FONT></TT> containing the dialog's title.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><FONT FACE="Courier">Mode</FONT> is an integer value representing the dialog mode (<TT><FONT FACE="Courier">LOAD</FONT></TT> or <TT><FONT FACE="Courier">SAVE</FONT></TT>).
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">AddNotify</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">FileDialog</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public synchronized void addNotify()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">addNotify()</FONT></TT> notifies the
<TT><FONT FACE="Courier">FileDialog</FONT></TT> to create a peer.
Using a peer interface allows you to change the user interface
of the <TT><FONT FACE="Courier">FileDialog</FONT></TT> without
changing its functionality.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >None</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getMode</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">FileDialog</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public int getMode()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">getMode()</FONT></TT> returns the current
mode of the <TT><FONT FACE="Courier">FileDialog</FONT></TT>.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >An integer value representing the current mode (<TT><FONT FACE="Courier">LOAD</FONT></TT> or <TT><FONT FACE="Courier">SAVE</FONT></TT>) of the <TT><FONT FACE="Courier">FileDialog</FONT></TT>.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">GetDirectory</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">FileDialog</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public String getDirectory()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">getDirectory()</FONT></TT> method
returns the current directory of the <TT><FONT FACE="Courier">FileDialog</FONT></TT>.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >A <TT><FONT FACE="Courier">String</FONT></TT> value representing the <TT><FONT FACE="Courier">FileDialog</FONT></TT>'s current directory.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">SetDirectory</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">FileDialog</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void setDirectory(String <I>dir</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">setDirectory()</FONT></TT> method
sets the current directory of the <TT><FONT FACE="Courier">FileDialog</FONT></TT>.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">Dir</FONT></I></TT> is a <TT><FONT FACE="Courier">String</FONT></TT> value representing the directory to be set.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">GetFile</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">FileDialog</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public String getFile()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">getFile()</FONT></TT> method returns
the currently selected file within the <TT><FONT FACE="Courier">FileDialog</FONT></TT>.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >A <TT><FONT FACE="Courier">String</FONT></TT> value representing the <TT><FONT FACE="Courier">FileDialog</FONT></TT>'s current file.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">SetFile</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">FileDialog</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void setFile(String <I>file</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">setFile()</FONT></TT> method sets
the current file of the <TT><FONT FACE="Courier">FileDialog</FONT></TT>.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">file</FONT></I></TT> is a <TT><FONT FACE="Courier">String</FONT></TT> value representing the file to be set.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">setFilenameFilter</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">FileDialog</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void setFilenameFilter(FilenameFilter
<I>filter</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">setFilenameFilter()</FONT></TT> method
sets the file filter for the <TT><FONT FACE="Courier">FileDialog</FONT></TT>
to the specified <TT><FONT FACE="Courier">FilenameFilter</FONT></TT>.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">filter</FONT></I></TT> is a <TT><FONT FACE="Courier">FilenameFilter</FONT></TT> representing the filter to be set. For more information on the <TT><FONT FACE="Courier">FilenameFilter</FONT></TT> class, see the documentation 
in <A HREF="ch31.htm" >Chapter 31</A>, &quot;Package <TT><FONT FACE="Courier">java.io</FONT></TT>.&quot;
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getFilenameFilter</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">FileDialog</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public FilenameFilter getFilenameFilter()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">getFilenameFilter() </FONT></TT>method
returns the current <TT><FONT FACE="Courier">FilenameFilter</FONT></TT>
being used by the <TT><FONT FACE="Courier">FileDialog</FONT></TT>.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >A <TT><FONT FACE="Courier">FilenameFilter</FONT></TT> object containing the file filter displayed by the <TT><FONT FACE="Courier">FileDialog</FONT></TT>. For more information on the <TT><FONT FACE="Courier">FilenameFilter</FONT></TT> class, see the 
documentation in <A HREF="ch31.htm" >Chapter 31</A>.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=8%><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></TD><TD WIDTH=499><H2><A NAME="FlowLayout"><FONT SIZE=5 COLOR=#FF0000>FlowLayout</FONT></A>
</H2>

</TD><TD WIDTH=8%><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Extends.gif"></FONT></TT>


</TD><TD >
<FONT FACE="Courier">Object</FONT>


</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%>
<IMG SRC="http://docs.rinet.ru/JavDev/Implem.gif">

</TD><TD >
<TT><FONT FACE="Courier">LayoutManager</FONT></TT>


</TD></TR>
</TABLE></CENTER>
<P>
<P>
The class hierarchy for the <TT><FONT FACE="Courier">FlowLayout</FONT></TT>
class derives from the class <TT><FONT FACE="Courier">java.lang.Object</FONT></TT>.
(See Listing 28.16.) A <TT><FONT FACE="Courier">FlowLayout</FONT></TT>
implements the <TT><FONT FACE="Courier">LayoutManager</FONT></TT>
interface. This class lays out buttons from left to right until
no more buttons fit on the <TT><FONT FACE="Courier">Panel</FONT></TT>.
<TT><FONT FACE="Courier">FlowLayout</FONT></TT>'s overall derivation
is shown in Figure 28.1.
<HR>
<BLOCKQUOTE>
<B>Listing 28.16. Public members of </B><TT><B><FONT FACE="Courier">java.awt.FlowLayout</FONT></B></TT><B>.
<BR>
</B>
</BLOCKQUOTE>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public class FlowLayout implements LayoutManager
{<BR>
&nbsp;&nbsp;public static final int LEFT<BR>
&nbsp;&nbsp;public static final int CENTER<BR>
&nbsp;&nbsp;public static final int RIGHT<BR>
&nbsp;&nbsp;public FlowLayout()<BR>
&nbsp;&nbsp;public FlowLayout(int <I>align</I>)<BR>
&nbsp;&nbsp;public FlowLayout(int <I>align</I>, int <I>hgap</I>,
int <I>vgap</I>)<BR>
&nbsp;&nbsp;public void addLayoutComponent(String <I>name</I>,
Component <I>comp</I>)<BR>
&nbsp;&nbsp;public void removeLayoutComponent(Component <I>comp</I>)
<BR>
&nbsp;&nbsp;public Dimension preferredLayoutSize(Container <I>target</I>)
<BR>
&nbsp;&nbsp;public Dimension minimumLayoutSize(Container <I>target</I>)
<BR>
&nbsp;&nbsp;public void layoutContainer(Container <I>target</I>)
<BR>
&nbsp;&nbsp;public String toString()<BR>
}</FONT></TT>
</BLOCKQUOTE>
<HR>

<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=589><B>Public Static Values</B></TD></TR>
</TABLE></CENTER>
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int LEFT</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">LEFT</FONT></TT> static value represents
the left alignment variable.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int CENTER</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">CENTER</FONT></TT> static value represents
the center alignment variable.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int RIGHT</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">RIGHT</FONT></TT> static value represents
the right alignment variable.<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%>
<H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/const.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">FlowLayout</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">FlowLayout</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public FlowLayout()</FONT></TT>
</BLOCKQUOTE>
<P>
This <TT><FONT FACE="Courier">FlowLayout()</FONT></TT> constructor
constructs a default <TT><FONT FACE="Courier">FlowLayout</FONT></TT>
class with a centered alignment.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >None</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/const.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">FlowLayout</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">FlowLayout</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public FlowLayout(int <I>align</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
This <TT><FONT FACE="Courier">FlowLayout()</FONT></TT> constructor
constructs a <TT><FONT FACE="Courier">FlowLayout</FONT></TT> class
using the specified alignment.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">align</FONT></I></TT> is the alignment value (<TT><FONT FACE="Courier">LEFT</FONT></TT>, <TT><FONT FACE="Courier">CENTER</FONT></TT>, or <TT><FONT FACE="Courier">RIGHT</FONT></TT>).
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/const.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">FlowLayout</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">FlowLayout</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public FlowLayout(int <I>align</I>, int
<I>hgap</I>, int <I>vgap</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
This <TT><FONT FACE="Courier">FlowLayout()</FONT></TT> constructor
constructs a <TT><FONT FACE="Courier">FlowLayout</FONT></TT> class
using the specified alignment and gap values.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">align</FONT></I></TT> is the alignment value (<TT><FONT FACE="Courier">LEFT</FONT></TT>, <TT><FONT FACE="Courier">CENTER</FONT></TT>, or <TT><FONT FACE="Courier">RIGHT</FONT></TT>).
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">hgap</FONT></I></TT> is the horizontal gap value.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">vgap</FONT></I></TT> is the vertical gap value.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">addLayoutComponent</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">FlowLayout</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void addLayoutComponent(String
<I>name</I>, Component <I>comp</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">addLayoutComponent()</FONT></TT>
method adds a component to the <TT><FONT FACE="Courier">FlowLayout</FONT></TT>
class.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">name</FONT></I></TT> is a <TT><FONT FACE="Courier">String</FONT></TT> value representing the name of the component to be added.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">comp</FONT></I></TT> is the component object to be added to the <TT><FONT FACE="Courier">FlowLayout</FONT></TT>.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">removeLayoutComponent</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">FlowLayout</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void removeLayoutComponent(Component
<I>comp</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">removeLayoutComponent()</FONT></TT> removes
a component from the <TT><FONT FACE="Courier">FlowLayout</FONT></TT>
class.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">comp</FONT></I></TT> is a component object to be removed from the <TT><FONT FACE="Courier">FlowLayout</FONT></TT>.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">PreferredLayoutSize</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">FlowLayout</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public Dimension preferredLayoutSize(Container
<I>target</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">preferredLayoutSize()</FONT></TT>
method returns the preferred size for this <TT><FONT FACE="Courier">FlowLayout</FONT></TT>
given the components in the specified container.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">target</FONT></I></TT> is a <TT><FONT FACE="Courier">Container</FONT></TT> object that is examined to determine the preferred layout size for this <TT><FONT FACE="Courier">FlowLayout</FONT></TT>.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT>
</TD><TD >A <TT><FONT FACE="Courier">Dimension</FONT></TT> class containing the preferred size of the <TT><FONT FACE="Courier">FlowLayout</FONT></TT>.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">minimumLayoutSize</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">FlowLayout</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public Dimension minimumLayoutSize(Container
<I>target</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">minimumLayoutSize()</FONT></TT> method
returns the minimum size for this <TT><FONT FACE="Courier">FlowLayout</FONT></TT>
given the components in the specified container.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">target</FONT></I></TT> is a <TT><FONT FACE="Courier">Container</FONT></TT> object that is examined to determine the minimum layout size for this <TT><FONT FACE="Courier">FlowLayout</FONT></TT>.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT>
</TD><TD >A <TT><FONT FACE="Courier">Dimension</FONT></TT> class containing the minimum size of the <TT><FONT FACE="Courier">FlowLayout</FONT></TT>.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">layoutContainer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">FlowLayout</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void layoutContainer(Container
<I>target</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">layoutContainer()</FONT></TT> method
lays out the components within the specified container.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">target</FONT></I></TT> is a <TT><FONT FACE="Courier">Container</FONT></TT> class containing a set of components that are laid out according to the <TT><FONT FACE="Courier">FlowLayout</FONT></TT> rules.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">toString</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">FlowLayout</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public String toString()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">toString()</FONT></TT> method returns
a string representation of the <TT><FONT FACE="Courier">FlowLayout</FONT></TT>
class.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >A <TT><FONT FACE="Courier">String</FONT></TT> containing information about the <TT><FONT FACE="Courier">FlowLayout</FONT></TT>, including the <TT><FONT FACE="Courier">FlowLayout</FONT></TT>'s name, alignment, <TT><I><FONT 
FACE="Courier">hgap</FONT></I></TT>, and <TT><I><FONT FACE="Courier">vgap</FONT></I></TT> values.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=8%><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></TD><TD WIDTH=499><H2><A NAME="Font"><FONT SIZE=5 COLOR=#FF0000>Font</FONT></A></H2>

</TD><TD WIDTH=8%><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Extends.gif"></FONT></TT>


</TD><TD >
<FONT FACE="Courier">Object</FONT>


</TD></TR>
</TABLE></CENTER>
<P>
<P>
The class hierarchy for the <TT><FONT FACE="Courier">Font</FONT></TT>
class derives from the class <TT><FONT FACE="Courier">java.lang.Object</FONT></TT>.
(See Listing 28.17.) This class encapsulates a font. <TT><FONT FACE="Courier">Font</FONT></TT>'s
overall derivation is shown in Figure 28.1.
<HR>
<BLOCKQUOTE>
<B>Listing 28.17. Public members of </B><TT><B><FONT FACE="Courier">java.awt.Font</FONT></B></TT><B>.
<BR>
</B>
</BLOCKQUOTE>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public class Font {<BR>
&nbsp;&nbsp;public static final int PLAIN<BR>
&nbsp;&nbsp;public static final int BOLD<BR>
&nbsp;&nbsp;public static final int ITALIC<BR>
&nbsp;&nbsp;public Font(String <I>name</I>, int <I>style</I>,
int <I>size</I>)<BR>
&nbsp;&nbsp;public String getFamily()<BR>
&nbsp;&nbsp;public String getName()<BR>
&nbsp;&nbsp;public int getStyle()<BR>
&nbsp;&nbsp;public int getSize()<BR>
&nbsp;&nbsp;public boolean isPlain()<BR>
&nbsp;&nbsp;public boolean isBold()<BR>
&nbsp;&nbsp;public boolean isItalic()<BR>
&nbsp;&nbsp;public static Font getFont(String <I>nm</I>)<BR>
&nbsp;&nbsp;public static Font getFont(String <I>nm</I>, Font
<I>font</I>)<BR>
&nbsp;&nbsp;public int hashCode()<BR>
&nbsp;&nbsp;public boolean equals(Object <I>obj</I>)<BR>
&nbsp;&nbsp;public String toString()<BR>
}</FONT></TT>
</BLOCKQUOTE>
<HR>

<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=583><B>Public Static Values</B></TD></TR>
</TABLE></CENTER>
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int PLAIN</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">PLAIN</FONT></TT> static value represents
the plain style constant.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int BOLD</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">BOLD</FONT></TT> static value represents
the bold style constant.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int ITALIC</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">ITALIC</FONT></TT> static value represents
the italic style constant.<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%>
<H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/const.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">Font</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Font</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public Font(String <I>name</I>, int <I>style</I>,
int <I>size</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">Font()</FONT></TT> constructor constructs
a <TT><FONT FACE="Courier">Font</FONT></TT> of the specified name,
style, and size.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">name</FONT></I></TT> is the name of the font to be created. The possible fonts that can be created can be determined by calling the <TT><FONT FACE="Courier">Toolkit</FONT></TT> class's <TT><FONT 
FACE="Courier">getFontList()</FONT></TT> method.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">style</FONT></I></TT> is the style (<TT><FONT FACE="Courier">PLAIN</FONT></TT>, <TT><FONT FACE="Courier">BOLD</FONT></TT>, and <TT><FONT FACE="Courier">ITALIC</FONT></TT>) of the font to be created.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">size</FONT></I></TT> is the size of the font to be created.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getFamily</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Font</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public String getFamily()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">getFamily()</FONT></TT> returns the font
family that this font belongs to.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >A <TT><FONT FACE="Courier">String</FONT></TT> value representing the <TT><FONT FACE="Courier">Font</FONT></TT>'s family name.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getName</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Font</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public String getName()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">getName()</FONT></TT> returns the name
of the <TT><FONT FACE="Courier">Font</FONT></TT> object.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >A <TT><FONT FACE="Courier">String</FONT></TT> value representing the name of the <TT><FONT FACE="Courier">Font</FONT></TT>.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getStyle</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Font</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public int getStyle()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">getStyle()</FONT></TT> returns the style
of the <TT><FONT FACE="Courier">Font</FONT></TT> object.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >An integer value representing the style of the <TT><FONT FACE="Courier">Font</FONT></TT>.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getSize</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Font</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public int getSize()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">getSize()</FONT></TT> returns the size
of the <TT><FONT FACE="Courier">Font</FONT></TT> object.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >An integer value representing the point size of the <TT><FONT FACE="Courier">Font</FONT></TT>.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">isPlain</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Font</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public boolean isPlain()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">isPlain()</FONT></TT> returns the plain
style state of the <TT><FONT FACE="Courier">Font</FONT></TT>.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >A Boolean value that is true if the font is plain and false if it is not.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">isBold</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Font</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public boolean isBold()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">isBold()</FONT></TT> returns the bold
style state of the <TT><FONT FACE="Courier">Font</FONT></TT>.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >A Boolean value that is true if the font is bold and false if it is not.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">isItalic</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Font</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public boolean isItalic()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">isItalic()</FONT></TT> returns the italic
style state of the <TT><FONT FACE="Courier">Font</FONT></TT>.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >A Boolean value that is true if the font is italic and false if it is not.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getFont</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Font</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public static Font getFont(String <I>nm</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">getFont()</FONT></TT> returns a <TT><FONT FACE="Courier">Font</FONT></TT>
based on the system properties list and the name passed in.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">nm</FONT></I></TT> is the name of the font to be returned from the system properties list.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT>
</TD><TD >A <TT><FONT FACE="Courier">Font</FONT></TT> object based on the system properties list.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getFont</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Font</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public static Font getFont(String <I>nm</I>,
Font <I>font</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
This <TT><FONT FACE="Courier">getFont()</FONT></TT> method returns
a <TT><FONT FACE="Courier">Font</FONT></TT> based on the system
properties list, the name passed in, and a default font in case
the specified name is not found.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">nm</FONT></I></TT> is the name of the font to be returned from the system properties list.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">font</FONT></I></TT> is the default font to be returned if the font specified by the <TT><I><FONT FACE="Courier">nm</FONT></I></TT> variable is not found.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT>
</TD><TD >A <TT><FONT FACE="Courier">Font</FONT></TT> object based on the system properties list.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">hashCode</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Font</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public int hashCode()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">hashCode()</FONT></TT> returns a hash
code for this font.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >An integer value representing the hash code for the font.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">equals</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Font</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public boolean equals(Object <I>obj</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">equals()</FONT></TT> compares an object
with the <TT><FONT FACE="Courier">Font</FONT></TT> object.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">obj</FONT></I></TT> is the object to compare the <TT><FONT FACE="Courier">Font</FONT></TT> with.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT>
</TD><TD >A Boolean value that is true if the objects are equal and false if they are not.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">toString</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Font</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public String toString()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">toString()</FONT></TT> method returns
a string representation of the <TT><FONT FACE="Courier">Font</FONT></TT>.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >A <TT><FONT FACE="Courier">String</FONT></TT> value containing the <TT><FONT FACE="Courier">Font</FONT></TT> family, name, style, and size values.
</TD></TR>
</TABLE></CENTER>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=8%><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></TD><TD WIDTH=499><H2><A NAME="FontMetrics"><FONT SIZE=5 COLOR=#FF0000>FontMetrics</FONT></A>
</H2>

</TD><TD WIDTH=8%><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Extends.gif"></FONT></TT>


</TD><TD >
<FONT FACE="Courier">Object</FONT>


</TD></TR>
</TABLE></CENTER>
<P>
<P>
The class hierarchy for the <TT><FONT FACE="Courier">FontMetrics</FONT></TT>
class derives from the class <TT><FONT FACE="Courier">java.lang.Object</FONT></TT>.
(See Listing 28.18.) The <TT><FONT FACE="Courier">FontMetrics</FONT></TT>
class encapsulates a font metrics object containing font information.
<TT><FONT FACE="Courier">FontMetrics</FONT></TT>' overall derivation
is shown in Figure 28.1.
<HR>
<BLOCKQUOTE>
<B>Listing 28.18. Public members of </B><TT><B><FONT FACE="Courier">java.awt.FontMetrics</FONT></B></TT><B>.
<BR>
</B>
</BLOCKQUOTE>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public abstract class FontMetrics {<BR>
&nbsp;&nbsp;public Font getFont()<BR>
&nbsp;&nbsp;public int getLeading()<BR>
&nbsp;&nbsp;public int getAscent()<BR>
&nbsp;&nbsp;public int getDescent()<BR>
&nbsp;&nbsp;public int getHeight()<BR>
&nbsp;&nbsp;public int getMaxAscent()<BR>
&nbsp;&nbsp;public int getMaxDescent()<BR>
&nbsp;&nbsp;public int getMaxDecent()<BR>
&nbsp;&nbsp;public int getMaxAdvance()<BR>
&nbsp;&nbsp;public int charWidth(int <I>ch</I>)<BR>
&nbsp;&nbsp;public int charWidth(char <I>ch</I>)<BR>
&nbsp;&nbsp;public int stringWidth(String <I>str</I>)<BR>
&nbsp;&nbsp;public int charsWidth(char data[], int <I>off</I>,
int <I>len</I>)<BR>
&nbsp;&nbsp;public int bytesWidth(byte data[], int <I>off</I>,
int <I>len</I>)<BR>
&nbsp;&nbsp;public int[] getWidths()<BR>
&nbsp;&nbsp;public String toString()<BR>
}</FONT></TT>
</BLOCKQUOTE>
<HR>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getFont</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">FontMetrics</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public Font getFont()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">getFont()</FONT></TT> method returns
the font that <TT><FONT FACE="Courier">FontMetrics</FONT></TT>
refers to.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >A <TT><FONT FACE="Courier">Font</FONT></TT> class.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getLeading</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">FontMetrics</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public int getLeading()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">getLeading()</FONT></TT> method gets
the line spacing of the font.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >An integer value containing the standard leading, or line spacing, of the font. The line spacing of a font is the space reserved between the descent of a text character and the ascent of a text character below it.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getAscent</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">FontMetrics</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public int getAscent()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">getAscent()</FONT></TT> method gets
the ascent value for a <TT><FONT FACE="Courier">Font</FONT></TT>.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >An integer value containing the ascent value for a <TT><FONT FACE="Courier">Font</FONT></TT>. This value is the distance from the bottom of a character to its top.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getDescent</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif">3-2</FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">FontMetrics</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public int getDescent()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">getDescent()</FONT></TT> method gets
the descent value for a <TT><FONT FACE="Courier">Font</FONT></TT>.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >An integer value containing the descent value for a <TT><FONT FACE="Courier">Font</FONT></TT>. This value is the bottom coordinate of a character.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getHeight</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">FontMetrics</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public int getHeight()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">getHeight()</FONT></TT> method gets
the height of a line of text using the current <TT><FONT FACE="Courier">Font</FONT></TT>.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >An integer value containing the height of a line of text. This value is calculated by adding the ascent, descent, and leading values.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getMaxAscent</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">FontMetrics</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public int getMaxAscent()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">getMaxAscent()</FONT></TT> returns the
maximum value of a font's ascent.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >An integer value containing the maximum value of a font's ascent for all of that font's characters.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getMaxDescent</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">FontMetrics</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public int getMaxDescent()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">getMaxDescent()</FONT></TT> returns the
maximum value of a font's descent.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >An integer value containing the maximum value of a font's descent for all of that font's characters.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getMaxDecent</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">FontMetrics</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public int getMaxDecent()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">getMaxDecent()</FONT></TT> method
is provided only for backward compatibility. It simply calls the
<TT><FONT FACE="Courier">getMaxDescent()</FONT></TT> method.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >An integer value containing the maximum value of a font's descent for all of that font's characters.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getMaxAdvance</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">FontMetrics</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public int getMaxAdvance()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">getMaxAdvance()</FONT></TT> method
gets the maximum amount for a character's advance value. The advance
is the amount that is advanced from the beginning of one character
to the next  character.<P><CENTER><TABLE  BORDER=1  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%>
<H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">charWidth</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">FontMetrics</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public int charWidth(int <I>ch</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">charWidth()</FONT></TT> returns the width
of a particular character for the current font.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">ch</FONT></I></TT> is an integer value representing the character to be checked.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT>
</TD><TD >An integer value representing the width of the specified character.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">charWidth</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">FontMetrics</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public int charWidth(char <I>ch</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
This <TT><FONT FACE="Courier">charWidth()</FONT></TT> method returns
the width of a particular character for the current font.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">ch</FONT></I></TT> is a <TT><FONT FACE="Courier">char</FONT></TT> value representing the character to be checked.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT>
</TD><TD >An integer value representing the width of the specified character.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">stringWidth</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">FontMetrics</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public int stringWidth(String <I>str</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">stringWidth()</FONT></TT> method
returns the width of a specified string using the current font.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">str</FONT></I></TT> is a string representing the characters to be checked.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT>
</TD><TD >An integer value representing the advance width of the specified string.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">charsWidth</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">FontMetrics</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public int charsWidth(char <I>data</I>[],
int <I>off</I>, int <I>len</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">charsWidth()</FONT></TT> method returns
the width of a specified string of characters using the current
font.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">data</FONT></I></TT> is an array of characters to be checked.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">off</FONT></I></TT> is an integer value representing the offset into the array where the string starts.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">len</FONT></I></TT> is the number of characters to be measured.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT>
</TD><TD >An integer value representing the advance width of the specified string.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">bytesWidth</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">FontMetrics</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public int bytesWidth(byte <I>data</I>[],
int <I>off</I>, int <I>len</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">bytesWidth()</FONT></TT> method returns
the width of a specified array of bytes.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">data</FONT></I></TT> is an array of bytes to be checked.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">off</FONT></I></TT> is an integer value representing the offset into the array where the string starts.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">len</FONT></I></TT> is the number of bytes to be measured.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT>
</TD><TD >An integer value representing the advance width of the specified string.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getWidths</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">FontMetrics</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public int[] getWidths()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">getWidths()</FONT></TT> method gets
the advance widths of the first 256 characters of the font.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >An integer array containing the advance widths of the first 256 characters of the font.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">toString</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">FontMetrics</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public String toString()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">toString()</FONT></TT> method returns
a string representation of the <TT><FONT FACE="Courier">FontMetrics</FONT></TT>
class.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >A <TT><FONT FACE="Courier">String</FONT></TT> value containing the <TT><FONT FACE="Courier">FontMetrics</FONT></TT>' name, font, ascent, descent, and height.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=8%><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></TD><TD WIDTH=499><H2><A NAME="Frame"><FONT SIZE=5 COLOR=#FF0000>Frame</FONT></A></H2>

</TD><TD WIDTH=8%><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Extends.gif"></FONT></TT>


</TD><TD >
<FONT FACE="Courier">Window</FONT>


</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%>
<IMG SRC="http://docs.rinet.ru/JavDev/Implem.gif">

</TD><TD >
<TT><FONT FACE="Courier">MenuContainer</FONT></TT>


</TD></TR>
</TABLE></CENTER>
<P>
<P>
The class hierarchy for the <TT><FONT FACE="Courier">Frame</FONT></TT>
class derives from the class <TT><FONT FACE="Courier">java.awt.Window</FONT></TT>.
(See Listing 28.19.) A <TT><FONT FACE="Courier">Frame</FONT></TT>
class represents a basic window. <TT><FONT FACE="Courier">Frame</FONT></TT>'s
overall derivation is shown in Figure 28.1.
<HR>
<BLOCKQUOTE>
<B>Listing 28.19. Public members of </B><TT><B><FONT FACE="Courier">java.awt.Frame</FONT></B></TT><B>.
<BR>
</B>
</BLOCKQUOTE>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public class Frame extends Window implements
MenuContainer {<BR>
&nbsp;&nbsp;public static final int&nbsp;&nbsp;&nbsp;&nbsp; DEFAULT_CURSOR
<BR>
&nbsp;&nbsp;public static final int&nbsp;&nbsp;&nbsp;&nbsp; CROSSHAIR_CURSOR
<BR>
&nbsp;&nbsp;public static final int&nbsp;&nbsp;&nbsp;&nbsp; TEXT_CURSOR
<BR>
&nbsp;&nbsp;public static final int&nbsp;&nbsp;&nbsp;&nbsp; WAIT_CURSOR
<BR>
&nbsp;&nbsp;public static final int&nbsp;&nbsp;&nbsp;&nbsp; SW_RESIZE_CURSOR
<BR>
&nbsp;&nbsp;public static final int&nbsp;&nbsp;&nbsp;&nbsp; SE_RESIZE_CURSOR
<BR>
&nbsp;&nbsp;public static final int&nbsp;&nbsp;&nbsp;&nbsp; NW_RESIZE_CURSOR
<BR>
&nbsp;&nbsp;public static final int&nbsp;&nbsp;&nbsp;&nbsp; NE_RESIZE_CURSOR
<BR>
&nbsp;&nbsp;public static final int&nbsp;&nbsp;&nbsp;&nbsp; N_RESIZE_CURSOR
<BR>
&nbsp;&nbsp;public static final int&nbsp;&nbsp;&nbsp;&nbsp; S_RESIZE_CURSOR
<BR>
&nbsp;&nbsp;public static final int&nbsp;&nbsp;&nbsp;&nbsp; W_RESIZE_CURSOR
<BR>
&nbsp;&nbsp;public static final int&nbsp;&nbsp;&nbsp;&nbsp; E_RESIZE_CURSOR
<BR>
&nbsp;&nbsp;public static final int&nbsp;&nbsp;&nbsp;&nbsp; HAND_CURSOR
<BR>
&nbsp;&nbsp;public static final int&nbsp;&nbsp;&nbsp;&nbsp; MOVE_CURSOR
<BR>
&nbsp;&nbsp;public Frame()<BR>
&nbsp;&nbsp;public Frame(String <I>title</I>)<BR>
&nbsp;&nbsp;public synchronized void addNotify()<BR>
&nbsp;&nbsp;public String getTitle()<BR>
&nbsp;&nbsp;public void setTitle(String <I>title</I>)<BR>
&nbsp;&nbsp;public Image getIconImage()<BR>
&nbsp;&nbsp;public void setIconImage(Image <I>image</I>)<BR>
&nbsp;&nbsp;public MenuBar getMenuBar()<BR>
&nbsp;&nbsp;public synchronized void setMenuBar(MenuBar <I>mb</I>)
<BR>
&nbsp;&nbsp;public synchronized void remove(MenuComponent <I>m</I>)
<BR>
&nbsp;&nbsp;public synchronized void dispose()<BR>
&nbsp;&nbsp;public boolean isResizable()<BR>
&nbsp;&nbsp;public void setResizable(boolean <I>resizable</I>)
<BR>
&nbsp;&nbsp;public void setCursor(int <I>cursorType</I>)<BR>
&nbsp;&nbsp;public int getCursorType()<BR>
}</FONT></TT>
</BLOCKQUOTE>
<HR>

<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=589><B>Public Static Values</B></TD></TR>
</TABLE></CENTER>
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DEFAULT_CURSOR</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">DEFAULT_CURSOR</FONT></TT> static
value represents the default cursor.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CROSSHAIR_CURSOR</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">CROSSHAIR_CURSOR</FONT></TT> static
value represents the crosshair cursor.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TEXT_CURSOR</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">TEXT_CURSOR</FONT></TT> static value
represents the text cursor.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WAIT_CURSOR</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">WAIT_CURSOR</FONT></TT> static value
represents the wait cursor.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SW_RESIZE_CURSOR</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">SW_RESIZE_CURSOR</FONT></TT> static
value represents the southwest resize cursor.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SE_RESIZE_CURSOR</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">SE_RESIZE_CURSOR</FONT></TT> static
value represents the southeast resize cursor.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NW_RESIZE_CURSOR</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">NW_RESIZE_CURSOR</FONT></TT> static
value represents the northwest resize cursor.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NE_RESIZE_CURSOR</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">NE_RESIZE_CURSOR</FONT></TT> static
value represents the northeast resize cursor.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;N_RESIZE_CURSOR</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">N_RESIZE_CURSOR</FONT></TT> static
value represents the north resize cursor.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;S_RESIZE_CURSOR</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">S_RESIZE_CURSOR</FONT></TT> static
value represents the south resize cursor.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;W_RESIZE_CURSOR</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">W_RESIZE_CURSOR</FONT></TT> static
value represents the west resize cursor.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;E_RESIZE_CURSOR</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">E_RESIZE_CURSOR</FONT></TT> static
value represents the east resize cursor.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;HAND_CURSOR</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">HAND_CURSOR</FONT></TT> static value
represents the hand cursor.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MOVE_CURSOR</FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">MOVE_CURSOR</FONT></TT> static value
represents the move cursor.<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%>
<H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/const.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">Frame</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Frame</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public Frame()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">Frame()</FONT></TT> constructor constructs
a default frame that is invisible and that uses the <TT><FONT FACE="Courier">BorderLayout</FONT></TT>
layout manager.<P><CENTER><TABLE  BORDER=1  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%>
<H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/const.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">Frame</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Frame</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public Frame(String <I>title</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
This <TT><FONT FACE="Courier">Frame()</FONT></TT> constructor
constructs a default frame using the specified title that is invisible
and that uses the <TT><FONT FACE="Courier">BorderLayout</FONT></TT>
layout manager.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">title</FONT></I></TT> is a <TT><FONT FACE="Courier">String</FONT></TT> value containing the <TT><FONT FACE="Courier">Frame</FONT></TT>'s title string.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">addNotify</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Frame</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public synchronized void addNotify()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">addNotify()</FONT></TT> method creates
a peer interface for the <TT><FONT FACE="Courier">Frame</FONT></TT>.
Peer interfaces allow you to change the user interface of the
frame without changing its functionality.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >none</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getTitle</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Frame</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public String getTitle()</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">getTitle()</FONT></TT> returns the frame's
title.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >A <TT><FONT FACE="Courier">String</FONT></TT> value representing the title of the <TT><FONT FACE="Courier">Frame</FONT></TT>.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">setTitle</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Frame</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void setTitle(String <I>title</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">setTitle()</FONT></TT> sets the frame's
title.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">title</FONT></I></TT> is a <TT><FONT FACE="Courier">String</FONT></TT> value representing the title of the <TT><FONT FACE="Courier">Frame</FONT></TT>.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getIconImage</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Frame</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public Image getIconImage()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">getIconImage()</FONT></TT> method
returns an <TT><FONT FACE="Courier">Image</FONT></TT> representing
the iconized image of the <TT><FONT FACE="Courier">Frame</FONT></TT>.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >An <TT><FONT FACE="Courier">Image</FONT></TT> class representing the iconized image of the frame.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">setIconImage</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Frame</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void setIconImage(Image <I>image</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">setIconImage()</FONT></TT> sets the image
that is used when the frame is iconized.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">image</FONT></I></TT> is an <TT><FONT FACE="Courier">Image</FONT></TT> class that is displayed when the frame is iconized.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getMenuBar</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Frame</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public MenuBar getMenuBar()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">getMenuBar()</FONT></TT> method returns
the <TT><FONT FACE="Courier">MenuBar</FONT></TT> object that is
contained within this frame.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >A <TT><FONT FACE="Courier">MenuBar</FONT></TT> class that is displayed within this frame.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">setMenuBar</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Frame</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public synchronized void setMenuBar(MenuBar
<I>mb</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
<TT><FONT FACE="Courier">setMenuBar()</FONT></TT> sets the <TT><FONT FACE="Courier">MenuBar</FONT></TT>
class to be displayed within the <TT><FONT FACE="Courier">Frame</FONT></TT>.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP>TR><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">mb</FONT></I></TT> is a <TT><FONT FACE="Courier">MenuBar</FONT></TT> class to be used for the frame's menu bar.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">remove</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Frame</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public synchronized void remove(MenuComponent
<I>m</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">remove()</FONT></TT> method removes
the specified <TT><FONT FACE="Courier">MenuComponent</FONT></TT>
from the frame.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">m</FONT></I></TT> is a <TT><FONT FACE="Courier">MenuComponent</FONT></TT> object that is to be removed from the frame.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">dispose</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Frame</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public synchronized void dispose()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">dispose()</FONT></TT> method disposes
of the <TT><FONT FACE="Courier">Frame</FONT></TT>. This method
first disposes of the frame's menu bar and then disposes of the
frame itself.<P><CENTER><TABLE BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%>
<H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">isResizable</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Frame</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public boolean isResizable()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">isResizable()</FONT></TT> method
returns the frame's resizable state.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >A Boolean value that is true if the frame can be resized and false if it can't.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%></TD><TD ><H4><TT><FONT FACE="Courier">setResizable</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Frame</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void setResizable(boolean <I>resizable</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">setResizable()</FONT></TT> method
sets the frame's resizable state.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD >A Boolean value that is true if the frame can be resized and false if it can't.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">setCursor</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Frame</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void setCursor(int <I>cursorType</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">setCursor()</FONT></TT> method sets
the cursor to be displayed within the frame.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">cursorType</FONT></I></TT> is an integer value representing the cursor to be displayed. This can be any of the frame's static values such as <TT><FONT FACE="Courier">WAIT_CURSOR</FONT></TT>, <TT><FONT 
FACE="Courier">MOVE_CURSOR</FONT></TT>, and so on.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getCursorType</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Frame</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public int getCursorType()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">getCursorType()</FONT></TT> method
returns the frame's current cursor type.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >An integer value representing the current cursor type for the frame.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=8%><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></TD><TD WIDTH=499><H2><A NAME="Graphics"><FONT SIZE=5 COLOR=#FF0000>Graphics</FONT></A>
</H2>

</TD><TD WIDTH=8%><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Extends.gif"></FONT></TT>


</TD><TD >
<FONT FACE="Courier">Object</FONT>

</TD></TR>
</TABLE></CENTER>
<P>
<P>
The class hierarchy for the <TT><FONT FACE="Courier">Graphics</FONT></TT>
class derives from the class <TT><FONT FACE="Courier">java.lang.Object</FONT></TT>.
(See Listing 28.20.) The <TT><FONT FACE="Courier">Graphics</FONT></TT>
class represents the base class for all types of graphics contexts.
<TT><FONT FACE="Courier">Graphics</FONT></TT>'s overall derivation
is shown in Figure 28.1.
<HR>
<BLOCKQUOTE>
<B>Listing 28.20. Public members of </B><TT><B><FONT FACE="Courier">java.awt.Graphics</FONT></B></TT><B>.
<BR>
</B>
</BLOCKQUOTE>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public abstract class Graphics {<BR>
&nbsp;&nbsp;public abstract Graphics create()<BR>
&nbsp;&nbsp;public Graphics create(int <I>x</I>, int <I>y</I>,
int <I>width</I>, int <I>height</I>)<BR>
&nbsp;&nbsp;public abstract void translate(int <I>x</I>, int <I>y</I>)
<BR>
&nbsp;&nbsp;public abstract Color getColor()<BR>
&nbsp;&nbsp;public abstract void setColor(Color <I>c</I>)<BR>
&nbsp;&nbsp;public abstract void setPaintMode()<BR>
&nbsp;&nbsp;public abstract void setXORMode(Color <I>c1</I>)<BR>
&nbsp;&nbsp;public abstract Font getFont()<BR>
&nbsp;&nbsp;public abstract void setFont(Font <I>font</I>)<BR>
&nbsp;&nbsp;public FontMetrics getFontMetrics()<BR>
&nbsp;&nbsp;public abstract FontMetrics getFontMetrics(Font <I>f</I>)
<BR>
&nbsp;&nbsp;public abstract Rectangle getClipRect()<BR>
&nbsp;&nbsp;public abstract void clipRect(int <I>x</I>, int <I>y</I>,
int <I>width</I>, int <I>height</I>)<BR>
&nbsp;&nbsp;public abstract void copyArea(int <I>x</I>, int <I>y</I>,
int <I>width</I>, int <I>height</I>, int <I>dx</I>, <BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int <I>dy</I>)
<BR>
public abstract void drawLine(int <I>x1</I>, int <I>y1</I>, int
<I>x2</I>, int <I>y2</I>)<BR>
&nbsp;&nbsp;public abstract void fillRect(int <I>x</I>, int <I>y</I>,
int <I>width</I>, int <I>height</I>)<BR>
&nbsp;&nbsp;public void drawRect(int <I>x</I>, int <I>y</I>, int
<I>width</I>, int <I>height</I>)<BR>
&nbsp;&nbsp;public abstract void clearRect(int <I>x</I>, int <I>y</I>,
int <I>width</I>, int <I>height</I>)<BR>
&nbsp;&nbsp;public abstract void drawRoundRect(int <I>x</I>, int
<I>y</I>, int <I>width</I>, int <I>height</I>, <BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int <I>arcWidth</I>,
int <I>arcHeight</I>)<BR>
&nbsp;&nbsp;public abstract void fillRoundRect(int <I>x</I>, int
<I>y</I>, int <I>width</I>, int <I>height</I>, <BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int <I>arcWidth</I>,
int <I>arcHeight</I>)<BR>
&nbsp;&nbsp;public void draw3DRect(int <I>x</I>, int <I>y</I>,
int <I>width</I>, int <I>height</I>, boolean <I>raised</I>)<BR>
&nbsp;&nbsp;public void fill3DRect(int <I>x</I>, int <I>y</I>,
int <I>width</I>, int <I>height</I>, boolean <I>raised</I>)<BR>
&nbsp;&nbsp;public abstract void drawOval(int <I>x</I>, int <I>y</I>,
int <I>width</I>, int <I>height</I>)<BR>
&nbsp;&nbsp;public abstract void fillOval(int <I>x</I>, int <I>y</I>,
int <I>width</I>, int <I>height</I>)<BR>
&nbsp;&nbsp;public abstract void drawArc(int <I>x</I>, int <I>y</I>,
int <I>width</I>, int <I>height</I>, <BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int <I>startAngle</I>,
int <I>arcAngle</I>)<BR>
&nbsp;&nbsp;public abstract void fillArc(int <I>x</I>, int <I>y</I>,
int <I>width</I>, int <I>height</I>, <BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int <I>startAngle</I>, int
<I>arcAngle</I>)<BR>
&nbsp;&nbsp;public abstract void drawPolygon(int <I>xPoints</I>[],
int <I>yPoints</I>[], int <I>nPoints</I>)<BR>
&nbsp;&nbsp;public void drawPolygon(Polygon <I>p</I>)<BR>
&nbsp;&nbsp;public abstract void fillPolygon(int <I>xPoints</I>[],
int <I>yPoints</I>[], int <I>nPoints</I>)<BR>
&nbsp;&nbsp;public void fillPolygon(Polygon <I>p</I>)<BR>
&nbsp;&nbsp;public abstract void drawString(String <I>str</I>,
int <I>x</I>, int <I>y</I>)<BR>
&nbsp;&nbsp;public void drawChars(char <I>data</I>[], int <I>offset</I>,
int <I>length</I>, int <I>x</I>, int <I>y</I>)<BR>
&nbsp;&nbsp;public void drawBytes(byte <I>data</I>[], int <I>offset</I>,
int <I>length</I>, int <I>x</I>, int <I>y</I>)<BR>
&nbsp;&nbsp;public abstract boolean drawImage(Image <I>img</I>,
int <I>x</I>, int <I>y</I>,<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ImageObserver
<I>observer</I>)<BR>
&nbsp;&nbsp;public abstract boolean drawImage(Image <I>img</I>,
int <I>x</I>, int <I>y</I>,<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int
<I>width</I>, int <I>height</I>,<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ImageObserver
<I>observer</I>)<BR>
&nbsp;&nbsp;public abstract boolean drawImage(Image <I>img</I>,
int <I>x</I>, int <I>y</I>,<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Color
<I>bgcolor</I>,<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ImageObserver
<I>observer</I>)<BR>
&nbsp;&nbsp;public abstract boolean drawImage(Image <I>img</I>,
int <I>x</I>, int <I>y</I>,<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int
<I>width</I>, int <I>height</I>,<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Color
<I>bgcolor</I>,<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ImageObserver
<I>observer</I>)<BR>
&nbsp;&nbsp;public abstract void dispose()<BR>
&nbsp;&nbsp;public void finalize()<BR>
&nbsp;&nbsp;public String toString()<BR>
}</FONT></TT>
</BLOCKQUOTE>
<HR>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">create</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Graphics</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public abstract Graphics create()</FONT></TT>
</BLOCKQUOTE>
<P>
This abstract function creates a new graphics object.<P><CENTER><TABLE  BORDER=1  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%>
<H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">Create</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Graphics</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public Graphics create(int <I>x</I>,
int <I>y</I>, int <I>width</I>, int <I>height</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">create()</FONT></TT> method creates
a new <TT><FONT FACE="Courier">Graphics</FONT></TT> object using
the specified parameters.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">X</FONT></I></TT> is the x coordinate of the graphics context.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">Y</FONT></I></TT> is the y coordinate of the graphics context.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">Width</FONT></I></TT> is the width of the graphics context.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">height</FONT></I></TT> is the height of the graphics context.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT>
</TD><TD >A <TT><FONT FACE="Courier">Graphics</FONT></TT> class corresponding to the <TT><FONT FACE="Courier">create()</FONT></TT> method's specifications.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">translate</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Graphics</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public abstract void translate(int <I>x</I>,
int <I>y</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">translate()</FONT></TT> method translates
the <TT><FONT FACE="Courier">Graphics</FONT></TT> object to the
new x and y origin coordinates.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">x</FONT></I></TT> is the new x origin coordinate.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">y</FONT></I></TT> is the new y origin coordinate.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getColor</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Graphics</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public abstract Color getColor()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">getColor()</FONT></TT> method returns
the current color.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >A <TT><FONT FACE="Courier">Color</FONT></TT> object representing the current color used for drawing operations. For more information on the <TT><FONT FACE="Courier">Color</FONT></TT> class, see the documentation earlier in this chapter.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">setColor</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Graphics</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public abstract void setColor(Color <I>c</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">setColor()</FONT></TT> method sets
the current color.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">c</FONT></I></TT> is a <TT><FONT FACE="Courier">Color</FONT></TT> object to be used for graphics drawing operations. For more information on the <TT><FONT FACE="Courier">Color</FONT></TT> class, see the documentation 
earlier in this chapter.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">setPaintMode</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Graphics</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public abstract void setPaintMode()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">setPaintMode()</FONT></TT> method
sets the paint mode to overwrite the destination with the current
color.<P><CENTER><TABLE BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%>
<H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">setXORMode</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Graphics</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public abstract void setXORMode(Color
<I>c1</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">setXORMode()</FONT></TT> method sets
the paint mode to <TT><FONT FACE="Courier">XOR</FONT></TT> the
current colors with the specified color. This means that when
redrawing over an existing area, colors that match the current
color are changed to the specified color <TT><I><FONT FACE="Courier">c1</FONT></I></TT>
and vice versa.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">c1</FONT></I></TT> is the <TT><FONT FACE="Courier">Color</FONT></TT> object specified to be <TT><FONT FACE="Courier">XOR</FONT></TT>ed with the current color. For more information on the <TT><FONT 
FACE="Courier">Color</FONT></TT> class, see the documentation earlier in this chapter.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getFont</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Graphics</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public abstract Font getFont()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">getFont()</FONT></TT> method returns
the current font used for the graphics context.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >A <TT><FONT FACE="Courier">Font</FONT></TT> object representing the graphics context's current <TT><FONT FACE="Courier">Font</FONT></TT>. For more information on the <TT><FONT FACE="Courier">Font</FONT></TT> class, see the documentation earlier in 
this chapter.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">setFont</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Graphics</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public abstract void setFont(Font <I>font</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">setFont()</FONT></TT> method sets
the graphics context's font.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">font</FONT></I></TT> is a <TT><FONT FACE="Courier">Font</FONT></TT> object that is used as the current font. For more information on the <TT><FONT FACE="Courier">Font</FONT></TT> class, see the documentation earlier in this 
chapter.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getFontMetrics</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Graphics</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public FontMetrics getFontMetrics()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">getFontMetrics()</FONT></TT> method
returns the font metrics for the current font.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >A <TT><FONT FACE="Courier">FontMetrics</FONT></TT> object representing the font metrics for the current font. For more information on the <TT><FONT FACE="Courier">FontMetrics</FONT></TT> class, see the documentation earlier in this chapter.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getFontMetrics</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Graphics</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public abstract FontMetrics getFontMetrics(Font
<I>f</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
This <TT><FONT FACE="Courier">getFontMetrics()</FONT></TT> method
returns the font metrics for the specified font.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >A <TT><FONT FACE="Courier">FontMetrics</FONT></TT> object representing the font metrics for the specified font. For more information on the <TT><FONT FACE="Courier">FontMetrics</FONT></TT> class, see the documentation earlier in this chapter.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getClipRect</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Graphics</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public abstract Rectangle getClipRect()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">getClipRect()</FONT></TT> method
returns the current clipping rectangle for the <TT><FONT FACE="Courier">Graphics</FONT></TT>
class.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >A <TT><FONT FACE="Courier">Rectangle</FONT></TT> object representing the current clipping rectangle. For more information on the <TT><FONT FACE="Courier">Rectangle</FONT></TT> class, see the documentation later in this chapter.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">clipRect</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Graphics</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public abstract void clipRect(int <I>x</I>,
int <I>y</I>, int <I>width</I>, int <I>height</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">clipRect()</FONT></TT> method sets
the current clipping rectangle for the <TT><FONT FACE="Courier">Graphics</FONT></TT>
class.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">x</FONT></I></TT> is the x coordinate of the clipping rectangle.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">y</FONT></I></TT> is the y coordinate of the clipping rectangle.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">width</FONT></I></TT> is the width of the clipping rectangle.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">height</FONT></I></TT> is the height of the clipping rectangle.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">copyArea</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Graphics</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public abstract void copyArea(int <I>x</I>,
int <I>y</I>, int <I>width</I>, int <I>height</I>, int <I>dx</I>,
int <I>dy</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">copyArea()</FONT></TT> method copies
a specified section of the screen to another location.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">x</FONT></I></TT> is the x coordinate of the region to be copied.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">y</FONT></I></TT> is the y coordinate of the region to be copied.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">width</FONT></I></TT> is the width of the region to be copied.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">height</FONT></I></TT> is the height of the region to be copied.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">dx</FONT></I></TT> is the horizontal distance of the region to be copied to.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">dy</FONT></I></TT> is the vertical distance of the region to be copied to.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">drawLine</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Graphics</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public abstract void drawLine(int <I>x1</I>,
int <I>y1</I>, int <I>x2</I>, int <I>y2</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">drawLine()</FONT></TT> method draws
a line on the graphics context from one point to another point
specified by the input parameters.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">x1</FONT></I></TT> is the x coordinate of the line's starting point.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">y1</FONT></I></TT> is the y coordinate of the line's starting point.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">x2</FONT></I></TT> is the x coordinate of the line's ending point.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">y2</FONT></I></TT> is the y coordinate of the line's ending point.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">fillRect</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Graphics</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public abstract void fillRect(int <I>x</I>,
int <I>y</I>, int <I>width</I>, int <I>height</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">fillRect()</FONT></TT> method fills
the specified rectangular region with the current <TT><FONT FACE="Courier">Color</FONT></TT>.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">x</FONT></I></TT> is the x coordinate of the rectangle to be filled.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">y</FONT></I></TT> is the y coordinate of the rectangle to be filled.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">width</FONT></I></TT> is the width of the rectangle to be filled.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">height</FONT></I></TT> is the height of the rectangle to be filled.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">drawRect</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Graphics</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void drawRect(int <I>x</I>, int
<I>y</I>, int <I>width</I>, int <I>height</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">drawRect()</FONT></TT> method draws
the outline of a rectangle using the current color and the specified
dimensions.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">x</FONT></I></TT> is the x coordinate of the rectangle to be drawn.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">y</FONT></I></TT> is the y coordinate of the rectangle to be drawn.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">width</FONT></I></TT> is the width of the rectangle to be drawn.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">height</FONT></I></TT> is the height of the rectangle to be drawn.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">clearRect</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Graphics</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public abstract void clearRect(int <I>x</I>,
int <I>y</I>, int <I>width</I>, int <I>height</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">clearRect()</FONT></TT> method clears
a rectangle by filling it with the current background color of
the current drawing surface.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">x</FONT></I></TT> is the x coordinate of the rectangle to be cleared.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">y</FONT></I></TT> is the y coordinate of the rectangle to be cleared.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">width</FONT></I></TT> is the width of the rectangle to be cleared.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">height</FONT></I></TT> is the height of the rectangle to be cleared.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">drawRoundRect</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Graphics</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public abstract void drawRoundRect(int
<I>x</I>, int <I>y</I>, int <I>width</I>, int <I>height</I>, 
<BR>
</FONT></TT><FONT FACE="ZapfDingbats">&Acirc;</FONT><TT><FONT FACE="Courier">
int <I>arcWidth</I>, int <I>arcHeight</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">drawRoundRect()</FONT></TT> method
draws the outline of a rectangle with rounded edges using the
current color and the specified coordinates.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">x</FONT></I></TT> is the x coordinate of the rectangle to be drawn.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">y</FONT></I></TT> is the y coordinate of the rectangle to be drawn
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">width</FONT></I></TT> is the width of the rectangle to be drawn.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">height</FONT></I></TT> is the height of the rectangle to be drawn.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">arcWidth</FONT></I></TT> is the horizontal diameter of the arc at the four corners.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">arcHeight</FONT></I></TT> is the vertical diameter of the arc at the four corners.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">fillRoundRect</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Graphics</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public abstract void fillRoundRect(int
<I>x</I>, int <I>y</I>, int <I>width</I>, int <I>height</I>, 
<BR>
</FONT></TT><FONT FACE="ZapfDingbats">&Acirc;</FONT><TT><FONT FACE="Courier">
int <I>arcWidth</I>, int <I>arcHeight</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">fillRoundRect()</FONT></TT> method
fills a rectangle with rounded edges using the current color and
the specified coordinates.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">x</FONT></I></TT> is the x coordinate of the rectangle to be filled.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">y</FONT></I></TT> is the y coordinate of the rectangle to be filled.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">width</FONT></I></TT> is the width of the rectangle to be filled.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">height</FONT></I></TT> is the height of the rectangle to be filled.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">arcWidth</FONT></I></TT> is the horizontal diameter of the arc at the four corners.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">arcHeight</FONT></I></TT> is the vertical diameter of the arc at the four corners.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">draw3DRect</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Graphics</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void draw3DRect(int <I>x</I>,
int <I>y</I>, int <I>width</I>, int <I>height</I>, boolean <I>raised</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">draw3DRect()</FONT></TT> method draws
a highlighted 3D rectangle at a default viewing angle.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">x</FONT></I></TT> is the x coordinate of the rectangle to be drawn.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">y</FONT></I></TT> is the y coordinate of the rectangle to be drawn.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">width</FONT></I></TT> is the width of the rectangle to be drawn.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">height</FONT></I></TT> is the height of the rectangle to be drawn.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">raised</FONT></I></TT> is a Boolean value determining whether the rectangle is raised or not.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">fill3DRect</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Graphics</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void fill3DRect(int <I>x</I>,
int <I>y</I>, int <I>width</I>, int <I>height</I>, boolean <I>raised</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">fill3DRect()</FONT></TT> method fills
a highlighted 3D rectangle using the current color and specified
coordinates at a default viewing angle.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">x</FONT></I></TT> is the x coordinate of the rectangle to be filled.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">y</FONT></I></TT> is the y coordinate of the rectangle to be filled.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">width</FONT></I></TT> is the width of the rectangle to be filled.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">height</FONT></I></TT> is the height of the rectangle to be filled.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">raised</FONT></I></TT> is a Boolean value determining whether the rectangle is raised or not.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">drawOval</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Graphics</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public abstract void drawOval(int <I>x</I>,
int <I>y</I>, int <I>width</I>, int <I>height</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">drawOval()</FONT></TT> method draws
the outline of an oval shape using the current color and the specified
coordinates. The oval is drawn inside the rectangle represented
by the input coordinates.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">x</FONT></I></TT> is the x coordinate of the rectangle to draw the oval within.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">y</FONT></I></TT> is the y coordinate of the rectangle to draw the oval within.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">width</FONT></I></TT> is the width of the rectangle to draw the oval within.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">height</FONT></I></TT> is the height of the rectangle to draw the oval within.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">fillOval</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Graphics</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public abstract void fillOval(int <I>x</I>,
int <I>y</I>, int <I>width</I>, int <I>height</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">fillOval()</FONT></TT> method fills
an oval using the current color and the specified coordinates.
The oval is drawn inside the rectangle represented by the input
coordinates.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">x</FONT></I></TT> is the x coordinate of the rectangle to draw the oval within.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">y</FONT></I></TT> is the y coordinate of the rectangle to draw the oval within.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">width</FONT></I></TT> is the width of the rectangle to draw the oval within.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">height</FONT></I></TT> is the height of the rectangle to draw the oval within.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">drawArc</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Graphics</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public abstract void drawArc(int <I>x</I>,
int <I>y</I>, int <I>width</I>, int <I>height</I>, <BR>
</FONT></TT><FONT FACE="ZapfDingbats">&Acirc;</FONT><TT><FONT FACE="Courier">
int <I>startAngle</I>, int <I>arcAngle</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">drawArc()</FONT></TT> method draws
an arc outline using the current color that is bounded by the
specified input coordinates. Note that 0 degrees represents the
3 o'clock position and that positive angles are measured in a
counterclockwise direction.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">x</FONT></I></TT> is the x coordinate of the rectangle to draw the arc within.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">y</FONT></I></TT> is the y coordinate of the rectangle to draw the arc within.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">width</FONT></I></TT> is the width of the rectangle to draw the arc within.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">height</FONT></I></TT> is the height of the rectangle to draw the arc within.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">startAngle</FONT></I></TT> is the starting angle of the arc to be drawn.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">arcAngle</FONT></I></TT> is the angle of the arc relative to the start angle.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">fillArc</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Graphics</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public abstract void fillArc(int <I>x</I>,
int <I>y</I>, int <I>width</I>, int <I>height</I>, <BR>
</FONT></TT><FONT FACE="ZapfDingbats">&Acirc;</FONT><TT><FONT FACE="Courier">
int <I>startAngle</I>, int <I>arcAngle</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">fillArc()</FONT></TT> method fills
an arc using the current color that is bounded by the specified
input coordinates. Note that 0 degrees represents the 3 o'clock
position and that positive angles are measured in a counterclockwise
direction.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">x</FONT></I></TT> is the x coordinate of the rectangle to draw the arc within.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">y</FONT></I></TT> is the y coordinate of the rectangle to draw the arc within.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">width</FONT></I></TT> is the width of the rectangle to draw the arc within.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">height</FONT></I></TT> is the height of the rectangle to draw the arc within.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">startAngle</FONT></I></TT> is the starting angle of the arc to be drawn.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">arcAngle</FONT></I></TT> is the angle of the arc relative to the start angle.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">drawPolygon</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Graphics</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public abstract void drawPolygon(int
<I>xPoints</I>[], int <I>yPoints</I>[], int <I>nPoints</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">drawPolygon()</FONT></TT> method
draws a polygon using the current color and the specified coordinates.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">xPoints</FONT></I></TT> is an array of integers containing the starting x coordinates for each edge of the polygon.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">yPoints</FONT></I></TT> is an array of integers containing the starting y coordinates for each edge of the polygon.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">nPoints</FONT></I></TT> is an integer value representing the number of edges of the polygon.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">drawPolygon</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Graphics</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void drawPolygon(Polygon <I>p</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
This <TT><FONT FACE="Courier">drawPolygon()</FONT></TT> method
draws a polygon using the specified <TT><FONT FACE="Courier">Polygon</FONT></TT>
class.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">p</FONT></I></TT> is a <TT><FONT FACE="Courier">Polygon</FONT></TT> class containing the coordinates for the polygon to be drawn. For more information on the <TT><FONT FACE="Courier">Polygon</FONT></TT> class, see the 
documentation later in this chapter.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">fillPolygon</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Graphics</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public abstract void fillPolygon(int
<I>xPoints</I>[], int <I>yPoints</I>[], int <I>nPoints</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">fillPolygon()</FONT></TT> method
fills a polygon using the current color and the specified coordinates.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">xPoints</FONT></I></TT> is an array of integers containing the starting x coordinates for each edge of the polygon.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">yPoints</FONT></I></TT> is an array of integers containing the starting y coordinates for each edge of the polygon.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">nPoints</FONT></I></TT> is an integer value representing the number of edges of the polygon.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">fillPolygon</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Graphics</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void fillPolygon(Polygon <I>p</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
This <TT><FONT FACE="Courier">fillPolygon()</FONT></TT> method
fills a polygon using the specified <TT><FONT FACE="Courier">Polygon</FONT></TT>
class and the current color.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">p</FONT></I></TT> is a <TT><FONT FACE="Courier">Polygon</FONT></TT> class containing the coordinates for the polygon to be drawn. For more information on the <TT><FONT FACE="Courier">Polygon</FONT></TT> class, see the 
documentation later in this chapter.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">drawString</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Graphics</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public abstract void drawString(String
<I>str</I>, int <I>x</I>, int <I>y</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">drawString()</FONT></TT> method draws
a string using the current font at the specified coordinates.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">str</FONT></I></TT> is the string to be displayed.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">x</FONT></I></TT> is the x coordinate of where the string is drawn.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">y</FONT></I></TT> is the y coordinate of where the string is drawn.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">drawChars</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Graphics</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void drawChars(char <I>data</I>[],
int <I>offset</I>, int <I>length</I>, int <I>x</I>, int <I>y</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">drawChars()</FONT></TT> method draws
a string using the current font at the specified coordinates.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">data</FONT></I></TT> is an array of characters.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">offset</FONT></I></TT> is the offset within the array of characters where the displayed string starts.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">length</FONT></I></TT> is the number of characters to draw.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">x</FONT></I></TT> is the x coordinate of where the string is drawn.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">y</FONT></I></TT> is the y coordinate of where the string is drawn.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">drawBytes</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Graphics</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void drawBytes(byte <I>data</I>[],
int <I>offset</I>, int <I>length</I>, int <I>x</I>, int <I>y</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">drawChars()</FONT></TT> method draws
a string using the current font at the specified coordinates.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">data</FONT></I></TT> is an array of bytes.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">offset</FONT></I></TT> is the offset within the array of bytes where the displayed string starts.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">length</FONT></I></TT> is the number of bytes to draw.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">x</FONT></I></TT> is the x coordinate of where the string is drawn.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">y</FONT></I></TT> is the y coordinate of where the string is drawn.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">drawImage</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Graphics</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public abstract boolean drawImage(Image
<I>img</I>, int <I>x</I>, int <I>y</I>, <BR>
</FONT></TT><FONT FACE="ZapfDingbats">&Acirc;</FONT><TT><FONT FACE="Courier">
ImageObserver <I>observer</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">drawImage()</FONT></TT> method draws
an image at a specified location.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">img</FONT></I></TT> is an <TT><FONT FACE="Courier">Image</FONT></TT> class to be drawn using the graphics context.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">x</FONT></I></TT> is the x coordinate of where the image is drawn.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">y</FONT></I></TT> is the y coordinate of where the image is drawn.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">observer</FONT></I></TT> is an <TT><FONT FACE="Courier">ImageObserver</FONT></TT> interface that notifies when the drawing is done.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT>
</TD><TD >A Boolean value indicating the success or failure of the draw operation.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">drawImage</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Graphics</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public abstract boolean drawImage(Image
<I>img</I>, int <I>x</I>, int <I>y</I>, int <I>width</I>, <BR>
</FONT></TT><FONT FACE="ZapfDingbats">&Acirc;</FONT><TT><FONT FACE="Courier">
int <I>height</I>, ImageObserver <I>observer</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
This <TT><FONT FACE="Courier">drawImage()</FONT></TT> method draws
an image at a specified location within the specified bounding
rectangle.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">img</FONT></I></TT> is an <TT><FONT FACE="Courier">Image</FONT></TT> class to be drawn using the graphics context.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">x</FONT></I></TT> is the x coordinate of where the image is drawn.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">y</FONT></I></TT> is the y coordinate of where the image is drawn.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">width</FONT></I></TT> is the width of the rectangle to draw the image within.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">height</FONT></I></TT> is the height of the rectangle to draw the image within.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><FONT FACE="Courier">observer</FONT> is an <TT><FONT FACE="Courier">ImageObserver</FONT></TT> interface that notifies when the drawing is done.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT>
</TD><TD >A Boolean value indicating the success or failure of the draw operation.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">drawImage</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Graphics</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public abstract boolean drawImage(Image
<I>img</I>, int <I>x</I>, int <I>y</I>, Color <I>bgcolor</I>,
<BR>
</FONT></TT><FONT FACE="ZapfDingbats">&Acirc;</FONT><TT><FONT FACE="Courier">
ImageObserver <I>observer</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
This <TT><FONT FACE="Courier">drawImage()</FONT></TT> method draws
an image at a specified location using the specified background
color.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">img</FONT></I></TT> is an <TT><FONT FACE="Courier">Image</FONT></TT> class to be drawn using the graphics context.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">x</FONT></I></TT> is the x coordinate of where the image is drawn.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">y</FONT></I></TT> is the y coordinate of where the image is drawn.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">bgcolor</FONT></I></TT> is the background color to be used.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">observer</FONT></I></TT> is an <TT><FONT FACE="Courier">ImageObserver</FONT></TT> interface that notifies when the drawing is done.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT>
</TD><TD >A Boolean value indicating the success or failure of the draw operation.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">drawImage</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Graphics</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public abstract boolean drawImage(Image
<I>img</I>, int <I>x</I>, int <I>y</I>, int <I>width</I>, <BR>
</FONT></TT><FONT FACE="ZapfDingbats">&Acirc;</FONT><TT><FONT FACE="Courier">
int <I>height</I>, Color <I>bgcolor</I>, ImageObserver <I>observer</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">drawImage()</FONT></TT> method draws
an image at a specified location within a specified bounding rectangle
using a specified background color.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">img</FONT></I></TT> is an <TT><FONT FACE="Courier">Image</FONT></TT> class to be drawn using the graphics context.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">x</FONT></I></TT> is the x coordinate of where the image is drawn.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">y</FONT></I></TT> is the y coordinate of where the image is drawn.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">width</FONT></I></TT> is the width of the bounding rectangle.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">height</FONT></I></TT> is the height of the bounding rectangle.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">bgcolor</FONT></I></TT> is the background color to be used.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">observer</FONT></I></TT> is an <TT><FONT FACE="Courier">ImageObserver</FONT></TT> interface that notifies when the drawing is done.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT>
</TD><TD >A Boolean value indicating the success or failure of the draw operation.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">dispose</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Graphics</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public abstract void dispose()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">dispose()</FONT></TT> method disposes
of the <TT><FONT FACE="Courier">Graphics</FONT></TT> object.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >none</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">finalize</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Graphics</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void finalize()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">finalize()</FONT></TT> method disposes
of the <TT><FONT FACE="Courier">Graphics</FONT></TT> object once
it is no longer referenced.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >none</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">toString</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Graphics</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public String toString()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">toString()</FONT></TT> method returns
a string representation of the <TT><FONT FACE="Courier">Graphics</FONT></TT>
object.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >A <TT><FONT FACE="Courier">String</FONT></TT> containing the <TT><FONT FACE="Courier">Graphics</FONT></TT> class name, current color, and current font.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=8%><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></TD><TD WIDTH=499><H2><A NAME="GridBagConstraints"><FONT SIZE=5 COLOR=#FF0000>GridBagConstraints</FONT></A>
</H2>

</TD><TD WIDTH=8%><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Extends.gif"></FONT></TT>


</TD><TD >
<FONT FACE="Courier">Object</FONT>

</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%>
<IMG SRC="http://docs.rinet.ru/JavDev/Implem.gif">

</TD><TD >
<TT><FONT FACE="Courier">Cloneable</FONT></TT>


</TD></TR>
</TABLE></CENTER>
<P>
<P>
The class hierarchy for the <TT><FONT FACE="Courier">GridBagConstraints</FONT></TT>
class derives from the class <TT><FONT FACE="Courier">java.lang.Object</FONT></TT>.
(See Listing 28.21.) A <TT><FONT FACE="Courier">GridBagConstraints</FONT></TT>
class is used in conjunction with a <TT><FONT FACE="Courier">GridBagLayout</FONT></TT>
in order to specify the constraints of the objects being laid
out. <TT><FONT FACE="Courier">GridBagConstraints</FONT></TT>'
overall derivation is shown in Figure 28.1.
<HR>
<BLOCKQUOTE>
<B>Listing 28.21. Public members of </B><TT><B><FONT FACE="Courier">java.awt.GridBagConstraints</FONT></B></TT><B>.
<BR>
</B>
</BLOCKQUOTE>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public class GridBagConstraints implements
Cloneable {<BR>
&nbsp;&nbsp;public static final int RELATIVE<BR>
&nbsp;&nbsp;public static final int REMAINDER<BR>
&nbsp;&nbsp;public static final int NONE<BR>
&nbsp;&nbsp;public static final int BOTH<BR>
&nbsp;&nbsp;public static final int HORIZONTAL<BR>
&nbsp;&nbsp;public static final int VERTICAL<BR>
&nbsp;&nbsp;public static final int CENTER<BR>
&nbsp;&nbsp;public static final int NORTH<BR>
&nbsp;&nbsp;public static final int NORTHEAST<BR>
&nbsp;&nbsp;public static final int EAST<BR>
&nbsp;&nbsp;public static final int SOUTHEAST<BR>
&nbsp;&nbsp;public static final int SOUTH<BR>
&nbsp;&nbsp;public static final int SOUTHWEST<BR>
&nbsp;&nbsp;public static final int WEST<BR>
&nbsp;&nbsp;public static final int NORTHWEST<BR>
&nbsp;&nbsp;public int <I>gridx</I>, <I>gridy</I>, <I>gridwidth</I>,
<I>gridheight<BR>
</I>&nbsp;&nbsp;public double <I>weightx</I>, <I>weighty<BR>
</I>&nbsp;&nbsp;public int <I>anchor</I>, <I>fill<BR>
</I>&nbsp;&nbsp;public Insets <I>insets<BR>
</I>&nbsp;&nbsp;public int <I>ipadx</I>, <I>ipady<BR>
</I>&nbsp;&nbsp;public GridBagConstraints()<BR>
&nbsp;&nbsp;public Object clone()<BR>
}</FONT></TT>
</BLOCKQUOTE>
<HR>

<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=589><B>Public Static Values</B></TD></TR>
</TABLE></CENTER>
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int RELATIVE</FONT></B></TT>
</BLOCKQUOTE>
<P>
A public static value representing the relative constraint.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int REMAINDER</FONT></B></TT>
</BLOCKQUOTE>
<P>
A public static value representing the remainder constraint.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int NONE</FONT></B></TT>
</BLOCKQUOTE>
<P>
A public static value representing the none constraint.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int BOTH</FONT></B></TT>
</BLOCKQUOTE>
<P>
A public static value representing the both constraint.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int HORIZONTAL</FONT></B></TT>
</BLOCKQUOTE>
<P>
A public static value representing the horizontal constraint.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int VERTICAL</FONT></B></TT>
</BLOCKQUOTE>
<P>
A public static value representing the vertical constraint.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int CENTER</FONT></B></TT>
</BLOCKQUOTE>
<P>
A public static value representing the center constraint.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int NORTH</FONT></B></TT>
</BLOCKQUOTE>
<P>
A public static value representing the north constraint.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int NORTHEAST</FONT></B></TT>
</BLOCKQUOTE>
<P>
A public static value representing the northeast constraint.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int EAST</FONT></B></TT>
</BLOCKQUOTE>
<P>
A public static value representing the east constraint.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int SOUTHEAST</FONT></B></TT>
</BLOCKQUOTE>
<P>
A public static value representing the southeast constraint.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int SOUTH</FONT></B></TT>
</BLOCKQUOTE>
<P>
A public static value representing the south constraint.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int SOUTHWEST</FONT></B></TT>
</BLOCKQUOTE>
<P>
A public static value representing the southwest constraint.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int WEST</FONT></B></TT>
</BLOCKQUOTE>
<P>
A public static value representing the west constraint.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public static final int NORTHWEST</FONT></B></TT>
</BLOCKQUOTE>
<P>
A public static value representing the northwest constraint.
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=589><B>Public Instance Variables</B></TD></TR>
</TABLE></CENTER>
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public int <I><B>gridx</B></I></FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><I><FONT FACE="Courier">gridx</FONT></I></TT> variable
stores the grid x coordinate.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public int <I><B>gridy</B></I></FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><I><FONT FACE="Courier">gridy</FONT></I></TT> variable
stores the grid y coordinate.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public int <I><B>gridwidth</B></I></FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><I><FONT FACE="Courier">gridwidth</FONT></I></TT> variable
stores the grid bounding rectangle width.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public int <I><B>gridheight</B></I></FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><I><FONT FACE="Courier">gridheight</FONT></I></TT> variable
stores the grid bounding rectangle height.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public double <I><B>weightx</B></I></FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><I><FONT FACE="Courier">weightx</FONT></I></TT> variable
stores the horizontal space for a component to reserve for itself.
If this is set to zero (the default), all components within a
row are bunched together in the center of  the row.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public double <I><B>weighty</B></I></FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><I><FONT FACE="Courier">weighty</FONT></I></TT> variable
stores the vertical space for a component to reserve for itself.
If this is set to zero (the default), all components within a
column are bunched together in the center of the column.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public int <I><B>anchor</B></I></FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><I><FONT FACE="Courier">anchor</FONT></I></TT> variable
determines how to display a component when it is smaller than
its display area. Valid values for this variable are <TT><FONT FACE="Courier">CENTER</FONT></TT>
(the default), <TT><FONT FACE="Courier">NORTH</FONT></TT>, <TT><FONT FACE="Courier">NORTHEAST</FONT></TT>,
<TT><FONT FACE="Courier">EAST</FONT></TT>, <TT><FONT FACE="Courier">SOUTHEAST</FONT></TT>,
<TT><FONT FACE="Courier">SOUTH</FONT></TT>, <TT><FONT FACE="Courier">SOUTHWEST</FONT></TT>,
<TT><FONT FACE="Courier">WEST</FONT></TT>, and <TT><FONT FACE="Courier">NORTHWEST</FONT></TT>.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public int <I><B>fill</B></I></FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><I><FONT FACE="Courier">fill</FONT></I></TT> variable
determines how to display a component when it is larger than its
display area. Valid values for this variable are <TT><FONT FACE="Courier">NONE</FONT></TT>,
<TT><FONT FACE="Courier">HORIZONTAL</FONT></TT>, <TT><FONT FACE="Courier">VERTICAL</FONT></TT>,
and <TT><FONT FACE="Courier">BOTH</FONT></TT>.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public Insets <I><B>insets</B></I></FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><I><FONT FACE="Courier">insets</FONT></I></TT> variable
determines the space between the component and its bounding area.
For more information on the <TT><FONT FACE="Courier">Insets</FONT></TT>
class, see the documentation later in this chapter.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public int <I><B>ipadx</B></I></FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><I><FONT FACE="Courier">ipadx</FONT></I></TT> variable
determines the amount of padding to always add to the component
on its left and right sides.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public int <I><B>ipady</B></I></FONT></B></TT>
</BLOCKQUOTE>
<P>
The <TT><I><FONT FACE="Courier">ipady</FONT></I></TT> variable
determines the amount of padding to always add to the component
on its top and bottom sides.<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%>
<H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/const.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">GridBagConstraints</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">GridBagConstraints</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public GridBagConstraints()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">GridBagConstraints()</FONT></TT>
constructor creates a <TT><FONT FACE="Courier">GridBagConstraints</FONT></TT>
class containing default values. The default values are
<BLOCKQUOTE>
<TT><FONT FACE="Courier">&nbsp;&nbsp;&nbsp;&nbsp;gridx = RELATIVE;
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;gridy = RELATIVE<BR>
&nbsp;&nbsp;&nbsp;&nbsp;gridwidth = 1<BR>
&nbsp;&nbsp;&nbsp;&nbsp;gridheight = 1<BR>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;weightx = 0<BR>
&nbsp;&nbsp;&nbsp;&nbsp;weighty = 0<BR>
&nbsp;&nbsp;&nbsp;&nbsp;anchor = CENTER<BR>
&nbsp;&nbsp;&nbsp;&nbsp;fill = NONE<BR>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;insets = new Insets(0, 0, 0, 0)<BR>
&nbsp;&nbsp;&nbsp;&nbsp;ipadx = 0<BR>
&nbsp;&nbsp;&nbsp;&nbsp;ipady = 0</FONT></TT>
</BLOCKQUOTE>
<P><CENTER><TABLE  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">clone</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">GridBagConstraints</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public Object clone()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">clone()</FONT></TT> method creates
a clone of this <TT><FONT FACE="Courier">GridBagConstraints</FONT></TT>
object.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >An <TT><FONT FACE="Courier">Object</FONT></TT> object representing a clone of this <TT><FONT FACE="Courier">GridBagConstraints</FONT></TT> object.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=8%><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></TD><TD WIDTH=499><H2><A NAME="GridBagLayout"><FONT SIZE=5 COLOR=#FF0000>GridBagLayout</FONT></A>
</H2>

</TD><TD WIDTH=8%><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Extends.gif"></FONT></TT>


</TD><TD >
<FONT FACE="Courier">Object</FONT>


</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Implem.gif"></FONT></TT>
</TD><TD ><FONT FACE="Courier">LayoutManager</FONT></TD>
</TR>
</TABLE></CENTER>
<P>
<P>
The class hierarchy for the <TT><FONT FACE="Courier">GridBagLayout</FONT></TT>
class derives from the class <TT><FONT FACE="Courier">java.lang.Object</FONT></TT>.
(See Listing 28.22.) The <TT><FONT FACE="Courier">GridBagLayout</FONT></TT>
implements the <TT><FONT FACE="Courier">LayoutManager</FONT></TT>
interface. This class uses a rectangular grid of cells to lay
out components within the cells. Each component is associated
with a <TT><FONT FACE="Courier">GridBagConstraints</FONT></TT>
object that controls how the component is actually laid out within
the grid. <TT><FONT FACE="Courier">GridBagLayout</FONT></TT>'s
overall derivation is shown in Figure 28.1.
<HR>
<BLOCKQUOTE>
<B>Listing 28.22. Public members of </B><TT><B><FONT FACE="Courier">java.awt.GridBagLayout</FONT></B></TT><B>.
<BR>
</B>
</BLOCKQUOTE>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public class GridBagLayout implements
LayoutManager {<BR>
&nbsp;&nbsp;public int <I>columnWidths</I>[]<BR>
&nbsp;&nbsp;public int <I>rowHeights</I>[]<BR>
&nbsp;&nbsp;public double <I>columnWeights</I>[]<BR>
&nbsp;&nbsp;public double <I>rowWeights</I>[]<BR>
&nbsp;&nbsp;public GridBagLayout()<BR>
&nbsp;&nbsp;public void setConstraints(Component <I>comp</I>,
GridBagConstraints <I>constraints</I>)<BR>
&nbsp;&nbsp;public GridBagConstraints getConstraints(Component
<I>comp</I>)<BR>
&nbsp;&nbsp;public Point getLayoutOrigin()<BR>
&nbsp;&nbsp;public int [][] getLayoutDimensions()<BR>
&nbsp;&nbsp;public double [][] getLayoutWeights()<BR>
&nbsp;&nbsp;public Point location(int <I>x</I>, int <I>y</I>)
<BR>
&nbsp;&nbsp;public void addLayoutComponent(String <I>name</I>,
Component <I>comp</I>)<BR>
&nbsp;&nbsp;public void removeLayoutComponent(Component <I>comp</I>)
<BR>
&nbsp;&nbsp;public Dimension preferredLayoutSize(Container <I>parent</I>)
<BR>
&nbsp;&nbsp;public Dimension minimumLayoutSize(Container <I>parent</I>)
<BR>
&nbsp;&nbsp;public void layoutContainer(Container <I>parent</I>)
<BR>
&nbsp;&nbsp;public String toString()<BR>
}</FONT></TT>
</BLOCKQUOTE>
<HR>

<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=589><B>Public Instance Variables</B></TD></TR>
</TABLE></CENTER>
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public int</FONT></B><FONT FACE="Courier">
<I><B>columnWidths</B></I><B>[]</B></FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><I><FONT FACE="Courier">columnWidths</FONT></I></TT> variable
is an array of integers representing the widths of each column
used by the <TT><FONT FACE="Courier">GridBagLayout</FONT></TT>.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public int</FONT></B><FONT FACE="Courier">
<I><B>rowHeights</B></I><B>[]</B></FONT></TT>
</BLOCKQUOTE>
<P>
The<I> </I><TT><I><FONT FACE="Courier">rowHeights</FONT></I></TT>
variable is an array of integers representing the heights of each
row used by the <TT><FONT FACE="Courier">GridBagLayout</FONT></TT>.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public double</FONT></B><FONT FACE="Courier">
<I><B>columnWeights</B></I><B>[]</B></FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><I><FONT FACE="Courier">columnWeights</FONT></I></TT>
variable is an array of doubles representing the space to be distributed
for each column.
<BLOCKQUOTE>
<TT><B><FONT FACE="Courier">public double</FONT></B><FONT FACE="Courier">
<I><B>rowWeights</B></I><B>[]</B></FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><I><FONT FACE="Courier">rowWeights</FONT></I></TT> variable
is an array of doubles representing the space to be distributed
for  each row.<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%>
<H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/const.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">GridBagLayout</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">GridBagLayout</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public GridBagLayout()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">GridBagLayout()</FONT></TT> constructor
constructs a <TT><FONT FACE="Courier">GridBagLayout</FONT></TT>
class for use in laying out components on a form.<P><CENTER><TABLE BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%>
<H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">setConstraints</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">GridBagLayout</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void setConstraints(Component
<I>comp</I>, GridBagConstraints <I>constraints</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">setConstraints()</FONT></TT> method
sets the <TT><FONT FACE="Courier">GridBagConstraints</FONT></TT>
for the specified component.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">comp</FONT></I></TT> is a <TT><FONT FACE="Courier">Component</FONT></TT> to be modified within the <TT><FONT FACE="Courier">GridBagLayout</FONT></TT>.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">constraints</FONT></I></TT> is the <TT><FONT FACE="Courier">GridBagConstraints</FONT></TT> that is applied to the component.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getConstraints</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">GridBagLayout</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public GridBagConstraints getConstraints(Component
<I>comp</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">getConstraints()</FONT></TT> method
returns the constraints currently applied to the specified component.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">Comp</FONT></I></TT> is a <TT><FONT FACE="Courier">Component</FONT></TT> managed by the <TT><FONT FACE="Courier">GridBagLayout</FONT></TT>.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT>
</TD><TD >A <TT><FONT FACE="Courier">GridBagConstraints</FONT></TT> class representing the constraints placed upon the specified component.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">GetLayoutOrigin</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">GridBagLayout</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public Point getLayoutOrigin()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">getLayoutOrigin()</FONT></TT> method
returns the origin of the layout manager.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >A <TT><FONT FACE="Courier">Point</FONT></TT> class representing the origin of the <TT><FONT FACE="Courier">GridBagLayout</FONT></TT>. For more information on the <TT><FONT FACE="Courier">Point</FONT></TT> class, see the documentation later in this 
chapter.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">GetLayoutDimensions</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">GridBagLayout</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public int [][] getLayoutDimensions()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">getLayoutDimensions()</FONT></TT>
method returns an array of dimensions with an element for each
component.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >An array containing layout dimensions for components managed by the <TT><FONT FACE="Courier">GridBagLayout</FONT></TT>.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getLayoutWeights</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">GridBagLayout</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public double [][] getLayoutWeights()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">getLayoutWeights()</FONT></TT> method
returns an array of weights with an element for each component.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >An array containing layout weights for components managed by the <TT><FONT FACE="Courier">GridBagLayout</FONT></TT>.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">location</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">GridBagLayout</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public Point location(int <I>x</I>, int
<I>y</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">location()</FONT></TT> method returns
a <TT><FONT FACE="Courier">Point</FONT></TT> object representing
the point within the layout manager corresponding to the specified
coordinates.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">x</FONT></I></TT> is the x coordinate.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">y</FONT></I></TT> is the y coordinate.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT>
</TD><TD >A <TT><FONT FACE="Courier">Point</FONT></TT> object. For more information on the <TT><FONT FACE="Courier">Point</FONT></TT> class, see the documentation later in this chapter.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">addLayoutComponent</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">GridBagLayout</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void addLayoutComponent(String
<I>name</I>, Component <I>comp</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">addLayoutComponent()</FONT></TT>
method adds a component to the <TT><FONT FACE="Courier">GridBagLayout</FONT></TT>.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">name</FONT></I></TT> is the name of the component to be added.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">comp</FONT></I></TT> is the <TT><FONT FACE="Courier">Component</FONT></TT> to be added.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">removeLayoutComponent</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">GridBagLayout</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void removeLayoutComponent(Component
<I>comp</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">removeLayoutComponent()</FONT></TT>
method removes a component from the <TT><FONT FACE="Courier">GridBagLayout</FONT></TT>.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">comp</FONT></I></TT> is the <TT><FONT FACE="Courier">Component</FONT></TT> to be removed.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">preferredLayoutSize</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">GridBagLayout</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public Dimension preferredLayoutSize(Container
<I>parent</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">preferredLayoutSize()</FONT></TT>
method returns the preferred size for the layout manager given
the specified container and the components within it.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">parent</FONT></I></TT> is a <TT><FONT FACE="Courier">Container</FONT></TT> object containing components. For more information on the <TT><FONT FACE="Courier"> Container</FONT></TT> class, see the documentation earlier in 
this chapter.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT>
</TD><TD >A <TT><FONT FACE="Courier">Dimension</FONT></TT> object specifying the preferred size of the layout manager. For more information on the <TT><FONT FACE="Courier">Dimension</FONT></TT> class, see the documentation earlier in this chapter.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">minimumLayoutSize</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">GridBagLayout</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public Dimension minimumLayoutSize(Container
<I>parent</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">minimumLayoutSize()</FONT></TT> method
returns the minimum size for the layout manager given the specified
container and the components within it.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">parent</FONT></I></TT> is a <TT><FONT FACE="Courier">Container</FONT></TT> object containing components. For more information on the <TT><FONT FACE="Courier"> Container</FONT></TT> class, see the documentation earlier in 
this chapter.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT>
</TD><TD >A <TT><FONT FACE="Courier">Dimension</FONT></TT> object specifying the minimum size of the layout manager. For more information on the <TT><FONT FACE="Courier">Dimension</FONT></TT> class, see the documentation earlier in this chapter.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">layoutContainer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">GridBagLayout</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void layoutContainer(Container
<I>parent</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">layoutContainer()</FONT></TT> method
lays out the specified container within the layout manager.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">parent</FONT></I></TT> is a <TT><FONT FACE="Courier">Container</FONT></TT> object containing components. For more information on the <TT><FONT FACE="Courier"> Container</FONT></TT> class, see the documentation earlier in 
this chapter.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">toString</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">GridBagLayout</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public String toString()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">toString()</FONT></TT> method returns
a string containing information about the <TT><FONT FACE="Courier">GridBagLayout</FONT></TT>.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >A <TT><FONT FACE="Courier">String</FONT></TT> containing the name of the <TT><FONT FACE="Courier">GridBagLayout</FONT></TT>.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=8%><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></TD><TD WIDTH=499><H2><A NAME="GridLayout"><FONT SIZE=5 COLOR=#FF0000>GridLayout</FONT></A>
</H2>

</TD><TD WIDTH=8%><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Extends.gif"></FONT></TT>


</TD><TD >
<FONT FACE="Courier">Object</FONT>


</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%>
<IMG SRC="http://docs.rinet.ru/JavDev/Implem.gif">

</TD><TD >
LayoutManager

</TD></TR>
</TABLE></CENTER>
<P>
<P>
The class hierarchy for the <TT><FONT FACE="Courier">GridLayout</FONT></TT>
class derives from the class <TT><FONT FACE="Courier">java.lang.Object</FONT></TT>.
(See Listing 28.23.) The <TT><FONT FACE="Courier">GridLayout</FONT></TT>
class implements the <TT><FONT FACE="Courier">LayoutManager</FONT></TT>
interface. It lays out grid objects. <TT><FONT FACE="Courier">GridLayout</FONT></TT>'s
overall derivation is shown in Figure 28.1.
<HR>
<BLOCKQUOTE>
<B>Listing 28.23. Public members of </B><TT><B><FONT FACE="Courier">java.awt.GridLayout</FONT></B></TT><B>.
<BR>
</B>
</BLOCKQUOTE>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public class GridLayout implements LayoutManager
{<BR>
&nbsp;&nbsp;public GridLayout(int <I>rows</I>, int <I>cols</I>)
<BR>
&nbsp;&nbsp;public GridLayout(int <I>rows</I>, int <I>cols</I>,
int <I>hgap</I>, int <I>vgap</I>)<BR>
&nbsp;&nbsp;public void addLayoutComponent(String <I>name</I>,
Component <I>comp</I>)<BR>
&nbsp;&nbsp;public void removeLayoutComponent(Component <I>comp</I>)
<BR>
&nbsp;&nbsp;public Dimension preferredLayoutSize(Container <I>parent</I>)
<BR>
&nbsp;&nbsp;public Dimension minimumLayoutSize(Container <I>parent</I>)
<BR>
&nbsp;&nbsp;public void layoutContainer(Container <I>parent</I>)
<BR>
&nbsp;&nbsp;public String toString()<BR>
}</FONT></TT>
</BLOCKQUOTE>
<HR>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/const.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">GridLayout</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">GridLayout</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public GridLayout(int <I>rows</I>, int
<I>cols</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">GridLayout()</FONT></TT> constructor
constructs a grid layout manager using the specified number of
rows and columns.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">rows</FONT></I></TT> is the number of rows to be laid out. Either <TT><I><FONT FACE="Courier">rows</FONT></I></TT> or <TT><I><FONT FACE="Courier">cols</FONT></I></TT> can be set to zero in order to set either the rows or 
columns to 'any number.'
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">cols</FONT></I></TT> is the number of columns to be laid out. Either <TT><I><FONT FACE="Courier">rows</FONT></I></TT> or <TT><I><FONT FACE="Courier">cols</FONT></I></TT> can be set to zero in order to set either the 
rows or columns to 'any number.'
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/const.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">GridLayout</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">GridLayout</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public GridLayout(int <I>rows</I>, int
<I>cols</I>, int <I>hgap</I>, int <I>vgap</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
This <TT><FONT FACE="Courier">GridLayout()</FONT></TT> constructor
constructs a grid layout manager using the specified number of
rows and columns as well as the horizontal and vertical gaps to
be used.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">rows</FONT></I></TT> is the number of rows to be laid out.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">cols</FONT></I></TT> is the number of columns to be laid out.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">hgap</FONT></I></TT> is the horizontal gap value.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">vgap</FONT></I></TT> is the vertical gap value.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">addLayoutComponent</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">GridLayout</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void addLayoutComponent(String
<I>name</I>, Component <I>comp</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">addLayoutComponent()</FONT></TT>
method adds a component to the <TT><FONT FACE="Courier">GridLayout</FONT></TT>.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">name</FONT></I></TT> is the name of the component to be added.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT>
</TD><TD ><TT><I><FONT FACE="Courier">comp</FONT></I></TT> is the component to be added.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">removeLayoutComponent</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">GridLayout</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void removeLayoutComponent(Component
<I>comp</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">removeLayoutComponent()</FONT></TT>
method removes a component from the <TT><FONT FACE="Courier">GridBagLayout</FONT></TT>.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">comp</FONT></I></TT> is the component to be removed.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">preferredLayoutSize</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">GridLayout</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public Dimension preferredLayoutSize(Container
<I>parent</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">preferredLayoutSize()</FONT></TT>
method returns the preferred size for the layout manager given
the specified container and the components within it.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">parent</FONT></I></TT> is a <TT><FONT FACE="Courier">Container</FONT></TT> object containing components. For more information on the <TT><FONT FACE="Courier"> Container</FONT></TT> class, see the documentation earlier in 
this chapter.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT>
</TD><TD >A <TT><FONT FACE="Courier">Dimension</FONT></TT> object specifying the preferred size of the layout manager. For more information on the <TT><FONT FACE="Courier">Dimension</FONT></TT> class, see the documentation earlier in this chapter.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">minimumLayoutSize</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">GridLayout</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public Dimension minimumLayoutSize(Container
<I>parent</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">minimumLayoutSize()</FONT></TT> method
returns the minimum size for the layout manager given the specified
container and the components within it.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">parent</FONT></I></TT> is a <TT><FONT FACE="Courier">Container</FONT></TT> object containing components. For more information on the <TT><FONT FACE="Courier"> Container</FONT></TT> class, see the documentation earlier in 
this chapter.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT>
</TD><TD >A <TT><FONT FACE="Courier">Dimension</FONT></TT> object specifying the minimum size of the layout manager. For more information on the <TT><FONT FACE="Courier">Dimension</FONT></TT> class, see the documentation earlier in this chapter.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">layoutContainer</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">GridLayout</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public void layoutContainer(Container
<I>parent</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">layoutContainer()</FONT></TT> method
lays out the specified container within the layout manager.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">parent</FONT></I></TT> is a <TT><FONT FACE="Courier">Container</FONT></TT> object containing components. For more information on the <TT><FONT FACE="Courier"> Container</FONT></TT> class, see the documentation earlier in 
this chapter.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">toString</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">GridLayout</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public String toString()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">toString()</FONT></TT> method returns
a string containing information about the <TT><FONT FACE="Courier">GridLayout</FONT></TT>.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD >A <TT><FONT FACE="Courier">String</FONT></TT> containing the <TT><FONT FACE="Courier">GridLayout</FONT></TT>'s name, <TT><I><FONT FACE="Courier">hgap</FONT></I></TT>, <TT><I><FONT FACE="Courier">vgap</FONT></I></TT>, <TT><I><FONT 
FACE="Courier">rows</FONT></I></TT>, and <TT><I><FONT FACE="Courier">cols</FONT></I></TT> values.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=8%><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></TD><TD WIDTH=499><H2><A NAME="Image"><FONT SIZE=5 COLOR=#FF0000>Image</FONT></A></H2>

</TD><TD WIDTH=8%><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Extends.gif"></FONT></TT>

</TD><TD >
<FONT FACE="Courier">Object</FONT>


</TD></TR>
</TABLE></CENTER>
<P>
<P>
The class hierarchy for the <TT><FONT FACE="Courier">Image</FONT></TT>
class derives from the class <TT><FONT FACE="Courier">java.lang.Object</FONT></TT>.
(See Listing 28.24.) An <TT><FONT FACE="Courier">Image</FONT></TT>
class is actually an abstract class. You must provide a platform-specific
implementation to use it. <TT><FONT FACE="Courier">Image</FONT></TT>'s
overall derivation is shown in Figure 28.1.
<HR>
<BLOCKQUOTE>
<B>Listing 28.24. Public members of </B><TT><B><FONT FACE="Courier">java.awt.Image</FONT></B></TT><B>.
<BR>
</B>
</BLOCKQUOTE>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public abstract class Image {<BR>
&nbsp;&nbsp;public abstract int getWidth(ImageObserver <I>observer</I>)
<BR>
&nbsp;&nbsp;public abstract int getHeight(ImageObserver obs<I>e</I>rver)
<BR>
&nbsp;&nbsp;public abstract ImageProducer getSource()<BR>
&nbsp;&nbsp;public abstract Graphics getGraphics()<BR>
&nbsp;&nbsp;public abstract Object getProperty(String <I>name</I>,
ImageObserver <I>observer</I>)<BR>
&nbsp;&nbsp;public static final Object UndefinedProperty<BR>
&nbsp;&nbsp;public abstract void flush()<BR>
}</FONT></TT>
</BLOCKQUOTE>
<HR>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">getWidth</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Image</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public abstract int getWidth(ImageObserver
<I>observer</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">getWidth()</FONT></TT> method returns
the width of the <TT><FONT FACE="Courier">Image</FONT></TT>. If
the width of the image is not yet known, the <TT><FONT FACE="Courier">ImageObserver</FONT></TT>
is notified at a later time and <TT><FONT FACE="Courier">-1</FONT></TT>
is returned.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">Observer</FONT></I></TT> is an <TT><FONT FACE="Courier">ImageObserver</FONT></TT> interface that is notified if the image is not yet available.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT>
</TD><TD >An integer value representing the width of the image (<TT><FONT FACE="Courier">-1</FONT></TT> if the image is not yet available).
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">GetHeight</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Image</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public abstract int getHeight(ImageObserver
<I>observer</I>)</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">getWidth()</FONT></TT> method returns
the height of the <TT><FONT FACE="Courier">Image</FONT></TT>.
If the height of the image is not yet known, the <TT><FONT FACE="Courier">ImageObserver</FONT></TT>
is notified at a later time and <TT><FONT FACE="Courier">-1</FONT></TT>
is returned.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Parame.gif"></FONT></TT></TD>
<TD ><TT><I><FONT FACE="Courier">Observer</FONT></I></TT> is an <TT><FONT FACE="Courier">ImageObserver</FONT></TT> interface that is notified if the image is not yet available.
</TD></TR>
</TABLE></CENTER>
<P>

<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD COLSPAN=2 WIDTH=4%><P>
<TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT>
</TD><TD >An integer value representing the height of the image (<TT><FONT FACE="Courier">-1</FONT></TT> if the image is not yet available).
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000  BORDER=1 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Method.gif"></FONT></TT></H4>

</TD><TD ><H4><TT><FONT FACE="Courier">GetSource</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Class.gif"></FONT></TT></H4>

</TD><TD WIDTH=20%><H4><TT><FONT FACE="Courier">Image</FONT></TT></H4>

</TD><TD WIDTH=8%><H4><IMG SRC="http://docs.rinet.ru/JavDev/awt.gif"></H4>
</TD></TR>
</TABLE></CENTER>
<P>
<BLOCKQUOTE>
<TT><FONT FACE="Courier">public abstract ImageProducer getSource()</FONT></TT>
</BLOCKQUOTE>
<P>
The <TT><FONT FACE="Courier">getSource()</FONT></TT> method returns
the <TT><FONT FACE="Courier">ImageProducer</FONT></TT> interface
responsible for producing the <TT><FONT FACE="Courier">Image</FONT></TT>'s
pixels.
<P><CENTER><TABLE  WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=4%><TT><FONT FACE="Courier"><IMG SRC="http://docs.rinet.ru/JavDev/Returns.gif"></FONT></TT></TD>
<TD>An <TT><FONT FACE="Courier">ImageProducer</FONT></TT> interface used by the image filtering classes in package <TT><FONT FACE="Courier">java.awt.Image</FONT></TT> (see documentation later in this chapter). 
</TD></TR>
</TABLE></CENTER>
<P>
<HR WIDTH="100%"></P>

<CENTER><P><A HREF="ch27.htm"><IMG SRC="http://docs.rinet.ru/JavDev/pc.gif" BORDER=0 HEIGHT=88 WIDTH=140></A><A HREF="#CONTENTS"><IMG SRC="http://docs.rinet.ru/JavDev/cc.gif" BORDER=0 HEIGHT=88 WIDTH=140></A><A HREF="index.htm"><IMG SRC="http://docs.rinet.ru/JavDev/hb.gif" BORDER=0 HEIGHT=88 WIDTH=140></A><A HREF="ch29.htm"><IMG 
SRC="http://docs.rinet.ru/JavDev/nc.gif" BORDER=0 HEIGHT=88 WIDTH=140></A></P></CENTER>

<P>
<HR WIDTH="100%"></P>

</BODY>
</HTML>



