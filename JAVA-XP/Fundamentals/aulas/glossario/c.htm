<html>

<head>
<meta http-equiv="Content-Language" content="pt-br">
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<meta name="GENERATOR" content="Microsoft FrontPage 4.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<link REL="stylesheet" TYPE="text/css" HREF="css\padraowil.css">
<title>Glossário J2EE</title>
</head>

<body>
<font size="2">
<center><b>GLOSSÁRIO<br>J2EE 2 Platform, Enterprise Edition</b></center>
<br>
Este glossário define termos de acordo com seu uso no contexto da JAVA 2 Platform, Enterpresie Edition (Plataforma J2EE). Muitos dos termos possue uso mais genérico. Por exemplo, o termo handle é muito usado nas linguagens de programação modernas, mas aqui ele é definido em termos do seu uso na tecnologia Enterprise JavaBeans(EJB)
<p>
<center>
<b>
<a href="glossario.htm">A</a> 
<a href="b.htm">B</a>
<a href="c.htm">C</a>
<a href="d.htm">D</a>
<a href="e.htm">E</a>
<a href="f.htm">F</a>
<a href="g.htm">G</a>
<a href="h.htm">H</a>
<a href="i.htm">I</a>
<a href="j.htm">J</a>
<a href="l.htm">L</a>
<a href="m.htm">M</a>
<a href="n.htm">N</a>
<a href="o.htm">O</a>
<a href="p.htm">P</a>
<a href="q.htm">Q</a>
<a href="r.htm">R</a>
<a href="s.htm">S</a>
<a href="t.htm">T</a>
<a href="u.htm">U</a>
<a href="v.htm">V</a>
<a href="x.htm">X</a>
<a href="z.htm">Z</a>
</b>
</center>
</p>
<b>caller</b><br>
O mesmo que "caller principal", neste glossário.
<br>
<br>
<b>caller principal</b><br>
O principal que identifica quem chamou um método de enterprise bean ou um método de servlet.
<br>
<br>
<b>camada web</b><br>
A camada de uma aplicação  distribuída em multicamadas que oferece serviõs para acessar a Internet, uma intranet ou uma extranet. A camada da Web de uma aplicação J2EE é implementada por um servidor da Web que implementa as especificações Java Servlets e Java Server Pages.
<br>
<br>
<b>camada de banco de dados</b><br>
A camada de uma aplicação distribuída multicamadas que contém o armazenamento de dados ou outro sistema de informações da empresa. Em uma aplicação J2EE, essa camada está ligada às outras camadas da aplicação por meio da API JDBC ou outra API em conformidade com a J2EE Connector Architecture.
<br>
<br>
<b>cama de lógica comercial</b><br>
A camada de uma aplicação distribuída em múltiplas camadas que contém a lógica comercial. Em um aplicação J2EE, essa camada é implementada pelo servidor de EJB.
<br>
<br>
<b>camada do cliente</b><br>
A camada de uma aplicação distribuída em multicamadas (veja "aplicação distribuída", neste glossário), que apresenta a aplicação ao usuário final. A camada do cliente de uma aplicação J2EE pode ser fornecida por meio de uma aplicação Java isolada ou por um browser da Web.
<br>
<br>
<b>caminho de URL</b><br>
O URL passado por um pedido HTTP para invocar um servlet. O URL consiste no Caminho Contexto + Caminho Servlet + Informação Caminho, onde Caminho Contexto é o prefixo de caminho associado a um contexto de servlet do qual esse servlet faz parte. Se esse contexto for contexto default com raiz na base do namespace de URL do servidor da Web, oprefixo de caminho será uma string vazia. Caso contrário, o prefixo do caminho começa com um caractere / mas não termina com um caractere /. Caminho Servlet é a seção do caminho que corresponde diretamente ao mapeamento que ativou o pedido. O Servlet Path começa com um caractere/. Informação Caminho faz parte do caminho de pedido que não é parte do Caminho Contexto ou Caminho Servlet.
<br>
<br>
<b>chave primária</b><br>
Um objeto que identifica um bean de entidade com exclusividade dentro de um local.
<br>
<br>
<b>ciclo de vida</b><br>
Os eventos de estrutura da existência de um componente. Cada tipo de componente possui eventos de definição que marcam sua transição para estados onde ele possui disponibilidade variável para uso. Por exemplo, um servlet é criado e possui seu método <i>init</i> chamado por seu contêiner antes da chamada de seu método <i>service</i> por clientes ou outros servlets que exigem sua funcionalidade. Depois da chamada do seu método <i>init</i>, ele tem os dados ea prontidão para seu uso intencionado. O método <i>destroy</i> do servlet é chamado por seu contêiner antes do término de sua existência, de modo que o processamento associado com o término pode ser feito e os recursos podem ser liberados. Considerações semelhantes aplicam-se a todos os tipos de componente J2EE: enterprise beans(EJBs), componentes da Web (servlets ou páginas JSP), applets e clientes de aplicação.
<br>
<br>
<b>cliente de aplicação</b><br>
Um componente de camada do cliente que é executado em sua própria máquina virtual Java. Os clientes de aplicação possuem acesso a algumas APIs da plataforma J2EE (JNDI, JDBC, RMI-IIOP, JMS).
<br>
<br>
<b>cliente JMS</b><br>
Um programa em linguagem Java que envia e/ou recebe mensagens.
<br>
<br>
<b>cliente não-JMS</b><br>
Um programa cliente de mensagem que utiliza a API cliente nativa de um sistema de mensagem, em vez do Java Menssage Service.
<br>
<br>
<b>coleção de recursos da Web</b><br>
Uma lista de padrões de URL e métodos HTTP que descrevem um conjunto de recursos a serem protegidos.
<br>
<br>
<b>commit</b><br>
O ponto em uma transação quando todas as atualizações de quais recursos envolvidos na transação se tornam permanentes.
<br>
<br>
<b>componente</b><br>
Uma unidade de software em nível de aplicação com suporte de um contêiner. Os componentes são configuráveis durante o desenvolvimento. A plataforma J2EE define quatro tipos de componentes: enterprise beans, componentes da Web, applets e clientes de aplicação. Um tipo de componente incorpora um modelo de programação implementando o contrato do componente com seu contêiner. Veja "contrato de componente" e "contêiner", neste glossário.
<br>
<br>
<b>componente da Web</b><br>
Um componente que oferece serviços em resposta a pedidos; um servlet ou uma página JSP.
<br>
<br>
<b>componente JavaBeans</b><br>
Uma classe Java que pode ser manipulada em uma ferramenta montadora visual e composta nas aplicações. Um componente JavaBeans precisa aderir a certas convenções de interface de propriedade e evento.
<br>
<br>
<b>conector</b><br>
Um mecanismo de extensão padrão para os contêineres oferecerem conectividade com sistemas de informação da empresa. Um conector é específico a um sistema de informação da empresa e consiste em um adaptador de recurso e ferramentas de desenvolvimento de aplicação para a conectividade do sistema de informações da empresa. O adaptador de recursos é conectado a um contêiner por meio do seu suporte para os contratos em nível de sistema definidos na arquitetura do conector.
<br>
<br>
<b>conexão</b><br>
Veja "conexão do gerenciador de recursos", neste glossário.
<br>
<br>
<b>conexão do gerenciador de recursos</b><br>
Um objeto que representa uma sessão com um gerenciamento de recursos.
<br>
<br>
<b>conjunto de permissões de segurança</b><br>
O conjunto mínimo de permissões de seguraça que um Product Provider J2EE precisa oferecer para a execução de cada tipo de componente.
<br>
<br>
<b>contêiner</b><br>
Qualquer entidade que oferece serviços de gerenciamento de clico de vida, segurança, distribuição e runtime para os componentes. Cada tipo de contêiner (EJB, Web, JSP, servlet, applet e cliente de aplicação) também oferece serviços específicos do componente.
<br>
<br>
<b>contêiner da Web</b><br>
Um contêiner que implementa o contrato de componente da Web na arquitetura J2EE. Esse contrato especifica um ambiente de runtime para os componentes da Web que incluem segurança, gerenciamento de ciclo de vida, transação, distribuição e outros serviços. Um contêiner da Web oferece os mesmos serviços de um contêiner JSP e uma visão aliada das APIs da plataforma J2EE. Um contêiner da Web é fornecido por um servidor da Web ou J2EE.
<br>
<br>
<b>contêiner da Web distribuível</b><br>
Um contêiner da Web que é marcado como distribuível e que é executado por várias máquinas virtuais Java rodando no mesmo host ou em diferentes hosts.
<br>
<br>
<b>contêiner de applet</b><br>
Um contêiner da Web que inclui suporte para o modelo de programação de applet.
<br>
<br>
<b>contêiner de cliente da aplicação</b><br>
Um contêiner que aceita componentes do cliente da aplicação.
<br>
<br>
<b>contêiner de servlet</b><br>
Um contêiner que oferece os serviços de rede sobre os quais os pedidos e respostas são enviados, decodifica pedidos e formata respostas. Todos os contêineres de servlet precisam aceitar HTTP como protocolo para os pedidos e respostas, mas também precisam dar suporte a protocolos pedido-resposta adicionais, como HTTPS.
<br>
<br>
<b>contêiner de servlet distribuído</b><br>
Um contêiner de servlet que pode rodar uma aplicação da Web marcada como distribuível e que é executada por várias máquinas virtuais Java rodando no mesmo host ou em hots diferentes.
<br>
<br>
<b>contêiner EJB</b><br>
Um contêiner que implementa o contrato do componente EJB da arquitetura J2EE. Esse contrato especifica um ambiente de runtime para enterprise beans que incluem serviços de segurança, concorrência, gerenciamento de clico de vida, transação, distribuição, nomeação e outros serviços. Um contêiner EJB é fornecido por um servidor EJB ou J2EE.
<br>
<br>
<b>contêiner JSP</b><br>
Um contêiner que oferece os mesmos serviços de um contêiner de servlet e um motor que interpreta e processa páginas JSP em servlets.
<br>
<br>
<b>contêiner JSP distribuído</b><br>
Um contêiner JSP que pode executar uma aplicação da Web marcada como distribuível e espalhada por várias máquinas virtuais Java que podem estar rodando em hosts diferentes.
<br>
<br>
<b>contexto de nomeação</b><br>
Um conjunto de associações entre identificadores e objetos distintos e indivisíveis, facilitadas para as pessoas.
<br>
<br>
<b>contexto de segurança</b><br>
Um objeto que encapsula informações de estado commpartilhado referentes à segurança entre duas entidades.
<br>
<br>
<b>contexto de servlet</b><br>
Um objeto que contém uma visão de servlet da aplicação da Web dentro da qual o servlet está rodando. Usando o contexto, um servidor pode conectar eventos, obter referências de URL aos recursos e definir e armazenar atributos que outros servlets no contexto podem utilizar.
<br>
<br>
<b>contexto EJB</b><br>
Um objeto que permite que um enterprise bean invoque serviços fornecidos pelo contêiner e obtenha a informação sobre quem chamou um método invocado pelo cliente.
<br>
<br>
<b>contrato de componente</b><br>
O contrato entre um componente e seu contêiner. O contrato inclui: gerenciamento de cliclo de vida do componente, uma interface de contexto que a instância usa para obter diversas informações e serviços do seu contêiner e uma lista de serviços que o contêiner precisa oferecer para os seus componentes.
<br>
<br>
<b>controle de acesso</b><br>
Os métodos pelos quais as interações com recursos são limitadas a coleções de usuários ou programas para impor restrições de integridade, confidencialidade e disponibilidade.
<br>
<br>
<b>CORBA</b><br>
Common Object Request Broker Architecture. Um modelo de objeto distribuído, independente da linguagem, especificaod pelo Object Management Group (OMG). Veja também <b>IDL</b> e <b>IIOP</b>.
<br>
<br>
<b>CSS</b><br>
Cascading Style Sheet. Uma folha de estilo usada como documentos HTML e XML para incluir um estilo a todos os elementos marcados com uma determinada tag, para a direção dos browsers e outros mecanismos de apresentação.
<br>
<br>
<b>CTS</b><br>
Compatibility Test Suite. Um conjunto de testes de compatibilidade para verificar se um produto J2EE é compatível com a especificação da plataforma J2EE.

<br>
</font>
</body>

</html>
