<html>

<head>
<meta http-equiv="Content-Language" content="pt-br">
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<meta name="GENERATOR" content="Microsoft FrontPage 4.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<link REL="stylesheet" TYPE="text/css" HREF="css\padraowil.css">
<title>Glossário J2EE</title>
</head>

<body>
<font size="2">
<center><b>GLOSSÁRIO<br>J2EE 2 Platform, Enterprise Edition</b></center>
<br>
Este glossário define termos de acordo com seu uso no contexto da JAVA 2 Platform, Enterpresie Edition (Plataforma J2EE). Muitos dos termos possue uso mais genérico. Por exemplo, o termo handle é muito usado nas linguagens de programação modernas, mas aqui ele é definido em termos do seu uso na tecnologia Enterprise JavaBeans(EJB)
<p>
<center>
<b>
<a href="glossario.htm">A</a> 
<a href="b.htm">B</a>
<a href="c.htm">C</a>
<a href="d.htm">D</a>
<a href="e.htm">E</a>
<a href="f.htm">F</a>
<a href="g.htm">G</a>
<a href="h.htm">H</a>
<a href="i.htm">I</a>
<a href="j.htm">J</a>
<a href="l.htm">L</a>
<a href="m.htm">M</a>
<a href="n.htm">N</a>
<a href="o.htm">O</a>
<a href="p.htm">P</a>
<a href="q.htm">Q</a>
<a href="r.htm">R</a>
<a href="s.htm">S</a>
<a href="t.htm">T</a>
<a href="u.htm">U</a>
<a href="v.htm">V</a>
<a href="x.htm">X</a>
<a href="z.htm">Z</a>
</b>
</center>
</p>

<b>ação JSP</b><br>
Um elemento JSP que pode atuar sobre objetos implícitos e outros objetos no servidor ou pode definir novas variáveis de scripting. As ações seguem a sintaxe XML para elementos com uma tag de início, uma tag de corpo e uma tag de fim; se o corpo estiver vazio, ele também pode usar a sintaxe de tag vazia. A tag precisa usar um prefixo.
<br>
<br>
<b>ação JSP padrão</b><br>
Uma ação é definida na especificação JSP e sempre está disponível para um arquivo JSP, sem precisar ser importada
<br>
<br>
<b>ação JSP personalizada</b><br>
uma ação descrita de uma forma portátil por um descritor de biblioteca de tags e uma coleção de classes JAVA e importada para uma página JSP por uma diretiva taglib. Uma ação personalizada é invocada quando uma página JSP usa uma tag personalizada.
<br>
<br>
<b>ACID</b><br>
O acrônimo para as quatro propriedades garantidas pelas transações: atomicidade, coerência, isolamento e durabilidade.
<br>
<br>
<b>adaptador de recursos</b><br>
Um driver de software em nível de sistema usado por um contêiner EJB ou um cliente de aplicação para se conectar a uma sistema de informações da empresa. Um adaptador de recursos é ticipicamente específico a um sistema de informação da empresa. Ele está disponível como uma biblioteca e é usado dentro do espaço de endereços do servidor ou cliente que o utiliza. Um adaptador de recursos se conecta a um contênier. Os componentes de aplicação distribuídos no contêiner usam então a API do cliente (exposta pelo adaptador de recursos) ou abstrações de alto nível geradas pela ferramenta para acessar os sistema de informações básico da empresa. O adaptador de recursos e o contênier EJB coloboram para oferecer os mecanismos básicos - transações, segurança e pooling de conexão - para a conectividade com o sistema de informações da empresa.
<br>
<br>
<b>alça</b><br>
Um objeto que identifica em enterprise bean. Um cliente pode serializar a alça e, mais tarde, inverter o processo para obter uma referência ao enterprise bean.
<br>
<br>
<b>alça home</b><br>
Um objeto que pode ser usado para obter uma referência da interface home. Uma alça home pode ser serializada e gravada em armazenamento estável e desserializada para se obter a referência.
<br>
<br>
<b>ambiente de nomeação</b><br>
Um mecanimso que permite a um componente ser personalizado sem a necessidade de acessar ou mudar o código-fonte do componente. Um contêiner implementa o ambiente de nomeação do componente e lhe oferece ao componente como um contexto de nomeação JNDI. Cada componente nomeia e acessa suas entradas de ambiente usando o contexto JNDI java:comp/env. As entradas do ambiente são declarativamente especificadas no descritor de distribuição do componente.
<br>
<br>
<b>aplicação da Web</b><br>
Qualquer aplicação escrita para a Internet. Isso inclui aplicações montadas com tecnologia Java, como Java Server Pages e servlets, além daquelas embutidas em tecnologias não JAVA, como CGI e Perl.
<br>
<br>
<b>aplicação da Web distribuível</b><br>
Uma aplicação da Web que usa tecnologia J2EE escrita de modo que possa ser disposta em contêiner da Web distribuído entre várias máquinas virtuais Java rodando no mesmo host ou em hots diferentes. O descritor de distribuição para tal aplicação utiliza o elemento distribuível.
<br>
<br>
<b>aplicação distribuída</b><br>
Uma aplicação composta de componentes distinos rodando em ambientes de runtime separados, normalmente em diferentes plataformas conectadas por uma rede. As aplicações distribuídas típicas são configuradas em múltiplas camadas; por exemplo: uma aplicação de duas camadas pode consistir em apenas cliente e servidor, enquanto uma aplicação de três camadas pode consistir em camadas de clientes, middleware e servidor.
<br>
<br>
<b>aplicação em duas camadas</b><br>
Um sistema comercial estruturado como uma coleção de processos de aplicação em nível de sistema operacional executando em uma máquina cliente. Essas aplicações normalmente implementam processos comerciais e mais a lógica de apresentão GUI. As aplicações nas máquinas cliente se comunicam por uma rede com uma segunda camada em um servidor, composta de recursos da empresa. Os recursos da empresa incluem um servidor de banco de dados controlando o acesso a informações corporativas. A aplicação cliente pode acessar dados na segunda cama usando a Structured Query Language (SQL) sobre um banco de dados relacional.
<br>
<br>
<b>aplicação em três camadas</b><br>
Um sistema comercial estruturado como lógica de apresentação GUI na máquina cliente, lógica comercial em um servidor na camada intermediária e acesso a back-end para os recursos corporativos em uma terceira camada. A colocação da lógica comercial no servidor permite o melhor controle e uso dos recursos corporativos. Por exemplo, as conexões com banco de dados podem ser aproveitadas por vários clientes, evitando o overhead e permitindo o uso dos sistemas de informação legados. A arquitetura permite o controle central da segurança e a implementação da política comercial sem dores de cabeça da distribuição. Estruturas de aplicação em três camadas permitiram o desenvolvimento do processamento de transação em alto volume.
<br>
<br>
<b>aplicação J2EE</b><br>
Qualquer unidade desdobrável de funcionalidade J2EE. Isso pode ser um único módulo ou um grupo de módulos empacotados em uma arquivo an.ear com um descritor de distribuição de aplicação J2EE. As aplicações J2EE normalmente são montadas para serem distribuídas por várias camadas de computação.
<br>
<br>
<b>aplicação JMS</b><br>
Um ou mais clientes JMS que trocam mensagens
<br>
<br>
<b>aplicação JSP</b><br>
Uma aplicação da Web independente, escrita com a tecnologia JavaServer Pages, que pode conter páginas JSP, servlets, arquiteturas HTML, imagens, applets e componentes JavaBeans
<br>
<br>
<b>aplicação multicamadas</b><br>
Um sistema comercial estruturado com duas ou mais camadas. Veja em "aplicação distribuida". Uma configuração típica em duas camadas envolve uma aplicação servidora da Web para o processamento dos pedidos de protocolo HTTP e páginas HTML de produção dos recursos corporativos a serem exebidos em um browser da Web. A estrutura em camadas permite a contenção da funcionalidade em interfaces de programação de aplicação (APIs) familiares e o desenvolvimento e manutenção independentes camadas separadas.
<br>
<br>
<b>applet</b><br>
Um componente que normalmente é executado em um browser da Web, mas pode ser executado em várias outras aplicações ou dispositivos que aceitam o modelo de programação de applet. Veja "componente", neste glossário.
<br>
<br>
<b>Application Assembler</b><br>
Uma pessoa que combina contêineres e módulos em unidades de aplicação para serem distribuídas.
<br>
<br>
<b>Application Component Provider</b><br>
Um fornecedor que oferece as classes JAVA que implementam os métodos de um componente, definições de página JSP e quaisquer descritores de distribuição necessários.
<br>
<br>
<b>arquitetura de conector</b><br>
Uma arquitetura para a integração de produtos J2EE com sistemas de informação da empresa. Existem duas partes nessa arquitetura: um adaptador de recursos dado pelo fornecedor do sistema de informação da empresa e o produto J2EE que permite a conexão desse adptador de recurso. Essa arquitetura define um conjunto de contratos aos quais um adaptador de recurso precisa dar suporte para a conexão com um produto J2E; por exemplo, transações, segurança e gerenciamento de recursos.
<br>
<br>
<b>arquiteturas de aplicação em camadas</b><br>
Veja "aplicação em duas camadas", "aplicação em três camadas" e "aplicação da Web", neste glossário
<br>
<br>
<b>arquivo EAR</b><br>
Um arquivo JAR que contém uma aplicação J2EE
<br>
<br>
<b>arquivo JAR EJB</b><br>
Um arquivo JAR que contém um módulo EJB
<br>
<br>
<b>arquivo JSP</b><br>
Um arquivo que contém uma página JSP. Na especificação Servlet 2.2, um arquivo JSP precisa ter uma extensão jsp.
<br>
<br>
<b>arquivo WAR</b><br>
Um arquivo JAR que contém um módulo da Web.
<br>
<br>
<b>assinatura durável</b><br>
Em um sistema de mensagens JMS do tipo publicar/assinar, uma assinatura que continua a existir havendo ou não um objeto de assinante ativo. Se não houver um assinante ativo, o JMS retém as mensagens da assinatura até que elas sejam recebidas pelo assinante ou até que expirem.
<br>
<br>
<b>ativação</b><br>
O processo de transferência de um enterprise bean do armazenamento secundário para a memória . Veja "passividade", neste glossário.
<br>
<br>
<b>atributo de contexto</b><br>
Um objeto vinculado ao contexto associado a um servlet. Veja "contexto de servlet", neste glossário.
<br>
<br>
<b>atributo de transação</b><br>
Um valor especificado no descritor de distribuição de um enterprise bean, usado pelo contêiner EJB para controlar o escopo da transação quando os métodos do enterprise bean são invocados. Um atributo de transação pode ter os seguintes valores: Required, RequiresNew, Suports, NotSupported, Mandatory, Never.
<br>
<br>
<b>atributos de segurança</b><br>
Um conjunto de propriedades associadas a um diretor. Os atributos de segurança podem ser associados a um diretor por um protocolo de autenticação e/ou por um Product Provider de J2EE.
<br>
<br>
<b>autenticação</b><br>
O processo pelo qual uma entidade prova para outra entidade que está atuando em favor de uma identidade específica. A plataforma J2EE exige três tipos de autenticão: Veja "autenticação básica", "autenticação baseada em formulário" e "autenticação mútua", neste glossário. Ela aceita a autenticação de resumo.
<br>
<br>
<b>autenticação baseada em formulário</b><br>
Um mecanismo de autenticação em que um contêiner da Web oferece um formulário específico da aplicação para o login.
<br>
<br>
<b>autenticação básica</b><br>
Um mecanismo de autenticação no qual um servidor da Web autentica um entidade com um nome de usuário e senha, obtidos por meio do mecanismo de autenticação embutido no cliente da Web.
<br>
<br>
<b>autenticação de certificado do cliente</b><br>
Um mecanismo de autenticação em que um cliente usa um certificado X.509 para estabelecer sua identidade.
<br>
<br>
<b>autenticação de resumo</b><br>
Um mecanimo de autenticação em que um cliente da Web é autenticado em um servidor da Web enviando ao servidor um resumo de mensagem juntamente com uma mensagem de pedido HTTP. O resumo é calculado pelo emprego de um algoritmo de hash unidirecional em uma concatenação entre a mensagem do pedido HTTP e a senha do cliente. O resumo normalmente é muito menor do qeu o pedido HTTP e não contém a senha.
<br>
<br>
<b>autenticação mútua</b><br>
Um mecanimso de autenticação empregado por duas partes para a finalidade de oferecer a identidade de cada uma à outra.
<br>
<br>
<b>autorização</b><br>
O processo pelo qual o acesso a um método ou recurso é determinado. A autorização na plataforma J2EE depende da determinação de o princípio associado a um pedido através da autenticação estar em um determinado papel de segurança. Um papel de segurança é um agrupamento lógico de usuários definidos por um Application Component Provider ou Application Assembler. Um Deployer mapeia os papéis de segurança para identidade de segurança. As identidades de segurança podem ser diretores ou grupos no ambiente operacional. Veja "controle de acesso" e "papel(segurança)", neste glossário.
<br>
</font>
</body>

</html>
