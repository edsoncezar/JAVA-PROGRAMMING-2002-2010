<html>

<head>
<meta http-equiv="Content-Language" content="pt-br">
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<meta name="GENERATOR" content="Microsoft FrontPage 4.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<link REL="stylesheet" TYPE="text/css" HREF="css\padraowil.css">
<title>Glossário J2EE</title>
</head>

<body>
<font size="2">
<center><b>GLOSSÁRIO<br>J2EE 2 Platform, Enterprise Edition</b></center>
<br>
Este glossário define termos de acordo com seu uso no contexto da JAVA 2 Platform, Enterpresie Edition (Plataforma J2EE). Muitos dos termos possue uso mais genérico. Por exemplo, o termo handle é muito usado nas linguagens de programação modernas, mas aqui ele é definido em termos do seu uso na tecnologia Enterprise JavaBeans(EJB)
<p>
<center>
<b>
<a href="glossario.htm">A</a> 
<a href="b.htm">B</a>
<a href="c.htm">C</a>
<a href="d.htm">D</a>
<a href="e.htm">E</a>
<a href="f.htm">F</a>
<a href="g.htm">G</a>
<a href="h.htm">H</a>
<a href="i.htm">I</a>
<a href="j.htm">J</a>
<a href="l.htm">L</a>
<a href="m.htm">M</a>
<a href="n.htm">N</a>
<a href="o.htm">O</a>
<a href="p.htm">P</a>
<a href="q.htm">Q</a>
<a href="r.htm">R</a>
<a href="s.htm">S</a>
<a href="t.htm">T</a>
<a href="u.htm">U</a>
<a href="v.htm">V</a>
<a href="x.htm">X</a>
<a href="z.htm">Z</a>
</b>
</center>
</p>
<b>bean controlado por mensagem</b><br>
Um enterprise bean que é um consumidor de mensagem assíncrono. Ele é criado pelo contêiner para cuidar do processamento de mensagens para as quais é um consumidor. Ele não possui estado para um cliente específico, mas as variáveis de instância podem conter estado através do tratamento de mensagens do cliente, incluindo uma conexão de banco de dados aberta e uma referência de objeto com um objeto EJB. Um cliente acessa um bean controlado por mensagem enviando mensagens para o destino para o qual esse bean é um ouvinte de mensagem.
<br>
<br>
<b>bean de entidade</b><br>
Um enterprise bean que representa dados persistentes mantidos em um banco de dados. Um bean de entidade pode gerenciar sua prórpia persistência ou pode delegar essa função ao seu contêiner. Um bean de entidade pe identificado por uma chave primária. Se o contêiner em que o bean de entidade estiver hospedado falhar, o bean de entidade, sua chave primária e quaisquer referências remotas sobrevivem à falha.
<br>
<br>
<b>bean de entidade reentrante</b><br>
Um bean de entidade que pode lidar com várias chamadas simultâneas, intercaladas ou aninhadas, que não interferirão umas com as outras.
<br>
<br>
<b>bean de sessão</b><br>
Um enterprise bean que é criado por um cliente e que normalmente só existe durante uma unica sessão cliente-servidor. Um bean de sessão realiza operações, como cálculos ou acesso a um banco de dados, para o cliente. Embora um bean de sessão possa ser transicional, ele não é recuperável caso ocorra uma falha no sistema. Os objetos de bean de sessão podem ser sem estado ou podem manter o estado conversacional por métodos e transações. Se um bean de sessão mantém estado, então o contêiner EJB controla esse estado se o objeo tiver que ser removido da memória. No entanto, o próprio objeto de bean de sessão precisa gerenciar seus próprios dados persistentes.
<br>
<br>
<b>bean de sessão com estado</b><br>
Um bean de sessão com um estado conversacional.
<br>
<br>
<b>bean de sessão sem estado</b><br>
Um bean de sessão sem estado conversacional. Todas as instâncias de um bean de sessão sem estado são idênticas.
<br>
<br>
<b>biblioteca de tags JSP</b><br>
Um coleção de tags personalizadas, identificando ações personalizadas descritas por meio de um descritor de biblioteca de tag e classes Java.

<br>
</font>
</body>

</html>
